%!PS-Adobe-3.0
%%Creator: mpage 2.5.6 Januari 2008
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: plain 612 792 0 () ()
%%BoundingBox: 0 0 612 792
%%Pages: 115
%%EndComments
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Courier 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
612 792 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  README  Page 1) 161.8613 Tj
-5.2213 -28.4801 Td
(xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson\
's Unix) 365.4932 Tj
-5.2213 -37.9735 Td
(Version 6 \(v6\).  xv6 loosely follows the structure and style \
of v6,) 349.8292 Tj
-5.2213 -47.4668 Td
(but is implemented for a modern x86-based multiprocessor using \
ANSI C.) 365.4932 Tj
-5.2213 -66.4535 Td
(ACKNOWLEDGMENTS) 78.32 Tj
-5.2213 -85.4402 Td
(xv6 is inspired by John Lions's Commentary on UNIX 6th Edition \
\(Peer) 355.0506 Tj
-5.2213 -94.9336 Td
(to Peer Communications; ISBN: 1-57398-013-7; 1st edition \(June\
 14,) 344.6079 Tj
-5.2213 -104.4269 Td
(2000\)\). See also http://pdos.csail.mit.edu/6.828/2007/v6.html\
, which) 355.0506 Tj
-5.2213 -113.9203 Td
(provides pointers to on-line resources for v6.) 240.1813 Tj
-5.2213 -132.907 Td
(xv6 borrows code from the following sources:) 229.7386 Tj
15.664 -142.4004 Td
(JOS \(asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and oth\
ers\)) 344.6079 Tj
15.664 -151.8937 Td
(Plan 9 \(bootother.S, mp.h, mp.c, lapic.c\)) 214.0746 Tj
15.664 -161.3871 Td
(FreeBSD \(ioapic.c\)) 93.984 Tj
15.664 -170.8804 Td
(NetBSD \(console.c\)) 93.984 Tj
-5.2213 -189.8667 Td
(The following people made contributions:) 208.8533 Tj
15.664 -199.3601 Td
(Russ Cox \(context switching, locking\)) 193.1893 Tj
15.664 -208.8535 Td
(Cliff Frey \(MP\)) 78.32 Tj
15.664 -218.3468 Td
(Xiao Yu \(MP\)) 62.656 Tj
-5.2213 -237.3335 Td
(The code in the files that constitute xv6 is) 229.7386 Tj
-5.2213 -246.8269 Td
(Copyright 2006-2007 Frans Kaashoek, Robert Morris, and Russ Cox\
.) 334.1652 Tj
-5.2213 -265.8136 Td
(ERROR REPORTS) 67.8773 Tj
-5.2213 -284.8003 Td
(If you spot errors or have suggestions for improvement, please \
send) 349.8292 Tj
-5.2213 -294.2936 Td
(email to Frans Kaashoek and Robert Morris \(kaashoek,rtm@csail.\
mit.edu\). ) 375.9359 Tj
-5.2213 -313.2803 Td
(BUILDING AND RUNNING XV6) 125.312 Tj
-5.2213 -332.267 Td
(To build xv6 on an x86 ELF machine \(like Linux or FreeBSD\), r\
un "make".) 370.7146 Tj
-5.2213 -341.7604 Td
(On non-x86 or non-ELF machines \(like OS X, even on x86\), you \
will) 339.3866 Tj
-5.2213 -351.2538 Td
(need to install a cross-compiler gcc suite capable of producing\
 x86 ELF) 370.7146 Tj
-5.2213 -360.7471 Td
(binaries.  See http://pdos.csail.mit.edu/6.828/2007/tools.html.) 328.9439 Tj
-5.2213 -370.2405 Td
(Then run "make TOOLPREFIX=i386-jos-elf-".) 214.0746 Tj
-5.2213 -389.2272 Td
(To run xv6, you can use Bochs or QEMU, both PC simulators.) 302.8373 Tj
-5.2213 -398.7205 Td
(Bochs makes debugging easier, but QEMU is much faster. ) 287.1733 Tj
-5.2213 -408.2139 Td
(To run in Bochs, run "make bochs" and then type "c" at the boch\
s prompt.) 375.9359 Tj
-5.2213 -417.7073 Td
(To run in QEMU, run "make qemu".  Both log the xv6 screen outpu\
t to ) 355.0506 Tj
-5.2213 -427.2006 Td
(standard output.) 83.5413 Tj
-5.2213 -446.1873 Td
(To create a typeset version of the code, run "make xv6.pdf".) 313.2799 Tj
-5.2213 -455.6807 Td
(This requires the "mpage" text formatting utility.) 261.0666 Tj
-5.2213 -465.174 Td
(See http://www.mesa.nl/pub/mpage/.) 177.5253 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  table of contents  Page 1) 219.2959 Tj
-5.2213 -28.4801 Td
(The numbers to the left of the file names in the table are shee\
t numbers.) 381.1572 Tj
-5.2213 -37.9735 Td
(The source code has been printed in a double column format with\
 fifty) 360.2719 Tj
-5.2213 -47.4668 Td
(lines per column, giving one hundred lines per sheet \(or page\)\
.) 328.9439 Tj
-5.2213 -56.9602 Td
(Thus there is a convenient relationship between line numbers an\
d sheet numbers.) 412.4852 Tj
-5.2213 -85.4403 Td
(# basic headers) 78.32 Tj
-5400 TJm
(27 kalloc.c) 57.4347 Tj
-7800 TJm
(61 pipe.c) 46.992 Tj
-5.2213 -94.9336 Td
(01 types.h) 52.2133 Tj
-8400 TJm
(29 thread.h) 57.4347 Tj
-5.2213 -104.427 Td
(01 param.h) 52.2133 Tj
-8400 TJm
(29 thread.c) 57.4347 Tj
-7800 TJm
(# string operations) 99.2053 Tj
-5.2213 -113.9204 Td
(02 defs.h) 46.992 Tj
245.4027 -113.9204 Td
(63 string.c) 57.4347 Tj
-5.2213 -123.4137 Td
(04 x86.h) 41.7707 Tj
-9600 TJm
(# system calls) 73.0986 Tj
-5.2213 -132.9071 Td
(06 asm.h) 41.7707 Tj
-9600 TJm
(30 traps.h) 52.2133 Tj
-8400 TJm
(# low-level hardware) 104.4266 Tj
-5.2213 -142.4004 Td
(06 mmu.h) 41.7707 Tj
-9600 TJm
(31 vectors.pl) 67.8773 Tj
-6600 TJm
(64 mp.h) 36.5493 Tj
-5.2213 -151.8938 Td
(08 elf.h) 41.7707 Tj
-9600 TJm
(31 trapasm.S) 62.656 Tj
-7200 TJm
(65 mp.c) 36.5493 Tj
120.0907 -161.3872 Td
(32 trap.c) 46.992 Tj
-9000 TJm
(67 lapic.c) 52.2133 Tj
-5.2213 -170.8805 Td
(# startup) 46.992 Tj
-9000 TJm
(33 syscall.h) 62.656 Tj
-7200 TJm
(68 ioapic.c) 57.4347 Tj
-5.2213 -180.3739 Td
(09 bootasm.S) 62.656 Tj
-7200 TJm
(34 syscall.c) 62.656 Tj
-7200 TJm
(69 picirq.h) 57.4347 Tj
-5.2213 -189.8672 Td
(10 bootother.S) 73.0986 Tj
-6000 TJm
(36 sysproc.c) 62.656 Tj
-7200 TJm
(70 picirq.c) 57.4347 Tj
-5.2213 -199.3606 Td
(11 bootmain.c) 67.8773 Tj
245.4027 -199.3606 Td
(71 kbd.h) 41.7707 Tj
-5.2213 -208.854 Td
(12 main.c) 46.992 Tj
-9000 TJm
(# file system) 67.8773 Tj
-6600 TJm
(73 kbd.c) 41.7707 Tj
120.0907 -218.3473 Td
(39 buf.h) 41.7707 Tj
-9600 TJm
(73 console.c) 62.656 Tj
-5.2213 -227.8407 Td
(# locks) 36.5493 Tj
-10200 TJm
(40 dev.h) 41.7707 Tj
-9600 TJm
(79 timer.c) 52.2133 Tj
-5.2213 -237.334 Td
(14 spinlock.h) 67.8773 Tj
-6600 TJm
(40 fcntl.h) 52.2133 Tj
-8400 TJm
(79 pci.h) 41.7707 Tj
-5.2213 -246.8274 Td
(15 spinlock.c) 67.8773 Tj
-6600 TJm
(41 stat.h) 46.992 Tj
-9000 TJm
(80 pcireg.h) 57.4347 Tj
-5.2213 -256.3208 Td
(16 sem.h) 41.7707 Tj
-9600 TJm
(41 file.h) 46.992 Tj
-9000 TJm
(87 pci.c) 41.7707 Tj
-5.2213 -265.8141 Td
(17 sem.c) 41.7707 Tj
-9600 TJm
(42 fs.h) 36.5493 Tj
-10200 TJm
(91 e100.h) 46.992 Tj
120.0907 -275.3075 Td
(43 fsvar.h) 52.2133 Tj
-8400 TJm
(93 e100.c) 46.992 Tj
-5.2213 -284.8008 Td
(# asserts) 46.992 Tj
-9000 TJm
(43 ide.c) 41.7707 Tj
-5.2213 -294.2942 Td
(18 assert.h) 57.4347 Tj
-7800 TJm
(45 bio.c) 41.7707 Tj
-9600 TJm
(# user-level) 62.656 Tj
-5.2213 -303.7876 Td
(19 assert.c) 57.4347 Tj
-7800 TJm
(47 fs.c) 36.5493 Tj
-10200 TJm
(100 initcode.S) 73.0986 Tj
120.0907 -313.2809 Td
(54 file.c) 46.992 Tj
-9000 TJm
(100 init.c) 52.2133 Tj
-5.2213 -322.7743 Td
(# processes) 57.4347 Tj
-7800 TJm
(56 sysfile.c) 62.656 Tj
-7200 TJm
(101 usys.S) 52.2133 Tj
-5.2213 -332.2676 Td
(19 proc.h) 46.992 Tj
-9000 TJm
(60 exec.c) 46.992 Tj
-9000 TJm
(101 sh.c) 41.7707 Tj
-5.2213 -341.761 Td
(20 proc.c) 46.992 Tj
-5.2213 -351.2544 Td
(26 swtch.S) 52.2133 Tj
-8400 TJm
(# pipes) 36.5493 Tj
-5.2213 -379.7345 Td
(The source listing is preceded by a cross-reference that lists \
every defined ) 402.0426 Tj
-5.2213 -389.2278 Td
(constant, struct, global variable, and function in xv6.  Each e\
ntry gives,) 386.3786 Tj
-5.2213 -398.7212 Td
(on the same line as the name, the line number \(or, in a few ca\
ses, numbers\)) 391.5999 Tj
-5.2213 -408.2145 Td
(where the name is defined.  Successive lines in an entry list t\
he line) 365.4932 Tj
-5.2213 -417.7079 Td
(numbers where the name is used.  For example, this entry:) 297.6159 Tj
15.664 -436.6946 Td
(swtch 2256) 52.2133 Tj
36.5493 -446.188 Td
(0311 1928 1962 2255) 99.2053 Tj
36.5493 -455.6813 Td
(2256) 20.8853 Tj
-5.2214 -474.6676 Td
(indicates that swtch is defined on line 2256 and is mentioned o\
n five lines) 391.5999 Tj
-5.2214 -484.161 Td
(on sheets 03, 19, and 22.) 130.5333 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 2 2
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 1) 214.0746 Tj
-5.2213 -28.4801 Td
(acquire 1526) 62.656 Tj
-14400 TJm
(BACKSPACE 7368) 73.0986 Tj
15.664 -37.9735 Td
(0328 1526 1539 1729 1740) 125.312 Tj
-7200 TJm
(7368 7386 7413 7706 7712) 125.312 Tj
15.664 -47.4664 Td
(1754 1775 1791 2084 2247) 125.312 Tj
-4800 TJm
(balloc 4767) 57.4347 Tj
15.664 -56.9594 Td
(2295 2327 2353 2376 2391) 125.312 Tj
-7200 TJm
(4767 4789 5069 5080 5090) 125.312 Tj
15.664 -66.4524 Td
(2432 2442 2458 2496 2528) 125.312 Tj
-4800 TJm
(BBLOCK 4246) 57.4347 Tj
15.664 -75.9453 Td
(2771 2820 3253 3671 4456) 125.312 Tj
-7200 TJm
(4246 4777 4812) 73.0986 Tj
15.664 -85.4383 Td
(4493 4613 4679 4873 4908) 125.312 Tj
-4800 TJm
(bfree 4802) 52.2133 Tj
15.664 -94.9313 Td
(4924 4957 4967 4977 5473) 125.312 Tj
-7200 TJm
(4802 5110 5120) 73.0986 Tj
15.664 -104.4243 Td
(5490 5506 6212 6231 6255) 125.312 Tj
-4800 TJm
(bget 4609) 46.992 Tj
15.664 -113.9172 Td
(7543 7671 7696 7793 9615) 125.312 Tj
-7200 TJm
(4609 4640 4656) 73.0986 Tj
15.664 -123.4102 Td
(9806 9937) 46.992 Tj
-13800 TJm
(binit 4588) 52.2133 Tj
-5.2213 -132.9036 Td
(allocproc 2079) 73.0986 Tj
-15600 TJm
(0213 1286 4588) 73.0986 Tj
15.664 -142.3969 Td
(0308 2079 2160 2967) 99.2053 Tj
-7800 TJm
(bmap 5060) 46.992 Tj
-5.2213 -151.8903 Td
(alltraps 3156) 67.8773 Tj
-16200 TJm
(5060 5097 5170 5201 5237) 125.312 Tj
15.664 -161.3836 Td
(3110 3118 3132 3137 3155) 125.312 Tj
-4800 TJm
(bootmain 1167) 67.8773 Tj
15.664 -170.8766 Td
(3156) 20.8853 Tj
203.632 -170.8766 Td
(1018 1167) 46.992 Tj
-5.221 -180.37 Td
(ALT 7160) 41.7707 Tj
182.747 -180.37 Td
(bootothers 1351) 78.32 Tj
15.664 -189.8629 Td
(7160 7188 7190) 73.0986 Tj
-13200 TJm
(1258 1308 1351) 73.0986 Tj
-5.2213 -199.3563 Td
(argfd 5614) 52.2133 Tj
-15600 TJm
(BPB 4243) 41.7707 Tj
15.664 -208.8497 Td
(5614 5657 5669 5680 5694) 125.312 Tj
-7200 TJm
(4243 4246 4776 4778 4813) 125.312 Tj
15.664 -218.3426 Td
(5706) 20.8853 Tj
182.747 -218.3426 Td
(bread 4652) 52.2133 Tj
-5.221 -227.836 Td
(argint 3444) 57.4347 Tj
203.632 -227.836 Td
(0214 4652 4734 4757 4777) 125.312 Tj
15.664 -237.3293 Td
(0345 3444 3458 3474 3636) 125.312 Tj
-7200 TJm
(4812 4931 5012 5033 5082) 125.312 Tj
15.664 -246.8223 Td
(3656 3669 3706 3719 3731) 125.312 Tj
-7200 TJm
(5116 5170 5201 5237) 99.2053 Tj
15.664 -256.3153 Td
(3758 3759 3760 3774 3775) 125.312 Tj
-4800 TJm
(brelse 4674) 57.4347 Tj
15.664 -265.8083 Td
(3776 3786 3805 3816 3817) 125.312 Tj
-7200 TJm
(0215 4674 4677 4736 4760) 125.312 Tj
15.664 -275.3012 Td
(3828 3829 3831 3858 3859) 125.312 Tj
-7200 TJm
(4783 4787 4819 4940 5018) 125.312 Tj
15.664 -284.7942 Td
(3861 3874 3875 3877 3890) 125.312 Tj
-7200 TJm
(5021 5042 5087 5093 5122) 125.312 Tj
15.664 -294.2872 Td
(3891 3893 3905 3906 3907) 125.312 Tj
-7200 TJm
(5173 5205 5248 5252) 99.2053 Tj
15.664 -303.7801 Td
(3918 3931 5619 5657 5669) 125.312 Tj
-4800 TJm
(BSIZE 4207) 52.2133 Tj
15.664 -313.2731 Td
(5869 5912 5913 5957) 99.2053 Tj
-10200 TJm
(4207 4219 4237 4243 4758) 125.312 Tj
-5.2213 -322.7665 Td
(argptr 3454) 57.4347 Tj
203.6317 -322.7665 Td
(5170 5171 5172 5193 5194) 125.312 Tj
15.6637 -332.2594 Td
(0346 3454 3707 3708 3720) 125.312 Tj
-7200 TJm
(5201 5202 5203 5236 5237) 125.312 Tj
15.6637 -341.7524 Td
(3721 3761 3762 3777 3778) 125.312 Tj
-7200 TJm
(5239) 20.8853 Tj
15.6637 -351.2454 Td
(3806 3807 3830 3860 3862) 125.312 Tj
-4800 TJm
(buf 3950) 41.7707 Tj
15.6637 -360.7383 Td
(3863 3876 3892 3894 3895) 125.312 Tj
-7200 TJm
(0203 0214 0215 0216 0258) 125.312 Tj
15.6637 -370.2313 Td
(3919 3920 3932 3933 5657) 125.312 Tj
-7200 TJm
(3950 3954 3955 3956 4360) 125.312 Tj
15.6637 -379.7243 Td
(5669 5706 5982) 73.0986 Tj
-13200 TJm
(4376 4427 4454 4482 4484) 125.312 Tj
-5.2216 -389.2176 Td
(argstr 3471) 57.4347 Tj
203.6314 -389.2176 Td
(4487 4577 4579 4585 4590) 125.312 Tj
15.6634 -398.711 Td
(0347 3471 5718 5774 5869) 125.312 Tj
-7200 TJm
(4597 4608 4611 4621 4651) 125.312 Tj
15.6634 -408.204 Td
(5911 5926 5938 5957) 99.2053 Tj
-10200 TJm
(4654 4664 4674 4689 4719) 125.312 Tj
-5.2219 -417.6973 Td
(assert 1853) 57.4347 Tj
203.6311 -417.6973 Td
(4731 4754 4770 4804 4918) 125.312 Tj
15.6631 -427.1907 Td
(1700 1714 1723 1853 1900) 125.312 Tj
-7200 TJm
(5005 5030 5063 5105 5155) 125.312 Tj
15.6631 -436.6837 Td
(1907 8755 8806 8807 8808) 125.312 Tj
-7200 TJm
(5183 5230 7454 7466 7469) 125.312 Tj
15.6631 -446.1766 Td
(8809 8810) 46.992 Tj
-16200 TJm
(7483 7504 7516 7519 7522) 125.312 Tj
-5.2222 -455.67 Td
(BACK 10161) 52.2133 Tj
203.6308 -455.67 Td
(7666 7673 7683 7704 7717) 125.312 Tj
15.6628 -465.1634 Td
(10161 10274 10420 10689) 120.0906 Tj
-7800 TJm
(7830 10284 10287 10288) 114.8693 Tj
-5.2225 -474.6563 Td
(backcmd 10196 10414) 99.2053 Tj
-12600 TJm
(10289 10303 10315 10316) 120.0906 Tj
15.6628 -484.1497 Td
(10196 10209 10275 10414) 120.0906 Tj
-7800 TJm
(10319 10320 10321 10325) 120.0906 Tj
15.6628 -493.6427 Td
(10416 10530 10655 10690) 120.0906 Tj
-5400 TJm
(bufhead 4585) 62.656 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 2) 214.0746 Tj
15.664 -28.4801 Td
(4585 4595 4596 4598 4599) 125.312 Tj
-7200 TJm
(10408 10409 10410 10413) 120.0906 Tj
15.664 -37.9735 Td
(4600 4601 4617 4631 4683) 125.312 Tj
-7200 TJm
(10414 10416 10418 10419) 120.0906 Tj
15.664 -47.4668 Td
(4684 4685 4686) 73.0986 Tj
-13200 TJm
(10420 10421 10422 10500) 120.0906 Tj
-5.2213 -56.9602 Td
(buf_table_lock 4580) 99.2053 Tj
-12600 TJm
(10501 10502 10503 10505) 120.0906 Tj
15.664 -66.4535 Td
(4580 4592 4613 4621 4625) 125.312 Tj
-7200 TJm
(10509 10512 10518 10519) 120.0906 Tj
15.664 -75.9469 Td
(4636 4679 4691) 73.0986 Tj
-13200 TJm
(10522 10525 10527 10530) 120.0906 Tj
-5.2213 -85.4403 Td
(bwrite 4664) 57.4347 Tj
203.6317 -85.4403 Td
(10534 10536 10550 10553) 120.0906 Tj
15.6637 -94.9336 Td
(0216 4664 4667 4759 4782) 125.312 Tj
-7200 TJm
(10555 10558 10560 10563) 120.0906 Tj
15.6637 -104.427 Td
(4818 5017 5041 5091 5204) 125.312 Tj
-7200 TJm
(10564 10575 10578 10581) 120.0906 Tj
-5.2216 -113.9203 Td
(bzero 4752) 52.2133 Tj
203.6314 -113.9203 Td
(10585 10600 10603 10608) 120.0906 Tj
15.6634 -123.4137 Td
(4752 4808) 46.992 Tj
-16200 TJm
(10612 10613 10616 10621) 120.0906 Tj
-5.2219 -132.9071 Td
(B_BUSY 3959) 57.4347 Tj
203.6311 -132.9071 Td
(10622 10628 10637 10638) 120.0906 Tj
15.6631 -142.4004 Td
(3959 4486 4618 4620 4624) 125.312 Tj
-7200 TJm
(10644 10645 10651 10652) 120.0906 Tj
15.6631 -151.8938 Td
(4632 4633 4666 4676 4688) 125.312 Tj
-7200 TJm
(10661 10664 10666 10672) 120.0906 Tj
-5.2222 -161.3871 Td
(B_DIRTY 3961) 62.656 Tj
203.6308 -161.3871 Td
(10673 10678 10684 10690) 120.0906 Tj
15.6628 -170.8805 Td
(3961 4439 4463 4468 4488) 125.312 Tj
-7200 TJm
(10691 10694) 57.4347 Tj
15.6628 -180.3739 Td
(4506 4668) 46.992 Tj
-13800 TJm
(cmpxchg 0539) 62.656 Tj
-5.2225 -189.8668 Td
(B_VALID 3960) 62.656 Tj
203.6305 -189.8668 Td
(0539 1550) 46.992 Tj
15.6625 -199.3602 Td
(3960 4467 4488 4506 4618) 125.312 Tj
-4800 TJm
(CONSOLE 4007) 62.656 Tj
15.6625 -208.8535 Td
(4657) 20.8853 Tj
203.6305 -208.8535 Td
(4007 7856 7857) 73.0986 Tj
-5.2225 -218.3469 Td
(C 7181 7689) 57.4347 Tj
-15000 TJm
(console_init 7851) 88.7626 Tj
15.6628 -227.8403 Td
(7181 7229 7254 7255 7256) 125.312 Tj
-7200 TJm
(0219 1295 7851) 73.0986 Tj
15.6628 -237.3336 Td
(7257 7258 7260 7689 7699) 125.312 Tj
-4800 TJm
(console_intr 7692) 88.7626 Tj
15.6628 -246.827 Td
(7702 7709 7719 7831) 99.2053 Tj
-10200 TJm
(0221 7348 7692) 73.0986 Tj
-5.2225 -256.3203 Td
(CAPSLOCK 7162) 67.8773 Tj
-13800 TJm
(console_lock 7372) 88.7626 Tj
15.6628 -265.8137 Td
(7162 7195 7336) 73.0986 Tj
-13200 TJm
(7372 7543 7662 7671 7674) 125.312 Tj
-5.2225 -275.3071 Td
(cga_putc 7401) 67.8773 Tj
-16200 TJm
(7853) 20.8853 Tj
15.6628 -284.8004 Td
(7401 7442) 46.992 Tj
-13800 TJm
(console_read 7780) 88.7626 Tj
-5.2225 -294.2938 Td
(cli 0551) 41.7707 Tj
203.6305 -294.2938 Td
(7780 7857) 46.992 Tj
15.6625 -303.7871 Td
(0551 0553 0964 1077 1545) 125.312 Tj
-4800 TJm
(console_write 7666) 93.984 Tj
15.6625 -313.2805 Td
(7436 7885) 46.992 Tj
-16200 TJm
(7666 7856) 46.992 Tj
-5.2228 -322.7739 Td
(cmd 10165) 46.992 Tj
-16200 TJm
(cons_putc 7433) 73.0986 Tj
15.6625 -332.2668 Td
(8076 8077 9222 9238 9254) 125.312 Tj
-7200 TJm
(7433 7475 7480 7483 7522) 125.312 Tj
15.6625 -341.7602 Td
(9490 9491 9492 9493 9584) 125.312 Tj
-7200 TJm
(7558 7582 7620 7625 7653) 125.312 Tj
15.6625 -351.2536 Td
(9585 9586 9588 9603 9604) 125.312 Tj
-7200 TJm
(7654 7673 7706 7712 7718) 125.312 Tj
15.6625 -360.7469 Td
(9605 9607 9817 9874 9875) 125.312 Tj
-4800 TJm
(context 1968) 62.656 Tj
15.6625 -370.2403 Td
(9876 9877 9878 9881 9882) 125.312 Tj
-7200 TJm
(0204 0325 1968 1994 2018) 125.312 Tj
15.6625 -379.7336 Td
(9886 10165 10177 10186) 114.8693 Tj
-8400 TJm
(2191 2192 2193 2263 2288) 125.312 Tj
15.6625 -389.227 Td
(10187 10192 10193 10198) 120.0906 Tj
-7800 TJm
(2602 2981 2987 2988 2989) 125.312 Tj
15.6625 -398.7204 Td
(10202 10206 10215 10218) 120.0906 Tj
-7800 TJm
(2990 2991) 46.992 Tj
15.6625 -408.2137 Td
(10223 10231 10237 10241) 120.0906 Tj
-5400 TJm
(copyproc 2154) 67.8773 Tj
15.6625 -417.7071 Td
(10251 10275 10277 10352) 120.0906 Tj
-7800 TJm
(0307 2154 2207 3612) 99.2053 Tj
15.6625 -427.2004 Td
(10355 10357 10358 10359) 120.0906 Tj
-5400 TJm
(cp 2010) 36.5493 Tj
15.6625 -436.6938 Td
(10360 10363 10364 10366) 120.0906 Tj
-7800 TJm
(2010 2107 2110 2111 2112) 125.312 Tj
15.6625 -446.1872 Td
(10368 10369 10370 10371) 120.0906 Tj
-7800 TJm
(2113 2114 2115 2116 2259) 125.312 Tj
15.6625 -455.6805 Td
(10372 10373 10374 10375) 120.0906 Tj
-7800 TJm
(2268 2281 2288 2296 2309) 125.312 Tj
15.6625 -465.1739 Td
(10376 10379 10380 10382) 120.0906 Tj
-7800 TJm
(2320 2321 2331 2332 2336) 125.312 Tj
15.6625 -474.6672 Td
(10384 10385 10386 10387) 120.0906 Tj
-7800 TJm
(2343 2344 2363 2381 2382) 125.312 Tj
15.6625 -484.1606 Td
(10388 10389 10400 10401) 120.0906 Tj
-7800 TJm
(2386 2482 2487 2488 2489) 125.312 Tj
15.6625 -493.654 Td
(10403 10405 10406 10407) 120.0906 Tj
-7800 TJm
(2493 2494 2499 2502 2509) 125.312 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 3 3
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 3) 214.0746 Tj
15.664 -28.4801 Td
(2510 2513 2514 2515 2536) 125.312 Tj
-4800 TJm
(CUC_START 9138) 73.0986 Tj
15.664 -37.9735 Td
(2562 2568 3238 3240 3242) 125.312 Tj
-7200 TJm
(9138 9681 9845) 73.0986 Tj
15.664 -47.4668 Td
(3284 3295 3296 3305 3310) 125.312 Tj
-4800 TJm
(delay 9474) 52.2133 Tj
15.664 -56.9602 Td
(3446 3460 3462 3476 3567) 125.312 Tj
-7200 TJm
(9474 9489) 46.992 Tj
15.664 -66.4535 Td
(3569 3572 3573 3612 3644) 125.312 Tj
-4800 TJm
(devsw 4000) 52.2133 Tj
15.664 -75.9469 Td
(3660 3674 5362 5621 5638) 125.312 Tj
-7200 TJm
(4000 4005 5159 5161 5186) 125.312 Tj
15.664 -85.4403 Td
(5639 5655 5657 5659 5667) 125.312 Tj
-7200 TJm
(5188 5457 7856 7857) 99.2053 Tj
15.664 -94.9336 Td
(5669 5671 5696 5946 5947) 125.312 Tj
-4800 TJm
(dinode 4223) 57.4347 Tj
15.664 -104.427 Td
(5963 5969 5989 6104 6107) 125.312 Tj
-7200 TJm
(4223 4237 4919 4933 5006) 125.312 Tj
15.664 -113.9203 Td
(6108 6109 6110 6111 6112) 125.312 Tj
-7200 TJm
(5013 5031 5034) 73.0986 Tj
15.664 -123.4137 Td
(6234 6257 7796) 73.0986 Tj
-10800 TJm
(dirent 4250) 57.4347 Tj
-5.2213 -132.9071 Td
(cprintf 7534) 62.656 Tj
203.6317 -132.9071 Td
(4250 5231 5238 5239 5262) 125.312 Tj
15.6637 -142.4004 Td
(0220 1283 1325 1530 1536) 125.312 Tj
-7200 TJm
(5755 5770) 46.992 Tj
15.6637 -151.8938 Td
(1538 1907 2540 2541 2546) 125.312 Tj
-4800 TJm
(dirlink 5259) 62.656 Tj
15.6637 -161.3871 Td
(2600 2604 2606 2736 2760) 125.312 Tj
-7200 TJm
(0238 5259 5274 5282 5734) 125.312 Tj
15.6637 -170.8805 Td
(2764 2814 2836 2844 2854) 125.312 Tj
-7200 TJm
(5842 5854) 46.992 Tj
15.6637 -180.3739 Td
(3269 3286 3293 3571 5509) 125.312 Tj
-4800 TJm
(dirlookup 5227) 73.0986 Tj
15.6637 -189.8672 Td
(5527 6687 6912 7534 7736) 125.312 Tj
-7200 TJm
(0239 5227 5234 5266 5377) 125.312 Tj
15.6637 -199.3606 Td
(7741 7816 7820 7822 7824) 125.312 Tj
-7200 TJm
(5786 5822) 46.992 Tj
15.6637 -208.8539 Td
(7870 7874 7875 7887 7888) 125.312 Tj
-4800 TJm
(DIRSIZ 4249) 57.4347 Tj
15.6637 -218.3473 Td
(7889 7892 8846 8892 8910) 125.312 Tj
-7200 TJm
(4249 4252 5220 5279 5327) 125.312 Tj
15.6637 -227.8407 Td
(8919 8932 8943 8957 8996) 125.312 Tj
-7200 TJm
(5328 5394 5715 5771 5816) 125.312 Tj
15.6637 -237.334 Td
(9002 9010 9011 9014 9413) 125.312 Tj
-4800 TJm
(disk_1_present 4378) 99.2053 Tj
15.6637 -246.8274 Td
(9424 9431 9518 9519 9522) 125.312 Tj
-7200 TJm
(4378 4415 4490) 73.0986 Tj
15.6637 -256.3207 Td
(9524 9526 9528 9530 9532) 125.312 Tj
-4800 TJm
(DPL_USER 0714) 67.8773 Tj
15.6637 -265.8141 Td
(9534 9644 9676 9679 9707) 125.312 Tj
-7200 TJm
(0714 2139 2140 2212 2213) 125.312 Tj
15.6637 -275.3075 Td
(9718 9722 9724 9726 9733) 125.312 Tj
-7200 TJm
(3223 3305) 46.992 Tj
15.6637 -284.8008 Td
(9734 9735) 46.992 Tj
-13800 TJm
(dummy_ide_intr 4395) 99.2053 Tj
-5.2216 -294.2942 Td
(cpu 2016 6786) 67.8773 Tj
-16200 TJm
(4395 4409) 46.992 Tj
15.6637 -303.7875 Td
(0261 0276 1283 1314 1315) 125.312 Tj
-4800 TJm
(E0ESC 7166) 52.2133 Tj
15.6637 -313.2809 Td
(1325 1327 1330 1333 1334) 125.312 Tj
-7200 TJm
(7166 7320 7324 7325 7327) 125.312 Tj
15.6637 -322.7743 Td
(1355 1362 1408 1517 1548) 125.312 Tj
-7200 TJm
(7330) 20.8853 Tj
15.6637 -332.2676 Td
(1549 1561 1573 1582 1622) 125.312 Tj
-4800 TJm
(E100_CB_SIZE 9116) 88.7626 Tj
15.6637 -341.761 Td
(2010 2016 2028 2124 2126) 125.312 Tj
-7200 TJm
(9116 9753 9764 9870 9874) 125.312 Tj
15.6637 -351.2543 Td
(2263 2288 3249 3252 3269) 125.312 Tj
-7200 TJm
(9886) 20.8853 Tj
15.6637 -360.7477 Td
(3286 3287 3294 3295 3300) 125.312 Tj
-4800 TJm
(e100_cu_command 9582) 104.4266 Tj
15.6637 -370.2411 Td
(6562 6563 6786 7887) 99.2053 Tj
-10200 TJm
(9398 9582 9681 9710 9840) 125.312 Tj
-5.2216 -379.7344 Td
(cpuid 0521) 52.2133 Tj
203.6314 -379.7344 Td
(9845 9851) 46.992 Tj
15.6634 -389.2278 Td
(0521 0525 1329 1555 1577) 125.312 Tj
-4800 TJm
(E100_CU_RING_SIZE 9114) 114.8693 Tj
-5.2219 -398.7211 Td
(create 5812) 57.4347 Tj
203.6311 -398.7211 Td
(9114 9421 9435) 73.0986 Tj
15.6631 -408.2145 Td
(5812 5855 5873 5914 5926) 125.312 Tj
-4800 TJm
(e100_get_state 9501) 99.2053 Tj
-5.2222 -417.7079 Td
(CRTPORT 7366) 62.656 Tj
203.6308 -417.7079 Td
(9501 9517 9649) 73.0986 Tj
15.6628 -427.2012 Td
(7366 7406 7407 7408 7409) 125.312 Tj
-4800 TJm
(e100_intr 9629) 73.0986 Tj
15.6628 -436.6946 Td
(7425 7426 7427 7428) 99.2053 Tj
-10200 TJm
(9400 9465 9629 9644) 99.2053 Tj
-5.2225 -446.1879 Td
(CTL 7159) 41.7707 Tj
182.7455 -446.1879 Td
(E100_IOPORT_SIZE 9113) 109.648 Tj
15.6625 -455.6813 Td
(7159 7185 7189 7335) 99.2053 Tj
-10200 TJm
(9113 9451) 46.992 Tj
-5.2228 -465.1747 Td
(CUC_DUMP_RESET 9143) 99.2053 Tj
-10200 TJm
(E100_MAX_DEVS 9111) 93.984 Tj
15.6625 -474.6676 Td
(9143 9492) 46.992 Tj
-16200 TJm
(9111 9393) 46.992 Tj
-5.2228 -484.161 Td
(CUC_RESUME 9139) 78.32 Tj
-12600 TJm
(e100_print_state 9515) 109.648 Tj
15.6625 -493.6543 Td
(9139 9710 9840 9851) 99.2053 Tj
-10200 TJm
(9395 9457 9515) 73.0986 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 4) 214.0746 Tj
-5.2213 -28.4801 Td
(e100_put_state 9509) 99.2053 Tj
-12600 TJm
(10216 10225 10235 10280) 120.0906 Tj
15.664 -37.9735 Td
(9396 9509 9652) 73.0986 Tj
-13200 TJm
(10328 10335) 57.4347 Tj
-5.2213 -47.4664 Td
(e100_read_scb_command 9570) 135.7546 Tj
-6000 TJm
(fdalloc 5633) 62.656 Tj
15.664 -56.9598 Td
(9397 9570 9589 9608) 99.2053 Tj
-10200 TJm
(5633 5682 5885 5987) 99.2053 Tj
-5.2213 -66.4531 Td
(e100_receive 9925) 88.7626 Tj
-11400 TJm
(fetchint 3416) 67.8773 Tj
15.664 -75.9465 Td
(7815 9027 9106 9925) 99.2053 Tj
-10200 TJm
(0348 3416 3446 5963) 99.2053 Tj
-5.2213 -85.4399 Td
(e100_receive_dev 9933) 109.648 Tj
-9000 TJm
(fetchstr 3428) 67.8773 Tj
15.664 -94.9332 Td
(9404 9929 9933) 73.0986 Tj
-13200 TJm
(0349 3428 3476 5969) 99.2053 Tj
-5.2213 -104.4266 Td
(e100_reset 9486) 78.32 Tj
-12600 TJm
(file 4150) 46.992 Tj
15.664 -113.9199 Td
(9394 9454 9486) 73.0986 Tj
-13200 TJm
(0205 0229 0230 0231 0233) 125.312 Tj
-5.2213 -123.4133 Td
(E100_RFD_SIZE 9117) 93.984 Tj
-13200 TJm
(0234 0235 0301 1904 1908) 125.312 Tj
15.664 -132.9067 Td
(9117 9890 9893 9896 9909) 125.312 Tj
-7200 TJm
(1992 4150 5453 5459 5468) 125.312 Tj
-5.2213 -142.4 Td
(e100_ru_command 9601) 104.4266 Tj
-12000 TJm
(5475 5476 5477 5479 5487) 125.312 Tj
15.664 -151.8934 Td
(9399 9601 9921 9958) 99.2053 Tj
-10200 TJm
(5488 5502 5504 5510 5528) 125.312 Tj
-5.2213 -161.3867 Td
(E100_RU_RING_SIZE 9115) 114.8693 Tj
-10800 TJm
(5534 5552 5572 5608 5614) 125.312 Tj
15.664 -170.8801 Td
(9115 9428 9436) 73.0986 Tj
-13200 TJm
(5617 5633 5653 5665 5677) 125.312 Tj
-5.2213 -180.3735 Td
(e100_ru_start 9918) 93.984 Tj
-13200 TJm
(5692 5703 5866 5979 6155) 125.312 Tj
15.664 -189.8664 Td
(9401 9469 9918) 73.0986 Tj
-13200 TJm
(6170 10178 10233 10234) 114.8693 Tj
-5.2213 -199.3598 Td
(e100_rx_thread 9612) 99.2053 Tj
-12600 TJm
(10364 10372 10572) 88.7626 Tj
15.664 -208.8532 Td
(9405 9468 9612) 73.0986 Tj
-10800 TJm
(filealloc 5469) 73.0986 Tj
-5.2213 -218.3465 Td
(e100_send 9859) 73.0986 Tj
-15600 TJm
(0229 5469 5885 6176) 99.2053 Tj
15.664 -227.8399 Td
(7813 9038 9105 9859) 99.2053 Tj
-7800 TJm
(fileclose 5502) 73.0986 Tj
-5.2213 -237.3332 Td
(e100_send_dev 9801) 93.984 Tj
-13200 TJm
(0230 2488 5502 5510 5528) 125.312 Tj
15.664 -246.8266 Td
(9801 9863) 46.992 Tj
-16200 TJm
(5697 5887 5990 5991 6200) 125.312 Tj
-5.2213 -256.32 Td
(e100_set_gp 9576) 83.5413 Tj
-14400 TJm
(6204) 20.8853 Tj
15.664 -265.8133 Td
(9576 9587 9606) 73.0986 Tj
-10800 TJm
(filedup 5488) 62.656 Tj
-5.2213 -275.3067 Td
(elfhdr 0855) 57.4347 Tj
203.6317 -275.3067 Td
(0231 2185 5488 5492 5684) 125.312 Tj
15.6637 -284.8 Td
(0855 1169 1173 6014) 99.2053 Tj
-7800 TJm
(fileinit 5462) 67.8773 Tj
-5.2216 -294.2934 Td
(ELF_MAGIC 0852) 73.0986 Tj
-15600 TJm
(0232 1292 5462) 73.0986 Tj
15.6637 -303.7868 Td
(0852 1179 6030) 73.0986 Tj
-10800 TJm
(fileread 5552) 67.8773 Tj
-5.2216 -313.2801 Td
(ELF_PROG_LOAD 0886) 93.984 Tj
-13200 TJm
(0233 5552 5567 5659) 99.2053 Tj
15.6637 -322.7735 Td
(0886 6035 6064) 73.0986 Tj
-10800 TJm
(filestat 5534) 67.8773 Tj
-5.2216 -332.2664 Td
(EOI 6710) 41.7707 Tj
203.6314 -332.2664 Td
(0234 5534 5708) 73.0986 Tj
15.6634 -341.7598 Td
(6710 6773 6798) 73.0986 Tj
-10800 TJm
(filewrite 5572) 73.0986 Tj
-5.2219 -351.2532 Td
(ERROR 6728) 52.2133 Tj
203.6311 -351.2532 Td
(0235 5572 5587 5671) 99.2053 Tj
15.6631 -360.7465 Td
(6728 6766 8846) 73.0986 Tj
-10800 TJm
(file_table_lock 5458) 104.4266 Tj
-5.2222 -370.2399 Td
(ESR 6713) 41.7707 Tj
203.6308 -370.2399 Td
(5458 5464 5473 5478 5482) 125.312 Tj
15.6628 -379.7332 Td
(6713 6769 6770) 73.0986 Tj
-13200 TJm
(5490 5494 5506 5513 5519) 125.312 Tj
-5.2225 -389.2266 Td
(ether_e100_attach 9411) 114.8693 Tj
-8400 TJm
(FL_IF 0662) 52.2133 Tj
15.6628 -398.72 Td
(8790 9104 9411) 73.0986 Tj
-13200 TJm
(0662 2216) 46.992 Tj
-5.2225 -408.2133 Td
(EXEC 10157) 52.2133 Tj
-15600 TJm
(fmt_types 7525) 73.0986 Tj
15.6628 -417.7067 Td
(10157 10222 10359 10665) 120.0906 Tj
-7800 TJm
(7525 7539) 46.992 Tj
-5.2225 -427.2 Td
(execcmd 10169 10353) 99.2053 Tj
-10200 TJm
(fork1 10339) 57.4347 Tj
15.6628 -436.6934 Td
(10169 10210 10223 10353) 120.0906 Tj
-7800 TJm
(10200 10242 10254 10261) 120.0906 Tj
15.6628 -446.1868 Td
(10355 10621 10627 10628) 120.0906 Tj
-7800 TJm
(10276 10324 10339) 88.7626 Tj
15.6628 -455.6801 Td
(10656 10666) 57.4347 Tj
-12600 TJm
(forkret 2303) 62.656 Tj
-5.2225 -465.1735 Td
(exit 2477) 46.992 Tj
203.6305 -465.1735 Td
(2066 2192 2303) 73.0986 Tj
15.6625 -474.6665 Td
(0309 2477 2517 2991 3239) 125.312 Tj
-4800 TJm
(forkret1 3184) 67.8773 Tj
15.6625 -484.1598 Td
(3243 3306 3621 10015) 104.4266 Tj
-9600 TJm
(2067 2309 3183 3184) 99.2053 Tj
15.6625 -493.6532 Td
(10018 10076 10081 10111) 120.0906 Tj
-5400 TJm
(gatedesc 0780) 67.8773 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 4 4
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 5) 214.0746 Tj
15.664 -28.4801 Td
(0485 0488 0780 3211) 99.2053 Tj
-10200 TJm
(4383 4408 4433 4463) 99.2053 Tj
-5.2213 -37.9735 Td
(getcallerpcs 1602) 88.7626 Tj
-11400 TJm
(idtinit 3229) 62.656 Tj
15.664 -47.4664 Td
(0329 1562 1602 2602 7872) 125.312 Tj
-7200 TJm
(0357 1291 1326 3229) 99.2053 Tj
15.664 -56.9598 Td
(7890) 20.8853 Tj
182.747 -56.9598 Td
(idup 4906) 46.992 Tj
-5.221 -66.4531 Td
(getcmd 10284) 62.656 Tj
203.632 -66.4531 Td
(0241 2186 4906 5362) 99.2053 Tj
15.664 -75.9465 Td
(10284 10315) 57.4347 Tj
-12600 TJm
(iget 4869) 46.992 Tj
-5.2213 -85.4399 Td
(gettoken 10430) 73.0986 Tj
-15600 TJm
(4869 4890 5019 5249 5360) 125.312 Tj
15.664 -94.9332 Td
(10430 10529 10533 10557) 120.0906 Tj
-5400 TJm
(iinit 4861) 52.2133 Tj
15.664 -104.4266 Td
(10570 10571 10607 10611) 120.0906 Tj
-7800 TJm
(0242 1293 4861) 73.0986 Tj
15.664 -113.9199 Td
(10633) 26.1067 Tj
-16200 TJm
(ilock 4916) 52.2133 Tj
-5.2213 -123.4133 Td
(growproc 2103) 67.8773 Tj
-16200 TJm
(0243 4916 4922 4943 5366) 125.312 Tj
15.664 -132.9067 Td
(0310 2103 3658) 73.0986 Tj
-13200 TJm
(5537 5561 5581 5722 5733) 125.312 Tj
-5.2213 -142.4 Td
(holding 1620) 62.656 Tj
203.6317 -142.4 Td
(5743 5778 5790 5820 5824) 125.312 Tj
15.6637 -151.8934 Td
(0330 1528 1569 1620 2283) 125.312 Tj
-7200 TJm
(5836 5878 5940 6021 7675) 125.312 Tj
-5.2216 -161.3867 Td
(ialloc 5002) 57.4347 Tj
203.6314 -161.3867 Td
(7798 7845) 46.992 Tj
15.6634 -170.8801 Td
(0240 5002 5023 5832) 99.2053 Tj
-7800 TJm
(inb 0405) 41.7707 Tj
-5.2219 -180.3735 Td
(IBLOCK 4240) 57.4347 Tj
203.6311 -180.3735 Td
(0405 0978 0986 1204 4387) 125.312 Tj
15.6631 -189.8664 Td
(4240 4931 5012 5033) 99.2053 Tj
-10200 TJm
(4414 6696 7314 7317 7384) 125.312 Tj
-5.2222 -199.3598 Td
(ICRHI 6721) 52.2133 Tj
203.6308 -199.3598 Td
(7407 7409 9572) 73.0986 Tj
15.6628 -208.8532 Td
(6721 6776 6820 6826) 99.2053 Tj
-7800 TJm
(INDIRECT 4218) 67.8773 Tj
-5.2225 -218.3465 Td
(ICRLO 6714) 52.2133 Tj
203.6305 -218.3465 Td
(4218 5077 5080 5115 5116) 125.312 Tj
15.6625 -227.8399 Td
(6714 6777 6778 6821 6827) 125.312 Tj
-7200 TJm
(5123 8024) 46.992 Tj
-5.2228 -237.3332 Td
(ID 6707) 36.5493 Tj
182.7452 -237.3332 Td
(initlock 1513) 67.8773 Tj
15.6622 -246.8266 Td
(6707 6789 8045 8410 8477) 125.312 Tj
-7200 TJm
(0331 1513 1715 2072 2732) 125.312 Tj
15.6622 -256.32 Td
(8696 8701 8708 8710) 99.2053 Tj
-10200 TJm
(3225 4405 4592 4863 5464) 125.312 Tj
-5.2231 -265.8133 Td
(IDE_BSY 4363) 62.656 Tj
203.6299 -265.8133 Td
(6184 7853 7854 9442 9443) 125.312 Tj
15.6619 -275.3067 Td
(4363 4387) 46.992 Tj
-16200 TJm
(9444) 20.8853 Tj
-5.2234 -284.8 Td
(IDE_CMD_READ 4368) 88.7626 Tj
-11400 TJm
(inl 0414) 41.7707 Tj
15.6619 -294.2934 Td
(4368 4443) 46.992 Tj
-16200 TJm
(0414 8821) 46.992 Tj
-5.2234 -303.7868 Td
(IDE_CMD_WRITE 4369) 93.984 Tj
-10800 TJm
(inode 4302) 52.2133 Tj
15.6619 -313.2801 Td
(4369 4440) 46.992 Tj
-16200 TJm
(0206 0238 0239 0240 0241) 125.312 Tj
-5.2234 -322.7735 Td
(IDE_DF 4365) 57.4347 Tj
203.6296 -322.7735 Td
(0243 0244 0245 0246 0247) 125.312 Tj
15.6616 -332.2664 Td
(4365 4389) 46.992 Tj
-16200 TJm
(0249 0250 0251 0252 0253) 125.312 Tj
-5.2237 -341.7598 Td
(IDE_DRDY 4364) 67.8773 Tj
-16200 TJm
(1993 4001 4002 4156 4302) 125.312 Tj
15.6616 -351.2532 Td
(4364 4387) 46.992 Tj
-16200 TJm
(4725 4857 4868 4871 4877) 125.312 Tj
-5.2237 -360.7465 Td
(IDE_ERR 4366) 62.656 Tj
203.6293 -360.7465 Td
(4905 4906 4916 4952 4965) 125.312 Tj
15.6613 -370.2399 Td
(4366 4389) 46.992 Tj
-16200 TJm
(4987 5001 5028 5060 5102) 125.312 Tj
-5.224 -379.7332 Td
(ide_init 4401) 67.8773 Tj
-16200 TJm
(5132 5152 5180 5226 5227) 125.312 Tj
15.6613 -389.2266 Td
(0256 1296 4401) 73.0986 Tj
-13200 TJm
(5259 5263 5353 5356 5391) 125.312 Tj
-5.224 -398.72 Td
(ide_intr 4452) 67.8773 Tj
-16200 TJm
(5400 5716 5752 5769 5811) 125.312 Tj
15.6613 -408.2133 Td
(0257 3261 4452) 73.0986 Tj
-13200 TJm
(5815 5867 5906 5924 5936) 125.312 Tj
-5.224 -417.7067 Td
(ide_lock 4375) 67.8773 Tj
-16200 TJm
(6015 7666 7780) 73.0986 Tj
15.6613 -427.2 Td
(4375 4405 4456 4458 4475) 125.312 Tj
-4800 TJm
(INPUT_BUF 7680) 73.0986 Tj
15.6613 -436.6934 Td
(4493 4508 4512) 73.0986 Tj
-13200 TJm
(7680 7683 7704 7716 7717) 125.312 Tj
-5.224 -446.1868 Td
(ide_rw 4482) 57.4347 Tj
203.629 -446.1868 Td
(7719 7830) 46.992 Tj
15.661 -455.6801 Td
(0258 4482 4487 4489 4658) 125.312 Tj
-4800 TJm
(insl 0432) 46.992 Tj
15.661 -465.1735 Td
(4669) 20.8853 Tj
203.629 -465.1735 Td
(0432 1223 4464) 73.0986 Tj
-5.224 -474.6665 Td
(ide_start_request 4427) 114.8693 Tj
-8400 TJm
(INT_DISABLED 6869) 88.7626 Tj
15.6613 -484.1598 Td
(4379 4427 4431 4473 4502) 125.312 Tj
-7200 TJm
(6869 6917) 46.992 Tj
-5.224 -493.6532 Td
(ide_wait_ready 4383) 99.2053 Tj
-10200 TJm
(int_enabled 1520) 83.5413 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 6) 214.0746 Tj
15.664 -28.4801 Td
(1520 1579) 46.992 Tj
-13800 TJm
(isdirempty 5752) 78.32 Tj
-5.2213 -37.9735 Td
(inw 0423) 41.7707 Tj
203.6317 -37.9735 Td
(5752 5759 5794) 73.0986 Tj
15.6637 -47.4664 Td
(0423 9504) 46.992 Tj
-13800 TJm
(ismp 6564) 46.992 Tj
-5.2216 -56.9598 Td
(IOAPIC 6858) 57.4347 Tj
203.6314 -56.9598 Td
(0287 1309 6564 6663 6905) 125.312 Tj
15.6634 -66.4531 Td
(6858 6908) 46.992 Tj
-16200 TJm
(6925) 20.8853 Tj
-5.2219 -75.9465 Td
(ioapic_enable 6923) 93.984 Tj
-10800 TJm
(itrunc 5102) 57.4347 Tj
15.6634 -85.4399 Td
(0261 4407 6923 7861 9467) 125.312 Tj
-7200 TJm
(4725 4974 5102) 73.0986 Tj
-5.2219 -94.9332 Td
(ioapic_id 6566) 73.0986 Tj
-13200 TJm
(iunlock 4952) 62.656 Tj
15.6634 -104.4266 Td
(0262 6566 6678 6911 6912) 125.312 Tj
-7200 TJm
(0245 4952 4955 4989 5374) 125.312 Tj
-5.2219 -113.9199 Td
(ioapic_init 6901) 83.5413 Tj
-14400 TJm
(5539 5564 5584 5729 5891) 125.312 Tj
15.6634 -123.4133 Td
(0263 1288 6901 6912) 99.2053 Tj
-10200 TJm
(5945 7670 7791) 73.0986 Tj
-5.2219 -132.9067 Td
(ioapic_read 6884) 83.5413 Tj
-12000 TJm
(iunlockput 4987) 78.32 Tj
15.6634 -142.4 Td
(6884 6909 6910) 73.0986 Tj
-13200 TJm
(0246 4987 5369 5378 5381) 125.312 Tj
-5.2219 -151.8934 Td
(ioapic_write 6891) 88.7626 Tj
-13800 TJm
(5724 5736 5742 5746 5782) 125.312 Tj
15.6634 -161.3867 Td
(6891 6917 6918 6931 6932) 125.312 Tj
-7200 TJm
(5787 5795 5796 5803 5807) 125.312 Tj
-5.2219 -170.8801 Td
(IO_PIC1 7010) 62.656 Tj
203.6311 -170.8801 Td
(5823 5826 5833 5844 5845) 125.312 Tj
15.6631 -180.3735 Td
(7010 7029 7055 7064 7067) 125.312 Tj
-7200 TJm
(5857 5880 5888 5916 5928) 125.312 Tj
15.6631 -189.8664 Td
(7071 7081 7095 7096) 99.2053 Tj
-10200 TJm
(5942 6072 6118) 73.0986 Tj
-5.2222 -199.3598 Td
(IO_PIC2 7011) 62.656 Tj
-14400 TJm
(iupdate 5028) 62.656 Tj
15.6631 -208.8532 Td
(7011 7030 7056 7084 7085) 125.312 Tj
-7200 TJm
(0247 4976 5028 5127 5210) 125.312 Tj
15.6631 -218.3461 Td
(7086 7089 7098 7099) 99.2053 Tj
-10200 TJm
(5728 5745 5806 5840 5852) 125.312 Tj
-5.2222 -227.8395 Td
(IO_TIMER1 7909) 73.0986 Tj
-13200 TJm
(I_BUSY 4316) 57.4347 Tj
15.6631 -237.3328 Td
(7909 7918 7928 7929) 99.2053 Tj
-10200 TJm
(4316 4925 4927 4954 4958) 125.312 Tj
-5.2222 -246.8262 Td
(IPB 4237) 41.7707 Tj
203.6308 -246.8262 Td
(4970 4972 4978) 73.0986 Tj
15.6628 -256.3196 Td
(4237 4240 4246 4933 5013) 125.312 Tj
-4800 TJm
(I_VALID 4317) 62.656 Tj
15.6628 -265.8125 Td
(5034) 20.8853 Tj
203.6308 -265.8125 Td
(4317 4930 4941 4968) 99.2053 Tj
-5.2222 -275.3059 Td
(iput 4965) 46.992 Tj
-16200 TJm
(kalloc 2808) 57.4347 Tj
15.6631 -284.7993 Td
(0244 2493 4965 4971 4990) 125.312 Tj
-7200 TJm
(0266 2107 2164 2175 2209) 125.312 Tj
15.6631 -294.2922 Td
(5267 5385 5524 5737 5946) 125.312 Tj
-7200 TJm
(2732 2808 2814 2818 2836) 125.312 Tj
-5.2222 -303.7856 Td
(IRQ_ERROR 3085) 73.0986 Tj
-15600 TJm
(2846 6055 6178 9421 9428) 125.312 Tj
15.6631 -313.2789 Td
(3085 6766) 46.992 Tj
-13800 TJm
(kalloc_lock 2713) 83.5413 Tj
-5.2222 -322.7723 Td
(IRQ_IDE 3083) 62.656 Tj
203.6308 -322.7723 Td
(2713 2732 2771 2801 2820) 125.312 Tj
15.6628 -332.2653 Td
(3083 3260 4406 4407) 99.2053 Tj
-10200 TJm
(2824 2830 2834) 73.0986 Tj
-5.2225 -341.7586 Td
(IRQ_IDE_2 3084) 73.0986 Tj
-13200 TJm
(KBDATAP 7154) 62.656 Tj
15.6628 -351.252 Td
(3084 4409) 46.992 Tj
-16200 TJm
(7154 7317) 46.992 Tj
-5.2225 -360.7454 Td
(IRQ_KBD 3082) 62.656 Tj
-14400 TJm
(kbd_getc 7306) 67.8773 Tj
15.6628 -370.2387 Td
(3082 3264 7860 7861) 99.2053 Tj
-10200 TJm
(7306 7348) 46.992 Tj
-5.2225 -379.7321 Td
(IRQ_MAX 6957) 62.656 Tj
-14400 TJm
(kbd_intr 7346) 67.8773 Tj
15.6628 -389.2254 Td
(3276 6957 7008) 73.0986 Tj
-13200 TJm
(0273 3265 7346) 73.0986 Tj
-5.2225 -398.7188 Td
(IRQ_OFFSET 3079) 78.32 Tj
-12600 TJm
(KBSTATP 7152) 62.656 Tj
15.6628 -408.2122 Td
(3079 3251 3260 3264 3268) 125.312 Tj
-7200 TJm
(7152 7314) 46.992 Tj
15.6628 -417.7051 Td
(3276 3277 3280 3310 6743) 125.312 Tj
-4800 TJm
(KBS_DIB 7153) 62.656 Tj
15.6628 -427.1981 Td
(6754 6766 6917 6931 7067) 125.312 Tj
-7200 TJm
(7153 7315) 46.992 Tj
15.6628 -436.6911 Td
(7085 9636) 46.992 Tj
-13800 TJm
(KEY_DEL 7178) 62.656 Tj
-5.2225 -446.1844 Td
(IRQ_SLAVE 7013) 73.0986 Tj
-15600 TJm
(7178 7219 7241 7265) 99.2053 Tj
15.6628 -455.6778 Td
(7013 7017 7071 7086) 99.2053 Tj
-7800 TJm
(KEY_DN 7172) 57.4347 Tj
-5.2225 -465.1712 Td
(IRQ_SPURIOUS 3086) 88.7626 Tj
-13800 TJm
(7172 7215 7237 7261) 99.2053 Tj
15.6628 -474.6641 Td
(3086 3268 6743) 73.0986 Tj
-10800 TJm
(KEY_END 7170) 62.656 Tj
-5.2225 -484.1575 Td
(IRQ_TIMER 3081) 73.0986 Tj
-15600 TJm
(7170 7218 7240 7264) 99.2053 Tj
15.6628 -493.6508 Td
(3081 3251 3310 6754 7930) 125.312 Tj
-4800 TJm
(KEY_HOME 7169) 67.8773 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 5 5
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 7) 214.0746 Tj
15.664 -28.4801 Td
(7169 7218 7240 7264) 99.2053 Tj
-10200 TJm
(10190 10211 10241 10401) 120.0906 Tj
-5.2213 -37.9735 Td
(KEY_INS 7177) 62.656 Tj
203.6317 -37.9735 Td
(10403 10534 10657 10684) 120.0906 Tj
15.6637 -47.4664 Td
(7177 7219 7241 7265) 99.2053 Tj
-7800 TJm
(LPTPORT 7367) 62.656 Tj
-5.2216 -56.9598 Td
(KEY_LF 7173) 57.4347 Tj
203.6314 -56.9598 Td
(7367 7384 7388 7389 7390) 125.312 Tj
15.6634 -66.4531 Td
(7173 7217 7239 7263) 99.2053 Tj
-7800 TJm
(lpt_putc 7380) 67.8773 Tj
-5.2219 -75.9465 Td
(KEY_PGDN 7176) 67.8773 Tj
-16200 TJm
(7380 7441) 46.992 Tj
15.6634 -85.4399 Td
(7176 7216 7238 7262) 99.2053 Tj
-7800 TJm
(ltr 0501) 41.7707 Tj
-5.2219 -94.9332 Td
(KEY_PGUP 7175) 67.8773 Tj
-16200 TJm
(0501 0503 2147) 73.0986 Tj
15.6634 -104.4266 Td
(7175 7216 7238 7262) 99.2053 Tj
-7800 TJm
(MAXARGS 10163) 67.8773 Tj
-5.2219 -113.9199 Td
(KEY_RT 7174) 57.4347 Tj
203.6311 -113.9199 Td
(10163 10171 10172 10640) 120.0906 Tj
15.6631 -123.4133 Td
(7174 7217 7239 7263) 99.2053 Tj
-7800 TJm
(MAXFILE 4220) 62.656 Tj
-5.2222 -132.9067 Td
(KEY_UP 7171) 57.4347 Tj
203.6308 -132.9067 Td
(4220 5193 5194) 73.0986 Tj
15.6628 -142.4 Td
(7171 7215 7237 7261) 99.2053 Tj
-7800 TJm
(MAX_LOCKS 2024) 73.0986 Tj
-5.2225 -151.8934 Td
(kfree 2755) 52.2133 Tj
203.6305 -151.8934 Td
(2024 2025) 46.992 Tj
15.6625 -161.3867 Td
(0267 2114 2176 2544 2548) 125.312 Tj
-4800 TJm
(memcmp 6332) 57.4347 Tj
15.6625 -170.8801 Td
(2737 2755 2760 2764 2765) 125.312 Tj
-7200 TJm
(0335 6332 6593 6638) 99.2053 Tj
15.6625 -180.3735 Td
(2856 6107 6117 6197 6223) 125.312 Tj
-4800 TJm
(memcpy 6303) 57.4347 Tj
-5.2228 -189.8664 Td
(kill 2454) 46.992 Tj
203.6302 -189.8664 Td
(0342 6303 9832 9945) 99.2053 Tj
15.6622 -199.3598 Td
(0311 2454 3294 3638) 99.2053 Tj
-7800 TJm
(memmove 6351) 62.656 Tj
15.6622 -208.8532 Td
(10117) 26.1067 Tj
203.6302 -208.8532 Td
(0336 1359 2110 2172 2181) 125.312 Tj
-5.2228 -218.3465 Td
(kinit 2726) 52.2133 Tj
203.6302 -218.3465 Td
(2225 4735 4939 5040 5172) 125.312 Tj
15.6622 -227.8399 Td
(0270 1289 2726) 73.0986 Tj
-13200 TJm
(5203 5328 5330 6083 6351) 125.312 Tj
-5.2231 -237.3332 Td
(kmalloc 2841) 62.656 Tj
203.6299 -237.3332 Td
(7420) 20.8853 Tj
15.6619 -246.8266 Td
(0268 2841 2844 2964 2971) 125.312 Tj
-4800 TJm
(memset 6320) 57.4347 Tj
-5.2234 -256.32 Td
(kmfree 2851) 57.4347 Tj
203.6296 -256.32 Td
(0337 1269 2111 2191 2211) 125.312 Tj
15.6616 -265.8133 Td
(0269 2851 2854 3004) 99.2053 Tj
-10200 TJm
(2769 2981 4758 5015 5800) 125.312 Tj
-5.2237 -275.3067 Td
(kproc_t 2902) 62.656 Tj
203.6293 -275.3067 Td
(5959 6058 6070 6320 7102) 125.312 Tj
15.6613 -284.8 Td
(2902 2918 2920 2961 2964) 125.312 Tj
-7200 TJm
(7422 8868 8938 9054) 99.2053 Tj
15.6613 -294.2934 Td
(3000) 20.8853 Tj
203.6293 -294.2934 Td
(10287 10358 10369 10385) 120.0906 Tj
-5.2237 -303.7868 Td
(KSTACKSIZE 0154) 78.32 Tj
-15000 TJm
(10406 10419) 57.4347 Tj
15.6616 -313.2801 Td
(0154 2129 2164 2168 2176) 125.312 Tj
-4800 TJm
(microdelay 6803) 78.32 Tj
15.6616 -322.7735 Td
(2548 2971 2988) 73.0986 Tj
-13200 TJm
(6803 6822) 46.992 Tj
-5.2237 -332.2664 Td
(lapic_eoi 6795) 73.0986 Tj
-13200 TJm
(millitime 7934) 73.0986 Tj
15.6616 -341.7598 Td
(0280 3258 3262 3266 3270) 125.312 Tj
-7200 TJm
(0354 2315 2341 3687 7934) 125.312 Tj
15.6616 -351.2532 Td
(3281 6795) 46.992 Tj
-13800 TJm
(min 4724) 41.7707 Tj
-5.2237 -360.7465 Td
(lapic_init 6737) 78.32 Tj
-15000 TJm
(4724 5171 5202) 73.0986 Tj
15.6616 -370.2399 Td
(0281 1282 1327 6737) 99.2053 Tj
-7800 TJm
(mp 6452) 36.5493 Tj
-5.2237 -379.7332 Td
(lapic_startap 6814) 93.984 Tj
-13200 TJm
(6452 6557 6586 6592 6593) 125.312 Tj
15.6616 -389.2266 Td
(0282 1368 6814) 73.0986 Tj
-13200 TJm
(6594 6605 6610 6614 6615) 125.312 Tj
-5.2237 -398.72 Td
(lgdt 0474) 46.992 Tj
203.6293 -398.72 Td
(6618 6619 6630 6633 6635) 125.312 Tj
15.6613 -408.2133 Td
(0474 0482 0997 1090 2146) 125.312 Tj
-7200 TJm
(6637 6644 6654 6660 6692) 125.312 Tj
-5.224 -417.7067 Td
(lidt 0488) 46.992 Tj
-16200 TJm
(MPBUS 6502) 52.2133 Tj
15.6613 -427.2 Td
(0488 0496 3231) 73.0986 Tj
-13200 TJm
(6502 6681) 46.992 Tj
-5.224 -436.6934 Td
(LINT0 6726) 52.2133 Tj
-15600 TJm
(mpconf 6463) 57.4347 Tj
15.6613 -446.1868 Td
(6726 6757) 46.992 Tj
-16200 TJm
(6463 6629 6632 6637 6655) 125.312 Tj
-5.224 -455.6801 Td
(LINT1 6727) 52.2133 Tj
-15600 TJm
(mpioapic 6489) 67.8773 Tj
15.6613 -465.1735 Td
(6727 6758) 46.992 Tj
-16200 TJm
(6489 6657 6677 6679) 99.2053 Tj
-5.224 -474.6665 Td
(LIST 10160) 52.2133 Tj
-15600 TJm
(MPIOINTR 6504) 67.8773 Tj
15.6613 -484.1598 Td
(10160 10240 10407 10683) 120.0906 Tj
-7800 TJm
(6504 6682) 46.992 Tj
-5.224 -493.6532 Td
(listcmd 10190 10401) 99.2053 Tj
-10200 TJm
(MPLINTR 6505) 62.656 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 8) 214.0746 Tj
15.664 -28.4801 Td
(6505 6683) 46.992 Tj
-16200 TJm
(7252 7253 7255 7256 7257) 125.312 Tj
-5.2213 -37.9735 Td
(mpmain 1323) 57.4347 Tj
203.6317 -37.9735 Td
(7258 8024) 46.992 Tj
15.6637 -47.4664 Td
(1323 1367) 46.992 Tj
-13800 TJm
(NOFILE 0156) 57.4347 Tj
-5.2216 -56.9598 Td
(mpproc 6478) 57.4347 Tj
203.6314 -56.9598 Td
(0156 1992 2183 2486 5621) 125.312 Tj
15.6634 -66.4531 Td
(6478 6656 6669 6674) 99.2053 Tj
-10200 TJm
(5637) 20.8853 Tj
-5.2219 -75.9465 Td
(MPSTACK 2013) 62.656 Tj
-14400 TJm
(NPROC 0152) 52.2133 Tj
15.6634 -85.4399 Td
(1279 1280 1366 2013 2021) 125.312 Tj
-7200 TJm
(0152 2061 2085 2250 2407) 125.312 Tj
-5.2219 -94.9332 Td
(mp_bcpu 6569) 62.656 Tj
203.6311 -94.9332 Td
(2420 2459 2501 2532 2592) 125.312 Tj
15.6631 -104.4266 Td
(0288 1276 6569) 73.0986 Tj
-10800 TJm
(NSEGS 1959) 52.2133 Tj
-5.2222 -113.9199 Td
(mp_config 6630) 73.0986 Tj
-15600 TJm
(1959 2020) 46.992 Tj
15.6631 -123.4133 Td
(6630 6660) 46.992 Tj
-13800 TJm
(NULL 0366) 46.992 Tj
-5.2222 -132.9067 Td
(mp_init 6651) 62.656 Tj
203.6308 -132.9067 Td
(0365 0366 2966 2970 2973) 125.312 Tj
15.6628 -142.4 Td
(0289 6651 6687 6688) 99.2053 Tj
-7800 TJm
(nulterminate 10652) 93.984 Tj
-5.2225 -151.8934 Td
(mp_search 6606) 73.0986 Tj
-15600 TJm
(10503 10518 10652 10673) 120.0906 Tj
15.6628 -161.3867 Td
(6606 6635) 46.992 Tj
-16200 TJm
(10679 10680 10685 10686) 120.0906 Tj
-5.2225 -170.8801 Td
(mp_search1 6587) 78.32 Tj
-15000 TJm
(10691) 26.1067 Tj
15.6628 -180.3735 Td
(6587 6614 6618 6621) 99.2053 Tj
-7800 TJm
(NUMLOCK 7163) 62.656 Tj
-5.2225 -189.8664 Td
(msleep_spin 2313) 83.5413 Tj
-14400 TJm
(7163 7196) 46.992 Tj
15.6628 -199.3598 Td
(0317 1758 2313 7804) 99.2053 Tj
-7800 TJm
(OP_TRANSMIT 9171) 83.5413 Tj
-5.2225 -208.8532 Td
(NADDRS 4216) 57.4347 Tj
203.6305 -208.8532 Td
(9171 9817) 46.992 Tj
15.6625 -218.3465 Td
(4216 4229 4313) 73.0986 Tj
-10800 TJm
(outb 0441) 46.992 Tj
-5.2228 -227.8399 Td
(namecmp 5218) 62.656 Tj
203.6302 -227.8399 Td
(0441 0983 0991 1214 1215) 125.312 Tj
15.6622 -237.3332 Td
(0248 5218 5243 5781) 99.2053 Tj
-10200 TJm
(1216 1217 1218 1219 4412) 125.312 Tj
-5.2231 -246.8266 Td
(namei 5392) 52.2133 Tj
203.6299 -246.8266 Td
(4421 4422 4434 4435 4436) 125.312 Tj
15.6619 -256.32 Td
(0249 2210 2992 5392 5720) 125.312 Tj
-7200 TJm
(4437 4438 4440 4443 6695) 125.312 Tj
15.6619 -265.8133 Td
(5876 5938 6018) 73.0986 Tj
-13200 TJm
(6696 7029 7030 7055 7056) 125.312 Tj
-5.2234 -275.3067 Td
(nameiparent 5401) 83.5413 Tj
-14400 TJm
(7064 7067 7071 7081 7084) 125.312 Tj
15.6619 -284.8 Td
(0250 5401 5731 5776 5818) 125.312 Tj
-7200 TJm
(7085 7086 7089 7095 7096) 125.312 Tj
-5.2234 -294.2934 Td
(NBUF 0158) 46.992 Tj
203.6296 -294.2934 Td
(7098 7099 7388 7389 7390) 125.312 Tj
15.6616 -303.7868 Td
(0158 4579 4597) 73.0986 Tj
-13200 TJm
(7406 7408 7425 7426 7427) 125.312 Tj
-5.2237 -313.2801 Td
(NCPU 0155) 46.992 Tj
203.6293 -313.2801 Td
(7428 7927 7928 7929) 99.2053 Tj
15.6613 -322.7735 Td
(0155 1272 2009 2028 2062) 125.312 Tj
-4800 TJm
(outl 0457) 46.992 Tj
15.6613 -332.2668 Td
(6562) 20.8853 Tj
203.6293 -332.2668 Td
(0457 8814 8828 9488 9578) 125.312 Tj
-5.2237 -341.7602 Td
(NDEV 0160) 46.992 Tj
-16200 TJm
(outsl 0463) 52.2133 Tj
15.6616 -351.2536 Td
(0160 5159 5186 5457) 99.2053 Tj
-10200 TJm
(0463 4441) 46.992 Tj
-5.2237 -360.7469 Td
(NDIRECT 4217) 62.656 Tj
-14400 TJm
(outw 0451) 46.992 Tj
15.6616 -370.2403 Td
(4216 4217 4220 5065 5073) 125.312 Tj
-7200 TJm
(0451 1194 1195 9493 9511) 125.312 Tj
15.6616 -379.7336 Td
(5108) 20.8853 Tj
203.6296 -379.7336 Td
(9588 9607) 46.992 Tj
-5.2234 -389.227 Td
(NELEM 0363) 52.2133 Tj
-15600 TJm
(O_CREATE 4053) 67.8773 Tj
15.6619 -398.7204 Td
(0363 2596 3568 5961) 99.2053 Tj
-10200 TJm
(4053 5872 10578 10581) 109.648 Tj
-5.2234 -408.2137 Td
(NFILE 0157) 52.2133 Tj
-15600 TJm
(O_RDONLY 4050) 67.8773 Tj
15.6619 -417.7071 Td
(0157 5459 5474) 73.0986 Tj
-13200 TJm
(4050 10575) 52.2133 Tj
-5.2234 -427.2004 Td
(NINDIRECT 4219) 73.0986 Tj
-13200 TJm
(O_RDWR 4052) 57.4347 Tj
15.6619 -436.6938 Td
(4219 4220 5075 5118) 99.2053 Tj
-10200 TJm
(4052 5879 5897 10064) 104.4266 Tj
-5.2234 -446.1872 Td
(NINODE 0159) 57.4347 Tj
203.6296 -446.1872 Td
(10066 10307) 57.4347 Tj
15.6616 -455.6805 Td
(0159 4857 4877) 73.0986 Tj
-10800 TJm
(O_WRONLY 4051) 67.8773 Tj
-5.2237 -465.1739 Td
(NO 7156) 36.5493 Tj
203.6293 -465.1739 Td
(4051 5879 5896 5897) 99.2053 Tj
15.6613 -474.6668 Td
(7156 7202 7205 7207 7208) 125.312 Tj
-7200 TJm
(10578 10581) 57.4347 Tj
15.6613 -484.1602 Td
(7209 7210 7212 7224 7227) 125.312 Tj
-4800 TJm
(PAGE 0153) 46.992 Tj
15.6613 -493.6536 Td
(7229 7230 7231 7232 7234) 125.312 Tj
-7200 TJm
(0153 0154 2208 2734 2736) 125.312 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 6 6
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 9) 214.0746 Tj
15.664 -28.4801 Td
(2737 2760 2762 2814 2817) 125.312 Tj
-4800 TJm
(PCI_BRIDGE_IO_32BITS 8613) 130.5333 Tj
15.664 -37.9735 Td
(2846 2856 6051 6054 6178) 125.312 Tj
-7200 TJm
(8613 8931) 46.992 Tj
15.664 -47.4668 Td
(6197 6223 9421 9428 9435) 125.312 Tj
-4800 TJm
(pci_bridge_pci_attach 8926) 135.7546 Tj
15.664 -56.9602 Td
(9436) 20.8853 Tj
203.632 -56.9602 Td
(8768 8782 8926) 73.0986 Tj
-5.221 -66.4535 Td
(panic 7880 10332) 83.5413 Tj
-12000 TJm
(PCI_BRIDGE_STATIO_REG 8606) 135.7546 Tj
15.6643 -75.9469 Td
(0222 1539 1570 1580 2282) 125.312 Tj
-7200 TJm
(8606 8928) 46.992 Tj
15.6643 -85.4403 Td
(2284 2321 2323 2364 2367) 125.312 Tj
-4800 TJm
(pci_bus 7974) 62.656 Tj
15.6643 -94.9336 Td
(2483 2517 2765 2777 2818) 125.312 Tj
-7200 TJm
(7958 7961 7974 8864 8937) 125.312 Tj
15.6643 -104.427 Td
(4431 4487 4489 4491 4640) 125.312 Tj
-7200 TJm
(9053) 20.8853 Tj
15.6643 -113.9203 Td
(4667 4677 4789 4816 4890) 125.312 Tj
-4800 TJm
(PCI_CACHELINE_MASK 8333) 120.0906 Tj
15.6643 -123.4137 Td
(4922 4943 4955 4971 5023) 125.312 Tj
-7200 TJm
(8333 8335 8342) 73.0986 Tj
15.6643 -132.9071 Td
(5097 5234 5274 5282 5492) 125.312 Tj
-4800 TJm
(PCI_CACHELINE_SHIFT 8332) 125.312 Tj
15.6643 -142.4004 Td
(5510 5528 5567 5587 5759) 125.312 Tj
-7200 TJm
(8332 8335 8342) 73.0986 Tj
15.6643 -151.8938 Td
(5793 5802 5855 6688 7880) 125.312 Tj
-4800 TJm
(PCI_CLASS 8118) 73.0986 Tj
15.6643 -161.3871 Td
(7887 10201 10220 10253) 114.8693 Tj
-8400 TJm
(8118 8857 8895) 73.0986 Tj
15.6643 -170.8805 Td
(10332 10345 10516 10572) 120.0906 Tj
-5400 TJm
(PCI_CLASS_BRIDGE 8148) 109.648 Tj
15.6643 -180.3739 Td
(10606 10610 10636 10641) 120.0906 Tj
-7800 TJm
(8148 8781 8782) 73.0986 Tj
-5.221 -189.8668 Td
(parseblock 10601) 83.5413 Tj
-12000 TJm
(PCI_CLASS_DISPLAY 8145) 114.8693 Tj
15.6643 -199.3602 Td
(10601 10606 10625) 88.7626 Tj
-11400 TJm
(8145 8783) 46.992 Tj
-5.221 -208.8535 Td
(parsecmd 10506) 73.0986 Tj
-13200 TJm
(PCI_CLASS_MASK 8117) 99.2053 Tj
15.6643 -218.3469 Td
(10202 10325 10506) 88.7626 Tj
-11400 TJm
(8117 8119 8137) 73.0986 Tj
-5.221 -227.8403 Td
(parseexec 10617) 78.32 Tj
-12600 TJm
(PCI_CLASS_NETWORK 8144) 114.8693 Tj
15.6643 -237.3336 Td
(10502 10555 10617) 88.7626 Tj
-11400 TJm
(8144 8784) 46.992 Tj
-5.221 -246.827 Td
(parseline 10523) 78.32 Tj
-12600 TJm
(PCI_CLASS_REG 8109) 93.984 Tj
15.6643 -256.3203 Td
(10500 10512 10523 10534) 120.0906 Tj
-7800 TJm
(8109 8890) 46.992 Tj
15.6643 -265.8137 Td
(10608) 26.1067 Tj
-16200 TJm
(PCI_CLASS_SHIFT 8116) 104.4266 Tj
-5.221 -275.3071 Td
(parsepipe 10551) 78.32 Tj
-15000 TJm
(8116 8119 8137) 73.0986 Tj
15.6643 -284.8004 Td
(10501 10527 10551 10558) 120.0906 Tj
-5400 TJm
(PCI_COMMAND_IO_ENABLE 8080) 135.7546 Tj
-5.221 -294.2938 Td
(parseredirs 10564) 88.7626 Tj
-13800 TJm
(8080 8969) 46.992 Tj
15.6643 -303.7871 Td
(10564 10612 10631 10642) 120.0906 Tj
-5400 TJm
(PCI_COMMAND_MASK 8072) 109.648 Tj
-5.221 -313.2805 Td
(PCINT 6725) 52.2133 Tj
203.632 -313.2805 Td
(8072 8077) 46.992 Tj
15.664 -322.7739 Td
(6725 6763) 46.992 Tj
-13800 TJm
(PCI_COMMAND_MASTER_ENABLE 8082) 156.64 Tj
-5.2213 -332.2668 Td
(pci_attach 8854) 78.32 Tj
-15000 TJm
(8082 8971) 46.992 Tj
15.664 -341.7602 Td
(8854 8900) 46.992 Tj
-13800 TJm
(PCI_COMMAND_MEM_ENABLE 8081) 140.976 Tj
-5.2213 -351.2536 Td
(pci_attach_match 8832) 109.648 Tj
-11400 TJm
(8081 8970) 46.992 Tj
15.664 -360.7469 Td
(8832 8846 8857 8859) 99.2053 Tj
-7800 TJm
(PCI_COMMAND_SHIFT 8071) 114.8693 Tj
-5.2213 -370.2403 Td
(PCI_BHLC_REG 8310) 88.7626 Tj
-13800 TJm
(8071 8077) 46.992 Tj
15.664 -379.7336 Td
(8310 8872) 46.992 Tj
-13800 TJm
(PCI_COMMAND_STATUS_REG 8070) 140.976 Tj
-5.2213 -389.227 Td
(PCI_BIST_MASK 8313) 93.984 Tj
-13200 TJm
(8070 8968) 46.992 Tj
15.664 -398.7204 Td
(8313 8315 8338) 73.0986 Tj
-10800 TJm
(pci_conf1_set_addr 8801) 120.0906 Tj
-5.2213 -408.2137 Td
(PCI_BIST_SHIFT 8312) 99.2053 Tj
-12600 TJm
(8801 8820 8827) 73.0986 Tj
15.664 -417.7071 Td
(8312 8315 8338) 73.0986 Tj
-10800 TJm
(pci_conf_read 8818) 93.984 Tj
-5.2213 -427.2004 Td
(pci_bridge_attach 8917) 114.8693 Tj
-10800 TJm
(8818 8872 8883 8887 8890) 125.312 Tj
15.664 -436.6938 Td
(8767 8781 8917) 73.0986 Tj
-13200 TJm
(8928 8929 8978 8982) 99.2053 Tj
-5.2213 -446.1872 Td
(PCI_BRIDGE_BUS_REG 8601) 120.0906 Tj
-7800 TJm
(pci_conf_write 8825) 99.2053 Tj
15.664 -455.6805 Td
(8601 8929) 46.992 Tj
-16200 TJm
(8825 8968 8981 9006) 99.2053 Tj
-5.2213 -465.1739 Td
(PCI_BRIDGE_BUS_SECONDARY_SHIFT 8603 pci_display_attach 8955) 308.0586 Tj
15.664 -474.6668 Td
(8603 8940) 46.992 Tj
-16200 TJm
(8769 8783 8955) 73.0986 Tj
-5.2213 -484.1602 Td
(PCI_BRIDGE_BUS_SUBORDINATE_SHIFT 86 pci_driver 8773) 266.2879 Tj
15.664 -493.6536 Td
(8604 8946) 46.992 Tj
-16200 TJm
(8773 8780 8789 8833) 99.2053 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 10) 219.2959 Tj
-5.2213 -28.4801 Td
(pci_func 7960) 67.8773 Tj
-13800 TJm
(PCI_MAPREG_END 8354) 99.2053 Tj
15.664 -37.9735 Td
(7960 7975 7980 8767 8768) 125.312 Tj
-7200 TJm
(8354 8975) 46.992 Tj
15.664 -47.4664 Td
(8769 8770 8775 8818 8825) 125.312 Tj
-4800 TJm
(PCI_MAPREG_IO_ADDR 8391) 120.0906 Tj
15.664 -56.9594 Td
(8833 8854 8867 8878 8881) 125.312 Tj
-7200 TJm
(8391 8394 9000) 73.0986 Tj
15.664 -66.4524 Td
(8908 8917 8926 8955 8966) 125.312 Tj
-4800 TJm
(PCI_MAPREG_IO_ADDR_MASK 8395) 146.1973 Tj
15.664 -75.9453 Td
(9104 9411) 46.992 Tj
-16200 TJm
(8392 8395) 46.992 Tj
-5.2213 -85.4387 Td
(pci_func_enable 8966) 104.4266 Tj
-9600 TJm
(PCI_MAPREG_IO_SIZE 8393) 120.0906 Tj
15.664 -94.9321 Td
(7980 8966 9441) 73.0986 Tj
-13200 TJm
(8393 8999) 46.992 Tj
-5.2213 -104.4254 Td
(PCI_HDRTYPE 8319) 83.5413 Tj
-12000 TJm
(PCI_MAPREG_MEM64_ADDR 8385) 135.7546 Tj
15.664 -113.9188 Td
(8319 8323 8325) 73.0986 Tj
-13200 TJm
(8385 8388) 46.992 Tj
-5.2213 -123.4121 Td
(PCI_HDRTYPE_MASK 8318) 109.648 Tj
-9000 TJm
(PCI_MAPREG_MEM64_ADDR_MASK 8389) 161.8613 Tj
15.664 -132.9055 Td
(8318 8320 8339) 73.0986 Tj
-13200 TJm
(8386 8389) 46.992 Tj
-5.2213 -142.3989 Td
(PCI_HDRTYPE_MULTIFN 8324) 125.312 Tj
-7200 TJm
(PCI_MAPREG_MEM_ADDR 8379) 125.312 Tj
15.664 -151.8922 Td
(8324 8879) 46.992 Tj
-16200 TJm
(8379 8382 8994) 73.0986 Tj
-5.2213 -161.3856 Td
(PCI_HDRTYPE_SHIFT 8317) 114.8693 Tj
-8400 TJm
(PCI_MAPREG_MEM_ADDR_MASK 8383) 151.4186 Tj
15.664 -170.8789 Td
(8317 8320 8339 8340) 99.2053 Tj
-10200 TJm
(8380 8383) 46.992 Tj
-5.2213 -180.3723 Td
(PCI_HDRTYPE_TYPE 8322) 109.648 Tj
-9000 TJm
(PCI_MAPREG_MEM_PREFETCHABLE_MASK 83) 182.7466 Tj
15.664 -189.8653 Td
(8322 8873) 46.992 Tj
-16200 TJm
(8376 8377) 46.992 Tj
-5.2213 -199.3586 Td
(PCI_ID_REG 8047) 78.32 Tj
-12600 TJm
(PCI_MAPREG_MEM_SIZE 8381) 125.312 Tj
15.664 -208.852 Td
(8047 8411 8883) 73.0986 Tj
-13200 TJm
(8381 8993) 46.992 Tj
-5.2213 -218.3453 Td
(pci_init 9051) 67.8773 Tj
-13800 TJm
(PCI_MAPREG_MEM_TYPE 8367) 125.312 Tj
15.664 -227.8387 Td
(1307 7979 9051) 73.0986 Tj
-13200 TJm
(8367 8990) 46.992 Tj
-5.2213 -237.3321 Td
(PCI_INTERFACE_MASK 8127) 120.0906 Tj
-7800 TJm
(PCI_MAPREG_MEM_TYPE_64BIT 8373) 156.64 Tj
15.664 -246.8254 Td
(8127 8129 8139) 73.0986 Tj
-13200 TJm
(8373 8990) 46.992 Tj
-5.2213 -256.3188 Td
(PCI_INTERFACE_SHIFT 8126) 125.312 Tj
-7200 TJm
(PCI_MAPREG_MEM_TYPE_MASK 8369) 151.4186 Tj
15.664 -265.8121 Td
(8126 8129 8139) 73.0986 Tj
-13200 TJm
(8368 8369) 46.992 Tj
-5.2213 -275.3055 Td
(PCI_INTERRUPT_GRANT_MASK 8566) 151.4186 Tj
-4200 TJm
(PCI_MAPREG_NUM 8400) 99.2053 Tj
15.664 -284.7989 Td
(8566 8568 8587) 73.0986 Tj
-13200 TJm
(8400 8987) 46.992 Tj
-5.2213 -294.2922 Td
(PCI_INTERRUPT_GRANT_SHIFT 8565) 156.64 Tj
-3600 TJm
(PCI_MAPREG_START 8353) 109.648 Tj
15.664 -303.7856 Td
(8565 8568 8587) 73.0986 Tj
-13200 TJm
(8353 8401 8975) 73.0986 Tj
-5.2213 -313.2789 Td
(PCI_INTERRUPT_LATENCY_MASK 8571) 161.8613 Tj
-3000 TJm
(PCI_MAPREG_TYPE 8359) 104.4266 Tj
15.664 -322.7723 Td
(8571 8573 8586) 73.0986 Tj
-13200 TJm
(8359 8989) 46.992 Tj
-5.2213 -332.2653 Td
(PCI_INTERRUPT_LATENCY_SHIFT 8570    PCI_MAPREG_TYPE_MASK 8361) 318.5013 Tj
15.664 -341.7586 Td
(8570 8573 8586) 73.0986 Tj
-13200 TJm
(8360 8361) 46.992 Tj
-5.2213 -351.252 Td
(PCI_INTERRUPT_LINE 8582) 120.0906 Tj
-7800 TJm
(PCI_MAPREG_TYPE_MEM 8363) 125.312 Tj
15.664 -360.7454 Td
(8582 8888) 46.992 Tj
-16200 TJm
(8363 8989) 46.992 Tj
-5.2213 -370.2387 Td
(PCI_INTERRUPT_LINE_MASK 8581) 146.1973 Tj
-4800 TJm
(PCI_MAX_LAT_MASK 8556) 109.648 Tj
15.664 -379.7321 Td
(8581 8583 8589) 73.0986 Tj
-13200 TJm
(8556 8558) 46.992 Tj
-5.2213 -389.2254 Td
(PCI_INTERRUPT_LINE_SHIFT 8580) 151.4186 Tj
-4200 TJm
(PCI_MAX_LAT_SHIFT 8555) 114.8693 Tj
15.664 -398.7188 Td
(8580 8583 8589) 73.0986 Tj
-13200 TJm
(8555 8558) 46.992 Tj
-5.2213 -408.2122 Td
(PCI_INTERRUPT_PIN_MASK 8576) 140.976 Tj
-5400 TJm
(PCI_MIN_GNT_MASK 8561) 109.648 Tj
15.664 -417.7055 Td
(8576 8578 8588) 73.0986 Tj
-13200 TJm
(8561 8563) 46.992 Tj
-5.2213 -427.1989 Td
(PCI_INTERRUPT_PIN_SHIFT 8575) 146.1973 Tj
-4800 TJm
(PCI_MIN_GNT_SHIFT 8560) 114.8693 Tj
15.664 -436.6922 Td
(8575 8578 8588) 73.0986 Tj
-13200 TJm
(8560 8563) 46.992 Tj
-5.2213 -446.1856 Td
(PCI_INTERRUPT_REG 8545) 114.8693 Tj
-8400 TJm
(pci_net_ether_attach 8908) 130.5333 Tj
15.664 -455.679 Td
(8545 8887) 46.992 Tj
-16200 TJm
(8770 8785 8908) 73.0986 Tj
-5.2213 -465.1723 Td
(PCI_LATTIMER_MASK 8328) 114.8693 Tj
-8400 TJm
(PCI_PRODUCT 8060) 83.5413 Tj
15.664 -474.6653 Td
(8328 8330 8341) 73.0986 Tj
-13200 TJm
(8060 8859 8894 8912 8921) 125.312 Tj
-5.2213 -484.1586 Td
(PCI_LATTIMER_SHIFT 8327) 120.0906 Tj
-10200 TJm
(8959 9017 9416) 73.0986 Tj
15.664 -493.652 Td
(8327 8330 8341) 73.0986 Tj
-10800 TJm
(PCI_PRODUCT_E100 9109) 109.648 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 7 7
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 11) 219.2959 Tj
15.664 -28.4801 Td
(8790 9109) 46.992 Tj
-16200 TJm
(7026 7036 7101) 73.0986 Tj
-5.2213 -37.9735 Td
(PCI_PRODUCT_MASK 8059) 109.648 Tj
-9000 TJm
(pinit 2070) 52.2133 Tj
15.664 -47.4664 Td
(8059 8061 8065) 73.0986 Tj
-13200 TJm
(0312 1285 2070) 73.0986 Tj
-5.2213 -56.9598 Td
(PCI_PRODUCT_SHIFT 8058) 114.8693 Tj
-8400 TJm
(pipe 6160) 46.992 Tj
15.664 -66.4531 Td
(8058 8061 8065) 73.0986 Tj
-13200 TJm
(0207 0302 0303 0304 4155) 125.312 Tj
-5.2213 -75.9465 Td
(PCI_REVISION_MASK 8132) 114.8693 Tj
-10800 TJm
(5522 5559 5579 6160 6172) 125.312 Tj
15.664 -85.4399 Td
(8132 8134) 46.992 Tj
-16200 TJm
(6178 6184 6188 6192 6210) 125.312 Tj
-5.2213 -94.9332 Td
(PCI_REVISION_SHIFT 8131) 120.0906 Tj
-10200 TJm
(6227 6251 10113 10252) 109.648 Tj
15.664 -104.4266 Td
(8131 8134) 46.992 Tj
-16200 TJm
(10253) 26.1067 Tj
-5.2213 -113.9199 Td
(pci_scan_bus 8864) 88.7626 Tj
-11400 TJm
(pipealloc 6170) 73.0986 Tj
15.664 -123.4133 Td
(8864 8950 9056) 73.0986 Tj
-13200 TJm
(0301 5984 6170) 73.0986 Tj
-5.2213 -132.9067 Td
(PCI_STATUS_MASK 8074) 104.4266 Tj
-9600 TJm
(pipeclose 6210) 73.0986 Tj
15.664 -142.4 Td
(8074 8078) 46.992 Tj
-16200 TJm
(0302 5522 6210) 73.0986 Tj
-5.2213 -151.8934 Td
(PCI_STATUS_SHIFT 8073) 109.648 Tj
-9000 TJm
(pipecmd 10184 10380) 99.2053 Tj
15.664 -161.3867 Td
(8073 8078) 46.992 Tj
-16200 TJm
(10184 10212 10251 10380) 120.0906 Tj
-5.2213 -170.8801 Td
(PCI_SUBCLASS 8123) 88.7626 Tj
-13800 TJm
(10382 10558 10658 10678) 120.0906 Tj
15.664 -180.3735 Td
(8123 8857 8895) 73.0986 Tj
-10800 TJm
(piperead 6251) 67.8773 Tj
-5.2213 -189.8664 Td
(PCI_SUBCLASS_ANY 8778) 109.648 Tj
-11400 TJm
(0303 5559 6251) 73.0986 Tj
15.664 -199.3598 Td
(8778 8781 8783) 73.0986 Tj
-10800 TJm
(PIPESIZE 6158) 67.8773 Tj
-5.2213 -208.8532 Td
(PCI_SUBCLASS_BRIDGE_PCI 8210) 146.1973 Tj
-7200 TJm
(6158 6166 6233 6242 6267) 125.312 Tj
15.664 -218.3465 Td
(8210 8782) 46.992 Tj
-13800 TJm
(pipewrite 6227) 73.0986 Tj
-5.2213 -227.8399 Td
(PCI_SUBCLASS_MASK 8122) 114.8693 Tj
-10800 TJm
(0304 5579 6227) 73.0986 Tj
15.664 -237.3332 Td
(8122 8124 8138) 73.0986 Tj
-10800 TJm
(PORT_SOFT_RESET 9160) 104.4266 Tj
-5.2213 -246.8266 Td
(PCI_SUBCLASS_NETWORK_ETHERNET 8177) 177.5253 Tj
-3600.01 TJm
(9160 9488) 46.992 Tj
15.664 -256.32 Td
(8177 8784) 46.992 Tj
-13800 TJm
(printint 7501) 67.8773 Tj
-5.2213 -265.8133 Td
(PCI_SUBCLASS_SHIFT 8121) 120.0906 Tj
-10200 TJm
(7501 7591 7600 7610) 99.2053 Tj
15.664 -275.3067 Td
(8121 8124 8138) 73.0986 Tj
-10800 TJm
(printintlen 7451) 83.5413 Tj
-5.2213 -284.8 Td
(PCI_VENDOR 8055) 78.32 Tj
-15000 TJm
(7451 7589 7598 7608) 99.2053 Tj
15.664 -294.2934 Td
(8055 8859 8884 8894 8912) 125.312 Tj
-4800 TJm
(printstack 7865) 78.32 Tj
15.664 -303.7868 Td
(8921 8959 9017 9416) 99.2053 Tj
-10200 TJm
(0223 2815 7865) 73.0986 Tj
-5.2213 -313.2801 Td
(PCI_VENDOR_INTEL 9108) 109.648 Tj
-9000 TJm
(proc 1983) 46.992 Tj
15.664 -322.7735 Td
(8790 9108) 46.992 Tj
-16200 TJm
(0208 0307 0308 0315 0348) 125.312 Tj
-5.2213 -332.2664 Td
(PCI_VENDOR_MASK 8054) 104.4266 Tj
-12000 TJm
(0349 1254 1507 1983 1989) 125.312 Tj
15.664 -341.7598 Td
(8054 8056 8064) 73.0986 Tj
-13200 TJm
(2009 2055 2061 2062 2063) 125.312 Tj
-5.2213 -351.2532 Td
(PCI_VENDOR_SHIFT 8053) 109.648 Tj
-11400 TJm
(2078 2082 2086 2122 2153) 125.312 Tj
15.664 -360.7465 Td
(8053 8056 8064) 73.0986 Tj
-13200 TJm
(2154 2157 2204 2242 2251) 125.312 Tj
-5.2213 -370.2399 Td
(PCI_VPD_ADDRESS_MASK 8448) 130.5333 Tj
-9000 TJm
(2405 2407 2418 2420 2456) 125.312 Tj
15.664 -379.7332 Td
(8448 8451) 46.992 Tj
-16200 TJm
(2459 2479 2501 2525 2533) 125.312 Tj
-5.2213 -389.2266 Td
(PCI_VPD_ADDRESS_SHIFT 8449) 135.7546 Tj
-8400 TJm
(2588 2593 2913 2918 2955) 125.312 Tj
15.664 -398.72 Td
(8449 8451) 46.992 Tj
-16200 TJm
(2959 2961 2968 2990 3002) 125.312 Tj
-5.2213 -408.2133 Td
(peek 10475) 52.2133 Tj
203.6317 -408.2133 Td
(3204 3294 3404 3416 3428) 125.312 Tj
15.6637 -417.7067 Td
(10475 10513 10528 10532) 120.0906 Tj
-7800 TJm
(3604 3610 4356 4717 5605) 125.312 Tj
15.6637 -427.2 Td
(10556 10569 10605 10609) 120.0906 Tj
-7800 TJm
(6003 6154 6560 6656 6669) 125.312 Tj
15.6637 -436.6934 Td
(10624 10632) 57.4347 Tj
-15000 TJm
(6670 6671 7361 9356) 99.2053 Tj
-5.2216 -446.1868 Td
(pic_enable 7034) 78.32 Tj
-12600 TJm
(procdump 2576) 67.8773 Tj
15.6637 -455.6801 Td
(0293 4406 7034 7860 7930) 125.312 Tj
-7200 TJm
(0313 2576 7700) 73.0986 Tj
15.6637 -465.1735 Td
(9466) 20.8853 Tj
182.7467 -465.1735 Td
(proc_table_lock 2059) 104.4266 Tj
-5.2213 -474.6665 Td
(pic_init 7052) 67.8773 Tj
-16200 TJm
(2030 2059 2072 2084 2091) 125.312 Tj
15.664 -484.1598 Td
(0294 1287 7052) 73.0986 Tj
-13200 TJm
(2095 2247 2272 2283 2284) 125.312 Tj
-5.2213 -493.6532 Td
(pic_setmask 7026) 83.5413 Tj
-14400 TJm
(2295 2298 2306 2325 2327) 125.312 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 12) 219.2959 Tj
15.664 -28.4801 Td
(2350 2352 2375 2376 2389) 125.312 Tj
-7200 TJm
(0161 5360) 46.992 Tj
15.664 -37.9735 Td
(2390 2432 2434 2442 2444) 125.312 Tj
-4800 TJm
(RUC_START 9152) 73.0986 Tj
15.664 -47.4668 Td
(2458 2465 2469 2496 2528) 125.312 Tj
-7200 TJm
(9152 9921 9958) 73.0986 Tj
15.664 -56.9602 Td
(2554 2563 2568 3009) 99.2053 Tj
-7800 TJm
(run 2715) 41.7707 Tj
-5.2213 -66.4535 Td
(proghdr 0874) 62.656 Tj
203.6317 -66.4535 Td
(2583 2715 2716 2719 2757) 125.312 Tj
15.6637 -75.9469 Td
(0874 1170 1183 6016) 99.2053 Tj
-10200 TJm
(2772 2773 2775 2811) 99.2053 Tj
-5.2216 -85.4403 Td
(readi 5152) 52.2133 Tj
-15600 TJm
(runcmd 10206) 62.656 Tj
15.6637 -94.9336 Td
(0251 5152 5273 5562 5758) 125.312 Tj
-7200 TJm
(10206 10220 10237 10243) 120.0906 Tj
15.6637 -104.427 Td
(5759 6028 6033 6062 6068) 125.312 Tj
-7200 TJm
(10245 10259 10266 10277) 120.0906 Tj
-5.2216 -113.9203 Td
(readsb 4729) 57.4347 Tj
203.6314 -113.9203 Td
(10325) 26.1067 Tj
15.6634 -123.4137 Td
(4729 4775 4811 5010) 99.2053 Tj
-7800 TJm
(RUNNABLE 1979) 67.8773 Tj
-5.2219 -132.9071 Td
(readsect 1210) 67.8773 Tj
-16200 TJm
(1979 2227 2252 2261 2296) 125.312 Tj
15.6634 -142.4004 Td
(1210 1246) 46.992 Tj
-16200 TJm
(2410 2424 2464 2582 2993) 125.312 Tj
-5.2219 -151.8938 Td
(readseg 1229) 62.656 Tj
203.6311 -151.8938 Td
(3614) 20.8853 Tj
15.6631 -161.3871 Td
(1164 1176 1186 1229) 99.2053 Tj
-7800 TJm
(safestrcpy 6402) 78.32 Tj
-5.2222 -170.8805 Td
(REDIR 10158) 57.4347 Tj
203.6308 -170.8805 Td
(0338 2226 2984 2986 6104) 125.312 Tj
15.6628 -180.3739 Td
(10158 10230 10370 10671) 120.0906 Tj
-7800 TJm
(6402) 20.8853 Tj
-5.2225 -189.8668 Td
(redircmd 10175 10364) 104.4266 Tj
-9600 TJm
(SCB_COMMAND 9121) 83.5413 Tj
15.6628 -199.3602 Td
(10175 10213 10231 10364) 120.0906 Tj
-7800 TJm
(9121 9493 9572 9588 9607) 125.312 Tj
15.6628 -208.8535 Td
(10366 10575 10578 10581) 120.0906 Tj
-5400 TJm
(scb_command_word 9205) 109.648 Tj
15.6628 -218.3469 Td
(10659 10672) 57.4347 Tj
-15000 TJm
(9205 9222 9223 9490 9584) 125.312 Tj
-5.2225 -227.8403 Td
(REG_ID 6860) 57.4347 Tj
203.6305 -227.8403 Td
(9603) 20.8853 Tj
15.6625 -237.3336 Td
(6860 6910) 46.992 Tj
-13800 TJm
(SCB_GENPTR 9122) 78.32 Tj
-5.2228 -246.827 Td
(reg_irq_handler 7020) 104.4266 Tj
-12000 TJm
(9122 9578) 46.992 Tj
15.6625 -256.3203 Td
(4409 6956 7020 9465) 99.2053 Tj
-7800 TJm
(SCB_PORT 9123) 67.8773 Tj
-5.2228 -265.8137 Td
(REG_TABLE 6862) 73.0986 Tj
-15600 TJm
(9123 9488) 46.992 Tj
15.6625 -275.3071 Td
(6862 6917 6918 6931 6932) 125.312 Tj
-4800 TJm
(SCB_STATUS 9120) 78.32 Tj
-5.2228 -284.8004 Td
(REG_VER 6861) 62.656 Tj
203.6302 -284.8004 Td
(9120 9504 9511) 73.0986 Tj
15.6622 -294.2938 Td
(6861 6909) 46.992 Tj
-13800 TJm
(scb_status_word 9182) 104.4266 Tj
-5.2231 -303.7871 Td
(release 1567) 62.656 Tj
203.6299 -303.7871 Td
(9182 9202 9203 9395 9396) 125.312 Tj
15.6619 -313.2805 Td
(0332 1567 1570 1580 1735) 125.312 Tj
-7200 TJm
(9500 9503 9509 9514 9517) 125.312 Tj
15.6619 -322.7739 Td
(1748 1766 1783 1793 2091) 125.312 Tj
-7200 TJm
(9521 9649 9650) 73.0986 Tj
15.6619 -332.2672 Td
(2095 2272 2298 2306 2328) 125.312 Tj
-4800 TJm
(sched 2279) 52.2133 Tj
15.6619 -341.7606 Td
(2352 2377 2390 2434 2444) 125.312 Tj
-7200 TJm
(2279 2282 2284 2297 2335) 125.312 Tj
15.6619 -351.2539 Td
(2465 2469 2554 2563 2801) 125.312 Tj
-7200 TJm
(2383 2516) 46.992 Tj
15.6619 -360.7473 Td
(2824 2830 2834 3009 3256) 125.312 Tj
-4800 TJm
(scheduler 2240) 73.0986 Tj
15.6619 -370.2407 Td
(3675 3680 4458 4475 4512) 125.312 Tj
-7200 TJm
(0314 1318 1337 2240) 99.2053 Tj
15.6619 -379.734 Td
(4625 4636 4691 4880 4898) 125.312 Tj
-4800 TJm
(SCROLLLOCK 7164) 78.32 Tj
15.6619 -389.2274 Td
(4910 4928 4960 4973 4982) 125.312 Tj
-7200 TJm
(7164 7197) 46.992 Tj
15.6619 -398.7207 Td
(5478 5482 5494 5513 5519) 125.312 Tj
-4800 TJm
(SECTSIZE 1162) 67.8773 Tj
15.6619 -408.2141 Td
(6220 6235 6245 6258 6270) 125.312 Tj
-7200 TJm
(1162 1176 1223 1237 1240) 125.312 Tj
15.6619 -417.7075 Td
(7662 7674 7727 7797 7844) 125.312 Tj
-7200 TJm
(1245) 20.8853 Tj
15.6619 -427.2008 Td
(9625 9812 9854 9942 9962) 125.312 Tj
-4800 TJm
(SEG 0704) 41.7707 Tj
-5.2234 -436.6942 Td
(ring_alloc 9751) 78.32 Tj
-15000 TJm
(0704 2134 2135 2139 2140) 125.312 Tj
15.6619 -446.1875 Td
(9751 9808) 46.992 Tj
-13800 TJm
(SEG16 0709) 52.2133 Tj
-5.2234 -455.6809 Td
(ring_init 9867) 73.0986 Tj
-15600 TJm
(0709 2136) 46.992 Tj
15.6619 -465.1743 Td
(9403 9437 9867) 73.0986 Tj
-10800 TJm
(segdesc 0679) 62.656 Tj
-5.2234 -474.6672 Td
(ring_printinfo 9731) 99.2053 Tj
-12600 TJm
(0471 0474 0679 0701 0704) 125.312 Tj
15.6619 -484.1606 Td
(9402 9692 9731) 73.0986 Tj
-13200 TJm
(0709 2020) 46.992 Tj
-5.2234 -493.654 Td
(ROOTDEV 0161) 62.656 Tj
-14400 TJm
(SEG_ASM 0608) 62.656 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 8 8
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 13) 219.2959 Tj
15.664 -28.4801 Td
(0608 1028 1029 1118 1119) 125.312 Tj
-7200 TJm
(3207 3213 4359 4375 4576) 125.312 Tj
-5.2213 -37.9735 Td
(SEG_KCODE 1954) 73.0986 Tj
-15600 TJm
(4580 4718 4856 5454 5458) 125.312 Tj
15.664 -47.4664 Td
(1954 2134 3222 3223) 99.2053 Tj
-10200 TJm
(6156 6165 7358 7372 7682) 125.312 Tj
-5.2213 -56.9598 Td
(SEG_KDATA 1955) 73.0986 Tj
-15600 TJm
(9372 9382 9390) 73.0986 Tj
15.664 -66.4531 Td
(1955 2127 2135) 73.0986 Tj
-10800 TJm
(start 0962 1075 10007) 109.648 Tj
-5.2213 -75.9465 Td
(SEG_NULL 0701) 67.8773 Tj
-16200 TJm
(0961 0962 1017 1074 1075) 125.312 Tj
15.664 -85.4399 Td
(0701 2133 2142 2143) 99.2053 Tj
-10200 TJm
(1110 1111 2730 2733 2734) 125.312 Tj
-5.2213 -94.9332 Td
(SEG_NULLASM 0604) 83.5413 Tj
-14400 TJm
(2737 9807 9810 9824 9825) 125.312 Tj
15.664 -104.4266 Td
(0604 1027 1117) 73.0986 Tj
-13200 TJm
(9827 9828 9829 9830 9831) 125.312 Tj
-5.2213 -113.9199 Td
(SEG_TSS 1958) 62.656 Tj
203.6317 -113.9199 Td
(9832 9839 9840 9844 9845) 125.312 Tj
15.6637 -123.4133 Td
(1958 2136 2137 2147) 99.2053 Tj
-10200 TJm
(9850 9851 9853 10006) 104.4266 Tj
-5.2216 -132.9067 Td
(SEG_UCODE 1956) 73.0986 Tj
-15600 TJm
(10007) 26.1067 Tj
15.6637 -142.4 Td
(1956 2139 2142 2212) 99.2053 Tj
-7800 TJm
(stat 4100) 46.992 Tj
-5.2216 -151.8934 Td
(SEG_UDATA 1957) 73.0986 Tj
-15600 TJm
(0210 0234 0252 4100 4715) 125.312 Tj
15.6637 -161.3867 Td
(1957 2140 2143 2213) 99.2053 Tj
-10200 TJm
(5132 5534 5603 5704 8076) 125.312 Tj
-5.2216 -170.8801 Td
(sem 1706) 41.7707 Tj
203.6314 -170.8801 Td
(8078 9229 9396 9509 9511) 125.312 Tj
15.6634 -180.3735 Td
(1653 1654 1656 1657 1658) 125.312 Tj
-7200 TJm
(9521 9522 9523 9525 9527) 125.312 Tj
15.6634 -189.8664 Td
(1659 1660 1661 1662 1704) 125.312 Tj
-7200 TJm
(9529 9531 9533 9650 9654) 125.312 Tj
15.6634 -199.3594 Td
(1706 1712 1715 1716 1717) 125.312 Tj
-7200 TJm
(9658 9672 9716 9721 9723) 125.312 Tj
15.6634 -208.8524 Td
(1721 1723 1727 1729 1730) 125.312 Tj
-7200 TJm
(9725 10053) 52.2133 Tj
15.6634 -218.3454 Td
(1731 1733 1735 1738 1740) 125.312 Tj
-4800 TJm
(stati 5132) 52.2133 Tj
15.6634 -227.8383 Td
(1741 1743 1744 1745 1747) 125.312 Tj
-7200 TJm
(0252 5132 5538) 73.0986 Tj
15.6634 -237.3313 Td
(1748 1750 1754 1755 1757) 125.312 Tj
-4800 TJm
(STA_R 0617 0721) 78.32 Tj
15.6634 -246.8243 Td
(1758 1759 1761 1763 1766) 125.312 Tj
-7200 TJm
(0617 0721 1028 1118 2134) 125.312 Tj
15.6634 -256.3172 Td
(1771 1775 1776 1778 1783) 125.312 Tj
-7200 TJm
(2139) 20.8853 Tj
15.6634 -265.8102 Td
(1787 1791 1792 1793 1802) 125.312 Tj
-4800 TJm
(STA_W 0616 0720) 78.32 Tj
-5.2219 -275.3036 Td
(sem_t 1654) 52.2133 Tj
203.6311 -275.3036 Td
(0616 0720 1029 1119 2135) 125.312 Tj
15.6631 -284.7969 Td
(1654 1656 1657 1658 1659) 125.312 Tj
-7200 TJm
(2140) 20.8853 Tj
15.6631 -294.2899 Td
(1660 1661 1662 1712 1721) 125.312 Tj
-4800 TJm
(STA_X 0613 0717) 78.32 Tj
15.6631 -303.7829 Td
(1727 1738 1750 1771 1787) 125.312 Tj
-7200 TJm
(0613 0717 1028 1118 2134) 125.312 Tj
-5.2222 -313.2762 Td
(SETGATE 0808) 62.656 Tj
203.6308 -313.2762 Td
(2139) 20.8853 Tj
15.6628 -322.7696 Td
(0808 3222 3223) 73.0986 Tj
-10800 TJm
(sti 0557) 41.7707 Tj
-5.2225 -332.2626 Td
(setupsegs 2122) 73.0986 Tj
-15600 TJm
(0557 0559 1316 1335 1585) 125.312 Tj
15.6628 -341.7559 Td
(0315 1294 1328 2122 2260) 125.312 Tj
-4800 TJm
(strlen 6416) 57.4347 Tj
15.6628 -351.2489 Td
(2269 3660 6112) 73.0986 Tj
-13200 TJm
(0339 6045 6081 6416) 99.2053 Tj
-5.2225 -360.7422 Td
(SHIFT 7158) 52.2133 Tj
203.6305 -360.7422 Td
(10319 10511) 57.4347 Tj
15.6625 -370.2356 Td
(7158 7186 7187 7335) 99.2053 Tj
-7800 TJm
(strncmp 6371) 62.656 Tj
-5.2228 -379.729 Td
(skipelem 5314) 67.8773 Tj
-16200 TJm
(0340 5220 6371) 73.0986 Tj
15.6625 -389.2223 Td
(5314 5364) 46.992 Tj
-13800 TJm
(strncpy 6381) 62.656 Tj
-5.2228 -398.7157 Td
(sleep 2361) 52.2133 Tj
203.6302 -398.7157 Td
(0341 5279 6381) 73.0986 Tj
15.6622 -408.209 Td
(0316 1744 2361 2364 2367) 125.312 Tj
-4800 TJm
(STS_IG32 0735) 67.8773 Tj
15.6622 -417.702 Td
(2568 2581 3678 4508 4621) 125.312 Tj
-7200 TJm
(0735 0814) 46.992 Tj
15.6622 -427.195 Td
(4926 6239 6261 7802 9618) 125.312 Tj
-4800 TJm
(STS_T32A 0732) 67.8773 Tj
15.6622 -436.688 Td
(9939 10129) 52.2133 Tj
-15600 TJm
(0732 2136) 46.992 Tj
-5.2231 -446.1813 Td
(spinlock 1403) 67.8773 Tj
-13800 TJm
(STS_TG32 0736) 67.8773 Tj
15.6622 -455.6747 Td
(0209 0316 0317 0328 0330) 125.312 Tj
-7200 TJm
(0736 0814) 46.992 Tj
15.6622 -465.1676 Td
(0331 0332 0360 1403 1508) 125.312 Tj
-4800 TJm
(STUB 10103 10110 10111 10112 10113) 177.5253 Tj
15.6622 -474.6606 Td
(1513 1526 1567 1620 1702) 125.312 Tj
-7200 TJm
(10110 10111 10112 10113) 120.0906 Tj
15.6622 -484.1536 Td
(1707 1950 2025 2030 2056) 125.312 Tj
-7200 TJm
(10114 10115 10116 10117) 120.0906 Tj
15.6622 -493.6466 Td
(2059 2313 2361 2710 2713) 125.312 Tj
-7200 TJm
(10118 10119 10120 10121) 120.0906 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 14) 219.2959 Tj
15.664 -28.4801 Td
(10122 10123 10124 10125) 120.0906 Tj
-7800 TJm
(3374 3547) 46.992 Tj
15.664 -37.9735 Td
(10126 10127 10128 10129) 120.0906 Tj
-5400 TJm
(SYS_mkdir 3365) 73.0986 Tj
15.664 -47.4668 Td
(10130 10131 10132 10133) 120.0906 Tj
-7800 TJm
(3365 3533) 46.992 Tj
15.664 -56.9602 Td
(10134 10135 10136 10137) 120.0906 Tj
-5400 TJm
(SYS_mknod 3361) 73.0986 Tj
15.664 -66.4535 Td
(10138 10139 10140 10141) 120.0906 Tj
-7800 TJm
(3361 3534) 46.992 Tj
15.664 -75.9469 Td
(10142 10143 10144 10145) 120.0906 Tj
-5400 TJm
(SYS_open 3360) 67.8773 Tj
-5.2213 -85.4403 Td
(sum 6575) 41.7707 Tj
203.6317 -85.4403 Td
(3360 3535) 46.992 Tj
15.6637 -94.9336 Td
(6575 6577 6579 6581 6582) 125.312 Tj
-4800 TJm
(SYS_pipe 3354) 67.8773 Tj
15.6637 -104.427 Td
(6593 6642) 46.992 Tj
-16200 TJm
(3354 3536) 46.992 Tj
-5.2216 -113.9203 Td
(superblock 4210) 78.32 Tj
-12600 TJm
(SYS_read 3356) 67.8773 Tj
15.6637 -123.4137 Td
(4210 4729 4771 4805 5007) 125.312 Tj
-7200 TJm
(3356 3537) 46.992 Tj
-5.2216 -132.9071 Td
(SVR 6711) 41.7707 Tj
182.7464 -132.9071 Td
(SYS_recv 3376) 67.8773 Tj
15.6634 -142.4004 Td
(6711 6743) 46.992 Tj
-16200 TJm
(3376 3549) 46.992 Tj
-5.2219 -151.8938 Td
(swtch 2656) 52.2133 Tj
-15600 TJm
(SYS_recvfrom 3377) 88.7626 Tj
15.6634 -161.3871 Td
(0325 2263 2288 2655 2656) 125.312 Tj
-7200 TJm
(3377 3550) 46.992 Tj
-5.2219 -170.8805 Td
(syscall 3563) 62.656 Tj
-14400 TJm
(SYS_sbrk 3369) 67.8773 Tj
15.6634 -180.3739 Td
(0350 3241 3406 3563) 99.2053 Tj
-10200 TJm
(3369 3538) 46.992 Tj
-5.2219 -189.8668 Td
(SYS_accept 3375) 78.32 Tj
-12600 TJm
(SYS_send 3378) 67.8773 Tj
15.6634 -199.3602 Td
(3375 3548) 46.992 Tj
-16200 TJm
(3378 3551) 46.992 Tj
-5.2219 -208.8535 Td
(SYS_bind 3373) 67.8773 Tj
-13800 TJm
(SYS_sendto 3379) 78.32 Tj
15.6634 -218.3469 Td
(3373 3546) 46.992 Tj
-16200 TJm
(3379 3552) 46.992 Tj
-5.2219 -227.8403 Td
(SYS_chdir 3366) 73.0986 Tj
-13200 TJm
(SYS_setsockopt 3382) 99.2053 Tj
15.6634 -237.3336 Td
(3366 3523) 46.992 Tj
-16200 TJm
(3382 3555) 46.992 Tj
-5.2219 -246.827 Td
(SYS_close 3357) 73.0986 Tj
-13200 TJm
(SYS_shutdown 3380) 88.7626 Tj
15.6634 -256.3203 Td
(3357 3524) 46.992 Tj
-16200 TJm
(3380 3553) 46.992 Tj
-5.2219 -265.8137 Td
(SYS_connect 3384) 83.5413 Tj
-12000 TJm
(SYS_sleep 3370) 73.0986 Tj
15.6634 -275.3071 Td
(3384 3557) 46.992 Tj
-16200 TJm
(3370 3539) 46.992 Tj
-5.2219 -284.8004 Td
(SYS_dup 3367) 62.656 Tj
-14400 TJm
(SYS_sockclose 3383) 93.984 Tj
15.6634 -294.2938 Td
(3367 3525) 46.992 Tj
-16200 TJm
(3383 3556) 46.992 Tj
-5.2219 -303.7871 Td
(SYS_exec 3359) 67.8773 Tj
-13800 TJm
(SYS_socket 3372) 78.32 Tj
15.6634 -313.2805 Td
(3359 3526 10011) 78.32 Tj
-12600 TJm
(3372 3545) 46.992 Tj
-5.2219 -322.7739 Td
(SYS_exit 3352) 67.8773 Tj
-13800 TJm
(sys_timeouts 2907) 88.7626 Tj
15.6634 -332.2668 Td
(3352 3527 10016) 78.32 Tj
-12600 TJm
(2907 2915) 46.992 Tj
-5.2219 -341.7602 Td
(SYS_fork 3351) 67.8773 Tj
-13800 TJm
(SYS_TIMEOUTS_DEFINED 2905) 130.5333 Tj
15.6634 -351.2536 Td
(3351 3528) 46.992 Tj
-16200 TJm
(2904 2905) 46.992 Tj
-5.2219 -360.7469 Td
(SYS_fstat 3363) 73.0986 Tj
-13200 TJm
(SYS_unlink 3362) 78.32 Tj
15.6634 -370.2403 Td
(3363 3529) 46.992 Tj
-16200 TJm
(3362 3540) 46.992 Tj
-5.2219 -379.7336 Td
(SYS_getpeername 3385) 104.4266 Tj
-9600 TJm
(SYS_upmsec 3371) 78.32 Tj
15.6634 -389.227 Td
(3385 3558) 46.992 Tj
-16200 TJm
(3371 3543) 46.992 Tj
-5.2219 -398.7204 Td
(SYS_getpid 3368) 78.32 Tj
-12600 TJm
(SYS_wait 3353) 67.8773 Tj
15.6634 -408.2137 Td
(3368 3530) 46.992 Tj
-16200 TJm
(3353 3541) 46.992 Tj
-5.2219 -417.7071 Td
(SYS_getsockname 3386) 104.4266 Tj
-9600 TJm
(SYS_write 3355) 73.0986 Tj
15.6634 -427.2004 Td
(3386 3559) 46.992 Tj
-16200 TJm
(3355 3542) 46.992 Tj
-5.2219 -436.6938 Td
(SYS_getsockopt 3381) 99.2053 Tj
-10200 TJm
(taskstate 0739) 73.0986 Tj
15.6634 -446.1872 Td
(3381 3554) 46.992 Tj
-16200 TJm
(0739 2019) 46.992 Tj
-5.2219 -455.6805 Td
(SYS_kill 3358) 67.8773 Tj
-13800 TJm
(TBD_DATA_LIMIT 9306) 99.2053 Tj
15.6634 -465.1739 Td
(3358 3531) 46.992 Tj
-16200 TJm
(9306 9804) 46.992 Tj
-5.2219 -474.6668 Td
(SYS_link 3364) 67.8773 Tj
-13800 TJm
(TCCR 6731) 46.992 Tj
15.6634 -484.1602 Td
(3364 3532) 46.992 Tj
-16200 TJm
(6731 6753) 46.992 Tj
-5.2219 -493.6536 Td
(SYS_listen 3374) 78.32 Tj
-12600 TJm
(TDCR 6732) 46.992 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 9 9
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 15) 219.2959 Tj
15.664 -28.4801 Td
(6732 6751) 46.992 Tj
-16200 TJm
(4233 5873) 46.992 Tj
-5.2213 -37.9735 Td
(thread 2912) 57.4347 Tj
-15000 TJm
(T_SYSCALL 3076) 73.0986 Tj
15.664 -47.4664 Td
(1997 2057 2902 2912 2920) 125.312 Tj
-7200 TJm
(3076 3223 3237 10012) 104.4266 Tj
15.664 -56.9598 Td
(2952 2957 2964 2984 3000) 125.312 Tj
-7200 TJm
(10017 10107) 57.4347 Tj
15.664 -66.4531 Td
(3002 3004 3007 3010 7363) 125.312 Tj
-4800 TJm
(uint16_t 0105) 67.8773 Tj
15.664 -75.9465 Td
(9363 9468) 46.992 Tj
-16200 TJm
(0105 8050 8051 9201 9221) 125.312 Tj
-5.2213 -85.4399 Td
(thread_stub 7731) 83.5413 Tj
-14400 TJm
(9227 9236 9252 9282 9285) 125.312 Tj
15.664 -94.9332 Td
(7731 7736) 46.992 Tj
-13800 TJm
(uint32_t 0103) 67.8773 Tj
-5.2213 -104.4266 Td
(ticks 3214) 52.2133 Tj
203.6317 -104.4266 Td
(0103 2315 2316 7963 7964) 125.312 Tj
15.6637 -113.9199 Td
(0358 3214 3254 3255 3672) 125.312 Tj
-7200 TJm
(7966 7967 7969 7970 7976) 125.312 Tj
15.6637 -123.4133 Td
(3673 3678 7936) 73.0986 Tj
-13200 TJm
(8763 8764 8774 8801 8802) 125.312 Tj
-5.2216 -132.9067 Td
(tickslock 3213) 73.0986 Tj
-15600 TJm
(8803 8804 8812 8817 8818) 125.312 Tj
15.6637 -142.4 Td
(0360 3213 3225 3253 3256) 125.312 Tj
-7200 TJm
(8825 8832 8835 8872 8887) 125.312 Tj
15.6637 -151.8934 Td
(3671 3675 3678 3680) 99.2053 Tj
-10200 TJm
(8928 8929 8973 8974 8978) 125.312 Tj
-5.2216 -161.3867 Td
(TICR 6730) 46.992 Tj
203.6314 -161.3867 Td
(8982 8988 9105 9106 9268) 125.312 Tj
15.6634 -170.8801 Td
(6730 6752) 46.992 Tj
-16200 TJm
(9280 9369 9370 9373 9374) 125.312 Tj
-5.2219 -180.3735 Td
(TIMER 6722) 52.2133 Tj
203.6311 -180.3735 Td
(9377 9383 9384 9385 9421) 125.312 Tj
15.6631 -189.8664 Td
(6722 6754) 46.992 Tj
-16200 TJm
(9428 9578 9751 9767 9768) 125.312 Tj
-5.2222 -199.3598 Td
(TIMER_16BIT 7921) 83.5413 Tj
-14400 TJm
(9788 9789 9801 9859 9886) 125.312 Tj
15.6631 -208.8532 Td
(7921 7927) 46.992 Tj
-16200 TJm
(9909 9925) 46.992 Tj
-5.2222 -218.3465 Td
(TIMER_DIV 7916) 73.0986 Tj
-13200 TJm
(uint8_t 0107) 62.656 Tj
15.6631 -227.8399 Td
(7916 7928 7929) 73.0986 Tj
-13200 TJm
(0107 7971 8111 8112 8113) 125.312 Tj
-5.2222 -237.3332 Td
(TIMER_FREQ 7915) 78.32 Tj
-15000 TJm
(8114 8550 8551 8552 8553) 125.312 Tj
15.6631 -246.8266 Td
(7915 7916) 46.992 Tj
-16200 TJm
(8658 8663 8664 8665 8684) 125.312 Tj
-5.2222 -256.32 Td
(timer_init 7924) 78.32 Tj
-15000 TJm
(8685 8686 9273 9274 9397) 125.312 Tj
15.6631 -265.8133 Td
(0353 1310 7924) 73.0986 Tj
-13200 TJm
(9569) 20.8853 Tj
-5.2222 -275.3067 Td
(TIMER_MODE 7918) 78.32 Tj
-12600 TJm
(userinit 2202) 67.8773 Tj
15.6631 -284.8 Td
(7918 7927) 46.992 Tj
-16200 TJm
(0318 1311 2202) 73.0986 Tj
-5.2222 -294.2934 Td
(TIMER_RATEGEN 7920) 93.984 Tj
-10800 TJm
(VER 6708) 41.7707 Tj
15.6631 -303.7868 Td
(7920 7927) 46.992 Tj
-16200 TJm
(6708 6762) 46.992 Tj
-5.2222 -313.2801 Td
(TIMER_SEL0 7919) 78.32 Tj
-12600 TJm
(wait 2523) 46.992 Tj
15.6631 -322.7735 Td
(7919 7927) 46.992 Tj
-16200 TJm
(0319 2523 2540 3628) 99.2053 Tj
-5.2222 -332.2664 Td
(TPR 6709) 41.7707 Tj
203.6308 -332.2664 Td
(10083 10112 10244 10270) 120.0906 Tj
15.6628 -341.7598 Td
(6709 6782) 46.992 Tj
-16200 TJm
(10271 10326) 57.4347 Tj
-5.2225 -351.2532 Td
(trap 3235) 46.992 Tj
-16200 TJm
(waitdisk 1201) 67.8773 Tj
15.6628 -360.7465 Td
(3102 3104 3169 3235 3286) 125.312 Tj
-7200 TJm
(1201 1213 1222) 73.0986 Tj
15.6628 -370.2399 Td
(3293) 20.8853 Tj
182.7458 -370.2399 Td
(wakeup 2440) 57.4347 Tj
-5.2222 -379.7332 Td
(trapframe 0564) 73.0986 Tj
-15600 TJm
(0320 2440 3255 4469 4689) 125.312 Tj
15.6631 -389.2266 Td
(0564 1995 2067 2168 3235) 125.312 Tj
-7200 TJm
(4959 4979 6215 6218 6238) 125.312 Tj
15.6631 -398.72 Td
(4395 6954 9400 9629) 99.2053 Tj
-10200 TJm
(6244 6269 7721 9663 9665) 125.312 Tj
-5.2222 -408.2133 Td
(trapret 3174) 62.656 Tj
-14400 TJm
(wakeup1 2403) 62.656 Tj
15.6631 -417.7067 Td
(3173 3174 3186) 73.0986 Tj
-13200 TJm
(2403 2443 2499 2505) 99.2053 Tj
-5.2222 -427.2 Td
(tvinit 3217) 57.4347 Tj
-15000 TJm
(wakeup_one 2430) 78.32 Tj
15.6631 -436.6934 Td
(0359 1290 3217) 73.0986 Tj
-13200 TJm
(0321 1733 2430) 73.0986 Tj
-5.2222 -446.1868 Td
(T_DEV 4234) 52.2133 Tj
-15600 TJm
(wakeup_one1 2416) 83.5413 Tj
15.6631 -455.6801 Td
(4234 5158 5185 5914) 99.2053 Tj
-10200 TJm
(2416 2433) 46.992 Tj
-5.2222 -465.1735 Td
(T_DIR 4232) 52.2133 Tj
-15600 TJm
(writei 5180) 57.4347 Tj
15.6631 -474.6665 Td
(4232 5233 5368 5723 5794) 125.312 Tj
-7200 TJm
(0253 5180 5281 5582 5801) 125.312 Tj
15.6631 -484.1598 Td
(5850 5879 5926 5941) 99.2053 Tj
-10200 TJm
(5802) 20.8853 Tj
-5.2222 -493.6532 Td
(T_FILE 4233) 57.4347 Tj
-15000 TJm
(XV6_ASSERT_H_ 1851) 93.984 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  cross-references  Page 16) 219.2959 Tj
15.664 -28.4801 Td
(1850 1851) 46.992 Tj
-13800 TJm
(XV6_SPINLOCK_H_ 1401) 104.4266 Tj
-5.2213 -37.9735 Td
(XV6_DEFS_H_ 0201) 83.5413 Tj
-14400 TJm
(1400 1401) 46.992 Tj
15.664 -47.4664 Td
(0200 0201) 46.992 Tj
-13800 TJm
(XV6_THREAD_H_ 2901) 93.984 Tj
-5.2213 -56.9598 Td
(XV6_E100_H_ 9101) 83.5413 Tj
-14400 TJm
(2900 2901) 46.992 Tj
15.664 -66.4531 Td
(9100 9101) 46.992 Tj
-13800 TJm
(XV6_TYPES_H_ 0101) 88.7626 Tj
-5.2213 -75.9465 Td
(XV6_MMU_H_ 0651) 78.32 Tj
-15000 TJm
(0100 0101) 46.992 Tj
15.664 -85.4399 Td
(0650 0651) 46.992 Tj
-13800 TJm
(XV6_X86_H_ 0401) 78.32 Tj
-5.2213 -94.9332 Td
(XV6_PARAM_H_ 0151) 88.7626 Tj
-13800 TJm
(0400 0401) 46.992 Tj
15.664 -104.4266 Td
(0150 0151) 46.992 Tj
-13800 TJm
(yield 2293) 52.2133 Tj
-5.2213 -113.9199 Td
(XV6_PCI_H_ 7951) 78.32 Tj
-15000 TJm
(0322 2293 3311) 73.0986 Tj
15.664 -123.4133 Td
(7950 7951) 46.992 Tj
-13800 TJm
(_DEV_PCI_PCIREG_H_ 8034) 120.0906 Tj
-5.2213 -132.9067 Td
(XV6_PICIRQ_H_ 6951) 93.984 Tj
-13200 TJm
(8033 8034 8722) 73.0986 Tj
15.664 -142.4 Td
(6950 6951) 46.992 Tj
-13800 TJm
(_namei 5354) 57.4347 Tj
-5.2213 -151.8934 Td
(XV6_SEM_H_ 1651) 78.32 Tj
-15000 TJm
(5354 5395 5403) 73.0986 Tj
15.664 -161.3867 Td
(1650 1651) 46.992 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 10 10
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/types.h  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(0100 #ifndef XV6_TYPES_H_) 130.5333 Tj
-5.2213 -37.9735 Td
(0101 #define XV6_TYPES_H_) 130.5333 Tj
-5.2213 -47.4668 Td
(0102 typedef unsigned int   uint;) 172.304 Tj
-5.2213 -56.9602 Td
(0103 typedef unsigned int   uint32_t;) 193.1893 Tj
-5.2213 -66.4535 Td
(0104 typedef unsigned short ushort;) 182.7466 Tj
-5.2213 -75.9469 Td
(0105 typedef unsigned short uint16_t;) 193.1893 Tj
-5.2213 -85.4403 Td
(0106 typedef unsigned char  uchar;) 177.5253 Tj
-5.2213 -94.9336 Td
(0107 typedef unsigned char  uint8_t;) 187.968 Tj
-5.2213 -104.427 Td
(0108 #endif // XV6_TYPES_H_) 140.976 Tj
-5.2213 -113.9203 Td
(0109 ) 26.1067 Tj
-5.2213 -123.4137 Td
(0110 ) 26.1067 Tj
-5.2213 -132.9071 Td
(0111 ) 26.1067 Tj
-5.2213 -142.4004 Td
(0112 ) 26.1067 Tj
-5.2213 -151.8938 Td
(0113 ) 26.1067 Tj
-5.2213 -161.3871 Td
(0114 ) 26.1067 Tj
-5.2213 -170.8805 Td
(0115 ) 26.1067 Tj
-5.2213 -180.3739 Td
(0116 ) 26.1067 Tj
-5.2213 -189.8672 Td
(0117 ) 26.1067 Tj
-5.2213 -199.3606 Td
(0118 ) 26.1067 Tj
-5.2213 -208.8539 Td
(0119 ) 26.1067 Tj
-5.2213 -218.3473 Td
(0120 ) 26.1067 Tj
-5.2213 -227.8407 Td
(0121 ) 26.1067 Tj
-5.2213 -237.334 Td
(0122 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0123 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0124 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(0126 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0127 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0128 ) 26.1067 Tj
-5.2213 -303.7875 Td
(0129 ) 26.1067 Tj
-5.2213 -313.2809 Td
(0130 ) 26.1067 Tj
-5.2213 -322.7743 Td
(0131 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0132 ) 26.1067 Tj
-5.2213 -341.761 Td
(0133 ) 26.1067 Tj
-5.2213 -351.2543 Td
(0134 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0135 ) 26.1067 Tj
-5.2213 -370.2411 Td
(0136 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0137 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0138 ) 26.1067 Tj
-5.2213 -398.7211 Td
(0139 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0140 ) 26.1067 Tj
-5.2213 -417.7079 Td
(0141 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0142 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0143 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0144 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0146 ) 26.1067 Tj
-5.2213 -474.668 Td
(0147 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 01) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/param.h  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(0150 #ifndef XV6_PARAM_H_) 130.5333 Tj
-5.2213 -37.9735 Td
(0151 #define XV6_PARAM_H_) 130.5333 Tj
-5.2213 -47.4668 Td
(0152 #define NPROC        64  // maximum number of processes) 313.2799 Tj
-5.2213 -56.9602 Td
(0153 #define PAGE       4096  // granularity of user-space memo\
ry allocation) 396.8212 Tj
-5.2213 -66.4535 Td
(0154 #define KSTACKSIZE PAGE  // size of per-process kernel sta\
ck) 339.3866 Tj
-5.2213 -75.9469 Td
(0155 #define NCPU          1  // maximum number of CPUs) 287.1733 Tj
-5.2213 -85.4403 Td
(0156 #define NOFILE       16  // open files per process) 287.1733 Tj
-5.2213 -94.9336 Td
(0157 #define NFILE       100  // open files per system) 281.9519 Tj
-5.2213 -104.427 Td
(0158 #define NBUF         10  // size of disk block cache) 297.6159 Tj
-5.2213 -113.9203 Td
(0159 #define NINODE       50  // maximum number of active i-nod\
es) 339.3866 Tj
-5.2213 -123.4137 Td
(0160 #define NDEV         10  // maximum major device number) 313.2799 Tj
-5.2213 -132.9071 Td
(0161 #define ROOTDEV       1  // device number of file system r\
oot disk) 370.7146 Tj
-5.2213 -142.4004 Td
(0162 ) 26.1067 Tj
-5.2213 -151.8938 Td
(0163 #endif // XV6_PARAM_H_) 140.976 Tj
-5.2213 -161.3871 Td
(0164 ) 26.1067 Tj
-5.2213 -170.8805 Td
(0165 ) 26.1067 Tj
-5.2213 -180.3739 Td
(0166 ) 26.1067 Tj
-5.2213 -189.8672 Td
(0167 ) 26.1067 Tj
-5.2213 -199.3606 Td
(0168 ) 26.1067 Tj
-5.2213 -208.8539 Td
(0169 ) 26.1067 Tj
-5.2213 -218.3473 Td
(0170 ) 26.1067 Tj
-5.2213 -227.8407 Td
(0171 ) 26.1067 Tj
-5.2213 -237.334 Td
(0172 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0173 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0174 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0175 ) 26.1067 Tj
-5.2213 -275.3075 Td
(0176 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0177 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0178 ) 26.1067 Tj
-5.2213 -303.7875 Td
(0179 ) 26.1067 Tj
-5.2213 -313.2809 Td
(0180 ) 26.1067 Tj
-5.2213 -322.7743 Td
(0181 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0182 ) 26.1067 Tj
-5.2213 -341.761 Td
(0183 ) 26.1067 Tj
-5.2213 -351.2543 Td
(0184 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0185 ) 26.1067 Tj
-5.2213 -370.2411 Td
(0186 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0187 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0188 ) 26.1067 Tj
-5.2213 -398.7211 Td
(0189 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0190 ) 26.1067 Tj
-5.2213 -417.7079 Td
(0191 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0192 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0193 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0194 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0195 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0196 ) 26.1067 Tj
-5.2213 -474.668 Td
(0197 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0198 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 01) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 11 11
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/defs.h  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(0200 #ifndef XV6_DEFS_H_) 125.312 Tj
-5.2213 -37.9735 Td
(0201 #define XV6_DEFS_H_) 125.312 Tj
-5.2213 -47.4668 Td
(0202 #include "types.h") 120.0906 Tj
-5.2213 -56.9602 Td
(0203 struct buf;) 83.5413 Tj
-5.2213 -66.4535 Td
(0204 struct context;) 104.4266 Tj
-5.2213 -75.9469 Td
(0205 struct file;) 88.7626 Tj
-5.2213 -85.4403 Td
(0206 struct inode;) 93.984 Tj
-5.2213 -94.9336 Td
(0207 struct pipe;) 88.7626 Tj
-5.2213 -104.427 Td
(0208 struct proc;) 88.7626 Tj
-5.2213 -113.9203 Td
(0209 struct spinlock;) 109.648 Tj
-5.2213 -123.4137 Td
(0210 struct stat;) 88.7626 Tj
-5.2213 -132.9071 Td
(0211 ) 26.1067 Tj
-5.2213 -142.4004 Td
(0212 // bio.c) 67.8773 Tj
-5.2213 -151.8938 Td
(0213 void            binit\(void\);) 172.304 Tj
-5.2213 -161.3871 Td
(0214 struct buf*     bread\(uint, uint\);) 203.6319 Tj
-5.2213 -170.8805 Td
(0215 void            brelse\(struct buf*\);) 214.0746 Tj
-5.2213 -180.3739 Td
(0216 void            bwrite\(struct buf*\);) 214.0746 Tj
-5.2213 -189.8672 Td
(0217 ) 26.1067 Tj
-5.2213 -199.3606 Td
(0218 // console.c) 88.7626 Tj
-5.2213 -208.8539 Td
(0219 void            console_init\(void\);) 208.8533 Tj
-5.2213 -218.3473 Td
(0220 void            cprintf\(char*, ...\);) 214.0746 Tj
-5.2213 -227.8407 Td
(0221 void            console_intr\(int\(*\)\(void\)\);) 250.6239 Tj
-5.2213 -237.334 Td
(0222 void            panic\(char*\) __attribute__\(\(noreturn\)\
\);) 313.2799 Tj
-5.2213 -246.8274 Td
(0223 void            printstack\(void\);) 198.4106 Tj
-5.2213 -256.3207 Td
(0224 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0225 // exec.c) 73.0986 Tj
-5.2213 -275.3075 Td
(0226 int             exec\(char*, char**\);) 214.0746 Tj
-5.2213 -284.8008 Td
(0227 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0228 // file.c) 73.0986 Tj
-5.2213 -303.7875 Td
(0229 struct file*    filealloc\(void\);) 193.1893 Tj
-5.2213 -313.2809 Td
(0230 void            fileclose\(struct file*\);) 234.9599 Tj
-5.2213 -322.7743 Td
(0231 struct file*    filedup\(struct file*\);) 224.5173 Tj
-5.2213 -332.2676 Td
(0232 void            fileinit\(void\);) 187.968 Tj
-5.2213 -341.761 Td
(0233 int             fileread\(struct file*, char*, int n\);) 302.8373 Tj
-5.2213 -351.2543 Td
(0234 int             filestat\(struct file*, struct stat*\);) 302.8373 Tj
-5.2213 -360.7477 Td
(0235 int             filewrite\(struct file*, char*, int n\);) 308.0586 Tj
-5.2213 -370.2411 Td
(0236 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0237 // fs.c) 62.656 Tj
-5.2213 -389.2278 Td
(0238 int             dirlink\(struct inode*, char*, uint\);) 297.6159 Tj
-5.2213 -398.7211 Td
(0239 struct inode*   dirlookup\(struct inode*, char*, uint*\);) 313.2799 Tj
-5.2213 -408.2145 Td
(0240 struct inode*   ialloc\(uint, short\);) 214.0746 Tj
-5.2213 -417.7079 Td
(0241 struct inode*   idup\(struct inode*\);) 214.0746 Tj
-5.2213 -427.2012 Td
(0242 void            iinit\(void\);) 172.304 Tj
-5.2213 -436.6946 Td
(0243 void            ilock\(struct inode*\);) 219.2959 Tj
-5.2213 -446.1879 Td
(0244 void            iput\(struct inode*\);) 214.0746 Tj
-5.2213 -455.6813 Td
(0245 void            iunlock\(struct inode*\);) 229.7386 Tj
-5.2213 -465.1747 Td
(0246 void            iunlockput\(struct inode*\);) 245.4026 Tj
-5.2213 -474.668 Td
(0247 void            iupdate\(struct inode*\);) 229.7386 Tj
-5.2213 -484.1614 Td
(0248 int             namecmp\(const char*, const char*\);) 287.1733 Tj
-5.2213 -493.6547 Td
(0249 struct inode*   namei\(char*\);) 177.5253 Tj
-5.2213 -522.1348 Td
(Sheet 02) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/defs.h  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(0250 struct inode*   nameiparent\(char*, char*\);) 245.4026 Tj
-5.2213 -37.9735 Td
(0251 int             readi\(struct inode*, char*, uint, uint\);) 318.5013 Tj
-5.2213 -47.4668 Td
(0252 void            stati\(struct inode*, struct stat*\);) 292.3946 Tj
-5.2213 -56.9602 Td
(0253 int             writei\(struct inode*, char*, uint, uint\)\
;) 323.7226 Tj
-5.2213 -66.4535 Td
(0254 ) 26.1067 Tj
-5.2213 -75.9469 Td
(0255 // ide.c) 67.8773 Tj
-5.2213 -85.4403 Td
(0256 void            ide_init\(void\);) 187.968 Tj
-5.2213 -94.9336 Td
(0257 void            ide_intr\(void\);) 187.968 Tj
-5.2213 -104.427 Td
(0258 void            ide_rw\(struct buf *\);) 219.2959 Tj
-5.2213 -113.9203 Td
(0259 ) 26.1067 Tj
-5.2213 -123.4137 Td
(0260 // ioapic.c) 83.5413 Tj
-5.2213 -132.9071 Td
(0261 void            ioapic_enable\(int irq, int cpu\);) 276.7306 Tj
-5.2213 -142.4004 Td
(0262 extern uchar    ioapic_id;) 161.8613 Tj
-5.2213 -151.8938 Td
(0263 void            ioapic_init\(void\);) 203.6319 Tj
-5.2213 -161.3871 Td
(0264 ) 26.1067 Tj
-5.2213 -170.8805 Td
(0265 // kalloc.c) 83.5413 Tj
-5.2213 -180.3739 Td
(0266 char*           kalloc\(int\);) 172.304 Tj
-5.2213 -189.8672 Td
(0267 void            kfree\(char*, int\);) 203.6319 Tj
-5.2213 -199.3606 Td
(0268 void*           kmalloc\(int\);) 177.5253 Tj
-5.2213 -208.8539 Td
(0269 void            kmfree\(void*, int\);) 208.8533 Tj
-5.2213 -218.3473 Td
(0270 void            kinit\(void\);) 172.304 Tj
-5.2213 -227.8407 Td
(0271 ) 26.1067 Tj
-5.2213 -237.334 Td
(0272 // kbd.c) 67.8773 Tj
-5.2213 -246.8274 Td
(0273 void            kbd_intr\(void\);) 187.968 Tj
-5.2213 -256.3207 Td
(0274 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0275 // lapic.c) 78.32 Tj
-5.2213 -275.3075 Td
(0276 int             cpu\(void\);) 161.8613 Tj
-5.2213 -284.8008 Td
(0277 extern volatile uint*    lapic;) 187.968 Tj
-5.2213 -294.2942 Td
(0278 void            lapic_disableintr\(void\);) 234.9599 Tj
-5.2213 -303.7875 Td
(0279 void            lapic_enableintr\(void\);) 229.7386 Tj
-5.2213 -313.2809 Td
(0280 void            lapic_eoi\(void\);) 193.1893 Tj
-5.2213 -322.7743 Td
(0281 void            lapic_init\(int\);) 193.1893 Tj
-5.2213 -332.2676 Td
(0282 void            lapic_startap\(uchar, uint\);) 250.6239 Tj
-5.2213 -341.761 Td
(0283 void            lapic_timerinit\(void\);) 224.5173 Tj
-5.2213 -351.2543 Td
(0284 void            lapic_timerintr\(void\);) 224.5173 Tj
-5.2213 -360.7477 Td
(0285 ) 26.1067 Tj
-5.2213 -370.2411 Td
(0286 // mp.c) 62.656 Tj
-5.2213 -379.7344 Td
(0287 extern int      ismp;) 135.7546 Tj
-5.2213 -389.2278 Td
(0288 int             mp_bcpu\(void\);) 182.7466 Tj
-5.2213 -398.7211 Td
(0289 void            mp_init\(void\);) 182.7466 Tj
-5.2213 -408.2145 Td
(0290 void            mp_startthem\(void\);) 208.8533 Tj
-5.2213 -417.7079 Td
(0291 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0292 // picirq.c) 83.5413 Tj
-5.2213 -436.6946 Td
(0293 void            pic_enable\(int\);) 193.1893 Tj
-5.2213 -446.1879 Td
(0294 void            pic_init\(void\);) 187.968 Tj
-5.2213 -455.6813 Td
(0295 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0296 ) 26.1067 Tj
-5.2213 -474.668 Td
(0297 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0298 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0299 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 02) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 12 12
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/defs.h  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(0300 // pipe.c) 73.0986 Tj
-5.2213 -37.9735 Td
(0301 int             pipealloc\(struct file**, struct file**\);) 318.5013 Tj
-5.2213 -47.4668 Td
(0302 void            pipeclose\(struct pipe*, int\);) 261.0666 Tj
-5.2213 -56.9602 Td
(0303 int             piperead\(struct pipe*, char*, int\);) 292.3946 Tj
-5.2213 -66.4535 Td
(0304 int             pipewrite\(struct pipe*, char*, int\);) 297.6159 Tj
-5.2213 -75.9469 Td
(0305 ) 26.1067 Tj
-5.2213 -85.4403 Td
(0306 // proc.c) 73.0986 Tj
-5.2213 -94.9336 Td
(0307 struct proc*    copyproc\(struct proc*\);) 229.7386 Tj
-5.2213 -104.427 Td
(0308 struct proc*    allocproc\(void\);) 193.1893 Tj
-5.2213 -113.9203 Td
(0309 void            exit\(void\);) 167.0826 Tj
-5.2213 -123.4137 Td
(0310 int             growproc\(int\);) 182.7466 Tj
-5.2213 -132.9071 Td
(0311 int             kill\(int\);) 161.8613 Tj
-5.2213 -142.4004 Td
(0312 void            pinit\(void\);) 172.304 Tj
-5.2213 -151.8938 Td
(0313 void            procdump\(void\);) 187.968 Tj
-5.2213 -161.3871 Td
(0314 void            scheduler\(void\) __attribute__\(\(noretur\
n\)\);) 328.9439 Tj
-5.2213 -170.8805 Td
(0315 void            setupsegs\(struct proc*\);) 234.9599 Tj
-5.2213 -180.3739 Td
(0316 void            sleep\(void*, struct spinlock*\);) 271.5093 Tj
-5.2213 -189.8672 Td
(0317 int             msleep_spin\(void*, struct spinlock*, int\)\
;) 328.9439 Tj
-5.2213 -199.3606 Td
(0318 void            userinit\(void\);) 187.968 Tj
-5.2213 -208.8539 Td
(0319 int             wait\(void\);) 167.0826 Tj
-5.2213 -218.3473 Td
(0320 void            wakeup\(void*\);) 182.7466 Tj
-5.2213 -227.8407 Td
(0321 void            wakeup_one\(void*\);) 203.6319 Tj
-5.2213 -237.334 Td
(0322 void            yield\(void\);) 172.304 Tj
-5.2213 -246.8274 Td
(0323 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0324 // swtch.S) 78.32 Tj
-5.2213 -265.8141 Td
(0325 void            swtch\(struct context*, struct context*\);) 318.5013 Tj
-5.2213 -275.3075 Td
(0326 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0327 // spinlock.c) 93.984 Tj
-5.2213 -294.2942 Td
(0328 void            acquire\(struct spinlock*\);) 245.4026 Tj
-5.2213 -303.7875 Td
(0329 void            getcallerpcs\(void*, uint*\);) 250.6239 Tj
-5.2213 -313.2809 Td
(0330 int             holding\(struct spinlock*\);) 245.4026 Tj
-5.2213 -322.7743 Td
(0331 void            initlock\(struct spinlock*, char*\);) 287.1733 Tj
-5.2213 -332.2676 Td
(0332 void            release\(struct spinlock*\);) 245.4026 Tj
-5.2213 -341.761 Td
(0333 ) 26.1067 Tj
-5.2213 -351.2543 Td
(0334 // string.c) 83.5413 Tj
-5.2213 -360.7477 Td
(0335 int             memcmp\(const void*, const void*, uint\);) 313.2799 Tj
-5.2213 -370.2411 Td
(0336 void*           memmove\(void*, const void*, uint\);) 287.1733 Tj
-5.2213 -379.7344 Td
(0337 void*           memset\(void*, int, uint\);) 240.1813 Tj
-5.2213 -389.2278 Td
(0338 char*           safestrcpy\(char*, const char*, int\);) 297.6159 Tj
-5.2213 -398.7211 Td
(0339 int             strlen\(const char*\);) 214.0746 Tj
-5.2213 -408.2145 Td
(0340 int             strncmp\(const char*, const char*, uint\);) 318.5013 Tj
-5.2213 -417.7079 Td
(0341 char*           strncpy\(char*, const char*, int\);) 281.9519 Tj
-5.2213 -427.2012 Td
(0342 void*           memcpy\(void *dst, const void *src, uint n\
\);) 334.1652 Tj
-5.2213 -436.6946 Td
(0343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0344 // syscall.c) 88.7626 Tj
-5.2213 -455.6813 Td
(0345 int             argint\(int, int*\);) 203.6319 Tj
-5.2213 -465.1747 Td
(0346 int             argptr\(int, char**, int\);) 240.1813 Tj
-5.2213 -474.668 Td
(0347 int             argstr\(int, char**\);) 214.0746 Tj
-5.2213 -484.1614 Td
(0348 int             fetchint\(struct proc*, uint, int*\);) 292.3946 Tj
-5.2213 -493.6547 Td
(0349 int             fetchstr\(struct proc*, uint, char**\);) 302.8373 Tj
-5.2213 -522.1348 Td
(Sheet 03) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/defs.h  Page 4) 182.7466 Tj
-5.2213 -28.4801 Td
(0350 void            syscall\(void\);) 182.7466 Tj
-5.2213 -37.9735 Td
(0351 ) 26.1067 Tj
-5.2213 -47.4668 Td
(0352 // timer.c) 78.32 Tj
-5.2213 -56.9602 Td
(0353 void            timer_init\(void\);) 198.4106 Tj
-5.2213 -66.4535 Td
(0354 int             millitime\(void\);) 193.1893 Tj
-5.2213 -75.9469 Td
(0355 ) 26.1067 Tj
-5.2213 -85.4403 Td
(0356 // trap.c) 73.0986 Tj
-5.2213 -94.9336 Td
(0357 void            idtinit\(void\);) 182.7466 Tj
-5.2213 -104.427 Td
(0358 extern int      ticks;) 140.976 Tj
-5.2213 -113.9203 Td
(0359 void            tvinit\(void\);) 177.5253 Tj
-5.2213 -123.4137 Td
(0360 extern struct spinlock tickslock;) 198.4106 Tj
-5.2213 -132.9071 Td
(0361 ) 26.1067 Tj
-5.2213 -142.4004 Td
(0362 // number of elements in fixed-size array) 240.1813 Tj
-5.2213 -151.8938 Td
(0363 #define NELEM\(x\) \(sizeof\(x\)/sizeof\(\(x\)[0]\)\)) 250.6239 Tj
-5.2213 -161.3871 Td
(0364 ) 26.1067 Tj
-5.2213 -170.8805 Td
(0365 #ifndef NULL) 88.7626 Tj
-5.2213 -180.3739 Td
(0366 #define NULL    0) 114.8693 Tj
-5.2213 -189.8672 Td
(0367 #endif) 57.4347 Tj
-5.2213 -199.3606 Td
(0368 ) 26.1067 Tj
-5.2213 -208.8539 Td
(0369 #endif // XV6_DEFS_H_) 135.7546 Tj
-5.2213 -218.3473 Td
(0370 ) 26.1067 Tj
-5.2213 -227.8407 Td
(0371 ) 26.1067 Tj
-5.2213 -237.334 Td
(0372 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0373 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0374 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0375 ) 26.1067 Tj
-5.2213 -275.3075 Td
(0376 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0377 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0378 ) 26.1067 Tj
-5.2213 -303.7875 Td
(0379 ) 26.1067 Tj
-5.2213 -313.2809 Td
(0380 ) 26.1067 Tj
-5.2213 -322.7743 Td
(0381 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0382 ) 26.1067 Tj
-5.2213 -341.761 Td
(0383 ) 26.1067 Tj
-5.2213 -351.2543 Td
(0384 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0385 ) 26.1067 Tj
-5.2213 -370.2411 Td
(0386 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0387 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0388 ) 26.1067 Tj
-5.2213 -398.7211 Td
(0389 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0390 ) 26.1067 Tj
-5.2213 -417.7079 Td
(0391 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0392 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0393 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0394 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0395 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0396 ) 26.1067 Tj
-5.2213 -474.668 Td
(0397 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 03) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 13 13
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/x86.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(0400 #ifndef XV6_X86_H_) 120.0906 Tj
-5.2213 -37.9735 Td
(0401 #define XV6_X86_H_) 120.0906 Tj
-5.2213 -47.4668 Td
(0402 // Routines to let C code use special x86 instructions.) 313.2799 Tj
-5.2213 -56.9602 Td
(0403 ) 26.1067 Tj
-5.2213 -66.4535 Td
(0404 static inline uchar) 125.312 Tj
-5.2213 -75.9469 Td
(0405 inb\(ushort port\)) 109.648 Tj
-5.2213 -85.4403 Td
(0406 {) 31.328 Tj
-5.2213 -94.9336 Td
(0407   uchar data;) 93.984 Tj
-5.2213 -104.427 Td
(0408 ) 26.1067 Tj
-5.2213 -113.9203 Td
(0409   asm volatile\("in %1,%0" : "=a" \(data\) : "d" \(port\)\)\
;) 308.0586 Tj
-5.2213 -123.4137 Td
(0410   return data;) 99.2053 Tj
-5.2213 -132.9071 Td
(0411 }) 31.328 Tj
-5.2213 -142.4004 Td
(0412 ) 26.1067 Tj
-5.2213 -151.8938 Td
(0413 static inline uint) 120.0906 Tj
-5.2213 -161.3871 Td
(0414 inl\(ushort port\)) 109.648 Tj
-5.2213 -170.8805 Td
(0415 {) 31.328 Tj
-5.2213 -180.3739 Td
(0416     uint data;) 99.2053 Tj
-5.2213 -189.8672 Td
(0417 ) 26.1067 Tj
-5.2213 -199.3606 Td
(0418     asm volatile\("in %1,%0" : "=a" \(data\) : "d" \(port\)\
\);) 318.5013 Tj
-5.2213 -208.8539 Td
(0419     return data;) 109.648 Tj
-5.2213 -218.3473 Td
(0420 }) 31.328 Tj
-5.2213 -227.8407 Td
(0421 ) 26.1067 Tj
-5.2213 -237.334 Td
(0422 static inline ushort) 130.5333 Tj
-5.2213 -246.8274 Td
(0423 inw\(ushort port\)) 109.648 Tj
-5.2213 -256.3207 Td
(0424 {) 31.328 Tj
-5.2213 -265.8141 Td
(0425     ushort data;) 109.648 Tj
-5.2213 -275.3075 Td
(0426 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0427     asm volatile\("in %1,%0" : "=a" \(data\) : "d" \(port\)\
\);) 318.5013 Tj
-5.2213 -294.2942 Td
(0428     return data;) 109.648 Tj
-5.2213 -303.7875 Td
(0429 }) 31.328 Tj
-5.2213 -313.2809 Td
(0430 ) 26.1067 Tj
-5.2213 -322.7743 Td
(0431 static inline void) 120.0906 Tj
-5.2213 -332.2676 Td
(0432 insl\(int port, void *addr, int cnt\)) 208.8533 Tj
-5.2213 -341.761 Td
(0433 {) 31.328 Tj
-5.2213 -351.2543 Td
(0434   asm volatile\("cld\\n\\trepne\\n\\tinsl"     :) 250.6239 Tj
-5.2213 -360.7477 Td
(0435                    "=D" \(addr\), "=c" \(cnt\)    :) 271.5093 Tj
-5.2213 -370.2411 Td
(0436                    "d" \(port\), "0" \(addr\), "1" \(cnt\)\
  :) 313.2799 Tj
-5.2213 -379.7344 Td
(0437                    "memory", "cc"\);) 208.8533 Tj
-5.2213 -389.2278 Td
(0438 }) 31.328 Tj
-5.2213 -398.7211 Td
(0439 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0440 static inline void) 120.0906 Tj
-5.2213 -417.7079 Td
(0441 outb\(ushort port, uchar data\)) 177.5253 Tj
-5.2213 -427.2012 Td
(0442 {) 31.328 Tj
-5.2213 -436.6946 Td
(0443   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\
\);) 313.2799 Tj
-5.2213 -446.1879 Td
(0444 }) 31.328 Tj
-5.2213 -455.6813 Td
(0445 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0446 ) 26.1067 Tj
-5.2213 -474.668 Td
(0447 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 04) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/x86.h  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(0450 static inline void) 120.0906 Tj
-5.2213 -37.9735 Td
(0451 outw\(ushort port, ushort data\)) 182.7466 Tj
-5.2213 -47.4668 Td
(0452 {) 31.328 Tj
-5.2213 -56.9602 Td
(0453   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\
\);) 313.2799 Tj
-5.2213 -66.4535 Td
(0454 }) 31.328 Tj
-5.2213 -75.9469 Td
(0455 ) 26.1067 Tj
-5.2213 -85.4403 Td
(0456 static inline void) 120.0906 Tj
-5.2213 -94.9336 Td
(0457 outl\(ushort port, uint data\)) 172.304 Tj
-5.2213 -104.427 Td
(0458 {) 31.328 Tj
-5.2213 -113.9203 Td
(0459     asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\
\)\);) 323.7226 Tj
-5.2213 -123.4137 Td
(0460 }) 31.328 Tj
-5.2213 -132.9071 Td
(0461 ) 26.1067 Tj
-5.2213 -142.4004 Td
(0462 static inline void) 120.0906 Tj
-5.2213 -151.8938 Td
(0463 outsl\(int port, const void *addr, int cnt\)) 245.4026 Tj
-5.2213 -161.3871 Td
(0464 {) 31.328 Tj
-5.2213 -170.8805 Td
(0465   asm volatile\("cld\\n\\trepne\\n\\toutsl"    :) 250.6239 Tj
-5.2213 -180.3739 Td
(0466                    "=S" \(addr\), "=c" \(cnt\)    :) 271.5093 Tj
-5.2213 -189.8672 Td
(0467                    "d" \(port\), "0" \(addr\), "1" \(cnt\)\
  :) 313.2799 Tj
-5.2213 -199.3606 Td
(0468                    "cc"\);) 156.64 Tj
-5.2213 -208.8539 Td
(0469 }) 31.328 Tj
-5.2213 -218.3473 Td
(0470 ) 26.1067 Tj
-5.2213 -227.8407 Td
(0471 struct segdesc;) 104.4266 Tj
-5.2213 -237.334 Td
(0472 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0473 static inline void) 120.0906 Tj
-5.2213 -256.3207 Td
(0474 lgdt\(struct segdesc *p, int size\)) 198.4106 Tj
-5.2213 -265.8141 Td
(0475 {) 31.328 Tj
-5.2213 -275.3075 Td
(0476   volatile ushort pd[3];) 151.4186 Tj
-5.2213 -284.8008 Td
(0477 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0478   pd[0] = size-1;) 114.8693 Tj
-5.2213 -303.7875 Td
(0479   pd[1] = \(uint\)p;) 120.0906 Tj
-5.2213 -313.2809 Td
(0480   pd[2] = \(uint\)p >> 16;) 151.4186 Tj
-5.2213 -322.7743 Td
(0481 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0482   asm volatile\("lgdt \(%0\)" : : "r" \(pd\)\);) 240.1813 Tj
-5.2213 -341.761 Td
(0483 }) 31.328 Tj
-5.2213 -351.2543 Td
(0484 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0485 struct gatedesc;) 109.648 Tj
-5.2213 -370.2411 Td
(0486 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0487 static inline void) 120.0906 Tj
-5.2213 -389.2278 Td
(0488 lidt\(struct gatedesc *p, int size\)) 203.6319 Tj
-5.2213 -398.7211 Td
(0489 {) 31.328 Tj
-5.2213 -408.2145 Td
(0490   volatile ushort pd[3];) 151.4186 Tj
-5.2213 -417.7079 Td
(0491 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0492   pd[0] = size-1;) 114.8693 Tj
-5.2213 -436.6946 Td
(0493   pd[1] = \(uint\)p;) 120.0906 Tj
-5.2213 -446.1879 Td
(0494   pd[2] = \(uint\)p >> 16;) 151.4186 Tj
-5.2213 -455.6813 Td
(0495 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0496   asm volatile\("lidt \(%0\)" : : "r" \(pd\)\);) 240.1813 Tj
-5.2213 -474.668 Td
(0497 }) 31.328 Tj
-5.2213 -484.1614 Td
(0498 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0499 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 04) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 14 14
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/x86.h  Page 3) 177.5253 Tj
-5.2213 -28.4801 Td
(0500 static inline void) 120.0906 Tj
-5.2213 -37.9735 Td
(0501 ltr\(ushort sel\)) 104.4266 Tj
-5.2213 -47.4668 Td
(0502 {) 31.328 Tj
-5.2213 -56.9602 Td
(0503   asm volatile\("ltr %0" : : "r" \(sel\)\);) 229.7386 Tj
-5.2213 -66.4535 Td
(0504 }) 31.328 Tj
-5.2213 -75.9469 Td
(0505 ) 26.1067 Tj
-5.2213 -85.4403 Td
(0506 static inline uint) 120.0906 Tj
-5.2213 -94.9336 Td
(0507 read_eflags\(void\)) 114.8693 Tj
-5.2213 -104.427 Td
(0508 {) 31.328 Tj
-5.2213 -113.9203 Td
(0509   uint eflags;) 99.2053 Tj
-5.2213 -123.4137 Td
(0510   asm volatile\("pushfl; popl %0" : "=r" \(eflags\)\);) 287.1733 Tj
-5.2213 -132.9071 Td
(0511   return eflags;) 109.648 Tj
-5.2213 -142.4004 Td
(0512 }) 31.328 Tj
-5.2213 -151.8938 Td
(0513 ) 26.1067 Tj
-5.2213 -161.3871 Td
(0514 static inline void) 120.0906 Tj
-5.2213 -170.8805 Td
(0515 write_eflags\(uint eflags\)) 156.64 Tj
-5.2213 -180.3739 Td
(0516 {) 31.328 Tj
-5.2213 -189.8672 Td
(0517   asm volatile\("pushl %0; popfl" : : "r" \(eflags\)\);) 292.3946 Tj
-5.2213 -199.3606 Td
(0518 }) 31.328 Tj
-5.2213 -208.8539 Td
(0519 ) 26.1067 Tj
-5.2213 -218.3473 Td
(0520 static inline void) 120.0906 Tj
-5.2213 -227.8407 Td
(0521 cpuid\(uint info, uint *eaxp, uint *ebxp, uint *ecxp, uint\
 *edxp\)) 360.2719 Tj
-5.2213 -237.334 Td
(0522 {) 31.328 Tj
-5.2213 -246.8274 Td
(0523   uint eax, ebx, ecx, edx;) 161.8613 Tj
-5.2213 -256.3207 Td
(0524 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0525   asm volatile\("cpuid" :) 151.4186 Tj
-5.2213 -275.3075 Td
(0526                "=a" \(eax\), "=b" \(ebx\), "=c" \(ecx\), "\
=d" \(edx\) :) 355.0506 Tj
-5.2213 -284.8008 Td
(0527                "a" \(info\)\);) 167.0826 Tj
-5.2213 -294.2942 Td
(0528   if\(eaxp\)) 78.32 Tj
-5.2213 -303.7875 Td
(0529     *eaxp = eax;) 109.648 Tj
-5.2213 -313.2809 Td
(0530   if\(ebxp\)) 78.32 Tj
-5.2213 -322.7743 Td
(0531     *ebxp = ebx;) 109.648 Tj
-5.2213 -332.2676 Td
(0532   if\(ecxp\)) 78.32 Tj
-5.2213 -341.761 Td
(0533     *ecxp = ecx;) 109.648 Tj
-5.2213 -351.2543 Td
(0534   if\(edxp\)) 78.32 Tj
-5.2213 -360.7477 Td
(0535     *edxp = edx;) 109.648 Tj
-5.2213 -370.2411 Td
(0536 }) 31.328 Tj
-5.2213 -379.7344 Td
(0537 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0538 static inline uint) 120.0906 Tj
-5.2213 -398.7211 Td
(0539 cmpxchg\(uint oldval, uint newval, volatile uint* lock_add\
r\)) 334.1652 Tj
-5.2213 -408.2145 Td
(0540 {) 31.328 Tj
-5.2213 -417.7079 Td
(0541   uint result;) 99.2053 Tj
-5.2213 -427.2012 Td
(0542 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0543   // The + in "+m" denotes a read-modify-write operand.) 313.2799 Tj
-5.2213 -446.1879 Td
(0544   asm volatile\("lock; cmpxchgl %2, %0" :) 234.9599 Tj
-5.2213 -455.6813 Td
(0545                        "+m" \(*lock_addr\), "=a" \(result\)\
 :) 323.7226 Tj
-5.2213 -465.1747 Td
(0546                        "r"\(newval\), "1"\(oldval\) :) 281.9519 Tj
-5.2213 -474.668 Td
(0547                        "cc"\);) 177.5253 Tj
-5.2213 -484.1614 Td
(0548   return result;) 109.648 Tj
-5.2213 -493.6547 Td
(0549 }) 31.328 Tj
-5.2213 -522.1348 Td
(Sheet 05) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/x86.h  Page 4) 177.5253 Tj
-5.2213 -28.4801 Td
(0550 static inline void) 120.0906 Tj
-5.2213 -37.9735 Td
(0551 cli\(void\)) 73.0986 Tj
-5.2213 -47.4668 Td
(0552 {) 31.328 Tj
-5.2213 -56.9602 Td
(0553   asm volatile\("cli"\);) 140.976 Tj
-5.2213 -66.4535 Td
(0554 }) 31.328 Tj
-5.2213 -75.9469 Td
(0555 ) 26.1067 Tj
-5.2213 -85.4403 Td
(0556 static inline void) 120.0906 Tj
-5.2213 -94.9336 Td
(0557 sti\(void\)) 73.0986 Tj
-5.2213 -104.427 Td
(0558 {) 31.328 Tj
-5.2213 -113.9203 Td
(0559   asm volatile\("sti"\);) 140.976 Tj
-5.2213 -123.4137 Td
(0560 }) 31.328 Tj
-5.2213 -132.9071 Td
(0561 ) 26.1067 Tj
-5.2213 -142.4004 Td
(0562 // Layout of the trap frame built on the stack by the) 302.8373 Tj
-5.2213 -151.8938 Td
(0563 // hardware and by trapasm.S, and passed to trap\(\).) 292.3946 Tj
-5.2213 -161.3871 Td
(0564 struct trapframe {) 120.0906 Tj
-5.2213 -170.8805 Td
(0565   // registers as pushed by pusha) 198.4106 Tj
-5.2213 -180.3739 Td
(0566   uint edi;) 83.5413 Tj
-5.2213 -189.8672 Td
(0567   uint esi;) 83.5413 Tj
-5.2213 -199.3606 Td
(0568   uint ebp;) 83.5413 Tj
-5.2213 -208.8539 Td
(0569   uint oesp;      // useless & ignored) 224.5173 Tj
-5.2213 -218.3473 Td
(0570   uint ebx;) 83.5413 Tj
-5.2213 -227.8407 Td
(0571   uint edx;) 83.5413 Tj
-5.2213 -237.334 Td
(0572   uint ecx;) 83.5413 Tj
-5.2213 -246.8274 Td
(0573   uint eax;) 83.5413 Tj
-5.2213 -256.3207 Td
(0574 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0575   // rest of trap frame) 146.1973 Tj
-5.2213 -275.3075 Td
(0576   ushort es;) 88.7626 Tj
-5.2213 -284.8008 Td
(0577   ushort padding1;) 120.0906 Tj
-5.2213 -294.2942 Td
(0578   ushort ds;) 88.7626 Tj
-5.2213 -303.7875 Td
(0579   ushort padding2;) 120.0906 Tj
-5.2213 -313.2809 Td
(0580   uint trapno;) 99.2053 Tj
-5.2213 -322.7743 Td
(0581 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0582   // below here defined by x86 hardware) 229.7386 Tj
-5.2213 -341.761 Td
(0583   uint err;) 83.5413 Tj
-5.2213 -351.2543 Td
(0584   uint eip;) 83.5413 Tj
-5.2213 -360.7477 Td
(0585   ushort cs;) 88.7626 Tj
-5.2213 -370.2411 Td
(0586   ushort padding3;) 120.0906 Tj
-5.2213 -379.7344 Td
(0587   uint eflags;) 99.2053 Tj
-5.2213 -389.2278 Td
(0588 ) 26.1067 Tj
-5.2213 -398.7211 Td
(0589   // below here only when crossing rings, such as from use\
r to kernel) 386.3786 Tj
-5.2213 -408.2145 Td
(0590   uint esp;) 83.5413 Tj
-5.2213 -417.7079 Td
(0591   ushort ss;) 88.7626 Tj
-5.2213 -427.2012 Td
(0592   ushort padding4;) 120.0906 Tj
-5.2213 -436.6946 Td
(0593 };) 36.5493 Tj
-5.2213 -446.1879 Td
(0594 #endif // XV6_X86_H_) 130.5333 Tj
-5.2213 -455.6813 Td
(0595 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0596 ) 26.1067 Tj
-5.2213 -474.668 Td
(0597 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0598 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0599 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 05) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 15 15
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/asm.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(0600 //) 36.5493 Tj
-5.2213 -37.9735 Td
(0601 // assembler macros to create x86 segments) 245.4026 Tj
-5.2213 -47.4668 Td
(0602 //) 36.5493 Tj
-5.2213 -56.9602 Td
(0603 ) 26.1067 Tj
-5.2213 -66.4535 Td
(0604 #define SEG_NULLASM                                       \
      \\) 365.4932 Tj
-5.2213 -75.9469 Td
(0605         .word 0, 0;                                       \
      \\) 365.4932 Tj
-5.2213 -85.4403 Td
(0606         .byte 0, 0, 0, 0) 151.4186 Tj
-5.2213 -94.9336 Td
(0607 ) 26.1067 Tj
-5.2213 -104.427 Td
(0608 #define SEG_ASM\(type,base,lim\)                          \
        \\) 365.4932 Tj
-5.2213 -113.9203 Td
(0609         .word \(\(\(lim\) >> 12\) & 0xffff\), \(\(base\) &\
 0xffff\);      \\) 365.4932 Tj
-5.2213 -123.4137 Td
(0610         .byte \(\(\(base\) >> 16\) & 0xff\), \(0x90 | \(ty\
pe\)\),         \\) 365.4932 Tj
-5.2213 -132.9071 Td
(0611                 \(0xC0 | \(\(\(lim\) >> 28\) & 0xf\)\), \(\
\(\(base\) >> 24\) & 0xff\)) 396.8212 Tj
-5.2213 -142.4004 Td
(0612 ) 26.1067 Tj
-5.2213 -151.8938 Td
(0613 #define STA_X     0x8       // Executable segment) 281.9519 Tj
-5.2213 -161.3871 Td
(0614 #define STA_E     0x4       // Expand down \(non-executabl\
e segments\)) 381.1572 Tj
-5.2213 -170.8805 Td
(0615 #define STA_C     0x4       // Conforming code segment \(e\
xecutable only\)) 402.0426 Tj
-5.2213 -180.3739 Td
(0616 #define STA_W     0x2       // Writeable \(non-executable \
segments\)) 370.7146 Tj
-5.2213 -189.8672 Td
(0617 #define STA_R     0x2       // Readable \(executable segme\
nts\)) 344.6079 Tj
-5.2213 -199.3606 Td
(0618 #define STA_A     0x1       // Accessed) 229.7386 Tj
-5.2213 -208.8539 Td
(0619 ) 26.1067 Tj
-5.2213 -218.3473 Td
(0620 ) 26.1067 Tj
-5.2213 -227.8407 Td
(0621 ) 26.1067 Tj
-5.2213 -237.334 Td
(0622 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0623 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0624 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0625 ) 26.1067 Tj
-5.2213 -275.3075 Td
(0626 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0627 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0628 ) 26.1067 Tj
-5.2213 -303.7875 Td
(0629 ) 26.1067 Tj
-5.2213 -313.2809 Td
(0630 ) 26.1067 Tj
-5.2213 -322.7743 Td
(0631 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0632 ) 26.1067 Tj
-5.2213 -341.761 Td
(0633 ) 26.1067 Tj
-5.2213 -351.2543 Td
(0634 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0635 ) 26.1067 Tj
-5.2213 -370.2411 Td
(0636 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0637 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0638 ) 26.1067 Tj
-5.2213 -398.7211 Td
(0639 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0640 ) 26.1067 Tj
-5.2213 -417.7079 Td
(0641 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0642 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0643 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0644 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0645 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0646 ) 26.1067 Tj
-5.2213 -474.668 Td
(0647 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0648 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0649 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 06) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mmu.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(0650 #ifndef XV6_MMU_H_) 120.0906 Tj
-5.2213 -37.9735 Td
(0651 #define XV6_MMU_H_) 120.0906 Tj
-5.2213 -47.4668 Td
(0652 // This file contains definitions for the) 240.1813 Tj
-5.2213 -56.9602 Td
(0653 // x86 memory management unit \(MMU\).) 214.0746 Tj
-5.2213 -66.4535 Td
(0654 ) 26.1067 Tj
-5.2213 -75.9469 Td
(0655 // Eflags register) 120.0906 Tj
-5.2213 -85.4403 Td
(0656 #define FL_CF           0x00000001      // Carry Flag) 302.8373 Tj
-5.2213 -94.9336 Td
(0657 #define FL_PF           0x00000004      // Parity Flag) 308.0586 Tj
-5.2213 -104.427 Td
(0658 #define FL_AF           0x00000010      // Auxiliary carry\
 Flag) 355.0506 Tj
-5.2213 -113.9203 Td
(0659 #define FL_ZF           0x00000040      // Zero Flag) 297.6159 Tj
-5.2213 -123.4137 Td
(0660 #define FL_SF           0x00000080      // Sign Flag) 297.6159 Tj
-5.2213 -132.9071 Td
(0661 #define FL_TF           0x00000100      // Trap Flag) 297.6159 Tj
-5.2213 -142.4004 Td
(0662 #define FL_IF           0x00000200      // Interrupt Enabl\
e) 334.1652 Tj
-5.2213 -151.8938 Td
(0663 #define FL_DF           0x00000400      // Direction Flag) 323.7226 Tj
-5.2213 -161.3871 Td
(0664 #define FL_OF           0x00000800      // Overflow Flag) 318.5013 Tj
-5.2213 -170.8805 Td
(0665 #define FL_IOPL_MASK    0x00003000      // I/O Privilege L\
evel bitmask) 391.5999 Tj
-5.2213 -180.3739 Td
(0666 #define FL_IOPL_0       0x00000000      //   IOPL == 0) 308.0586 Tj
-5.2213 -189.8672 Td
(0667 #define FL_IOPL_1       0x00001000      //   IOPL == 1) 308.0586 Tj
-5.2213 -199.3606 Td
(0668 #define FL_IOPL_2       0x00002000      //   IOPL == 2) 308.0586 Tj
-5.2213 -208.8539 Td
(0669 #define FL_IOPL_3       0x00003000      //   IOPL == 3) 308.0586 Tj
-5.2213 -218.3473 Td
(0670 #define FL_NT           0x00004000      // Nested Task) 308.0586 Tj
-5.2213 -227.8407 Td
(0671 #define FL_RF           0x00010000      // Resume Flag) 308.0586 Tj
-5.2213 -237.334 Td
(0672 #define FL_VM           0x00020000      // Virtual 8086 mo\
de) 339.3866 Tj
-5.2213 -246.8274 Td
(0673 #define FL_AC           0x00040000      // Alignment Check) 328.9439 Tj
-5.2213 -256.3207 Td
(0674 #define FL_VIF          0x00080000      // Virtual Interru\
pt Flag) 365.4932 Tj
-5.2213 -265.8141 Td
(0675 #define FL_VIP          0x00100000      // Virtual Interru\
pt Pending) 381.1572 Tj
-5.2213 -275.3075 Td
(0676 #define FL_ID           0x00200000      // ID flag) 287.1733 Tj
-5.2213 -284.8008 Td
(0677 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0678 // Segment Descriptor) 135.7546 Tj
-5.2213 -303.7875 Td
(0679 struct segdesc {) 109.648 Tj
-5.2213 -313.2809 Td
(0680   uint lim_15_0 : 16;  // Low bits of segment limit) 292.3946 Tj
-5.2213 -322.7743 Td
(0681   uint base_15_0 : 16; // Low bits of segment base address) 328.9439 Tj
-5.2213 -332.2676 Td
(0682   uint base_23_16 : 8; // Middle bits of segment base addr\
ess) 344.6079 Tj
-5.2213 -341.761 Td
(0683   uint type : 4;       // Segment type \(see STS_ constant\
s\)) 334.1652 Tj
-5.2213 -351.2543 Td
(0684   uint s : 1;          // 0 = system, 1 = application) 302.8373 Tj
-5.2213 -360.7477 Td
(0685   uint dpl : 2;        // Descriptor Privilege Level) 297.6159 Tj
-5.2213 -370.2411 Td
(0686   uint p : 1;          // Present) 198.4106 Tj
-5.2213 -379.7344 Td
(0687   uint lim_19_16 : 4;  // High bits of segment limit) 297.6159 Tj
-5.2213 -389.2278 Td
(0688   uint avl : 1;        // Unused \(available for software \
use\)) 344.6079 Tj
-5.2213 -398.7211 Td
(0689   uint rsv1 : 1;       // Reserved) 203.6319 Tj
-5.2213 -408.2145 Td
(0690   uint db : 1;         // 0 = 16-bit segment, 1 = 32-bit s\
egment) 360.2719 Tj
-5.2213 -417.7079 Td
(0691   uint g : 1;          // Granularity: limit scaled by 4K \
when set) 370.7146 Tj
-5.2213 -427.2012 Td
(0692   uint base_31_24 : 8; // High bits of segment base addres\
s) 334.1652 Tj
-5.2213 -436.6946 Td
(0693 };) 36.5493 Tj
-5.2213 -446.1879 Td
(0694 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0695 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0696 ) 26.1067 Tj
-5.2213 -474.668 Td
(0697 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0698 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0699 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 06) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 16 16
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mmu.h  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(0700 // Null segment) 104.4266 Tj
-5.2213 -37.9735 Td
(0701 #define SEG_NULL        \(struct segdesc\){ 0,0,0,0,0,0,0,\
0,0,0,0,0,0 }) 386.3786 Tj
-5.2213 -47.4668 Td
(0702 ) 26.1067 Tj
-5.2213 -56.9602 Td
(0703 // Normal segment) 114.8693 Tj
-5.2213 -66.4535 Td
(0704 #define SEG\(type, base, lim, dpl\) \(struct segdesc\)    \
                  \\) 407.2639 Tj
-5.2213 -75.9469 Td
(0705 { \(\(lim\) >> 12\) & 0xffff, \(base\) & 0xffff, \(\(base\)\
 >> 16\) & 0xff,       \\) 407.2639 Tj
-5.2213 -85.4403 Td
(0706     type, 1, dpl, 1, \(uint\) \(lim\) >> 28, 0, 0, 1, 1,  \
                  \\) 407.2639 Tj
-5.2213 -94.9336 Td
(0707     \(uint\) \(base\) >> 24 }) 156.64 Tj
-5.2213 -104.427 Td
(0708 ) 26.1067 Tj
-5.2213 -113.9203 Td
(0709 #define SEG16\(type, base, lim, dpl\) \(struct segdesc\)  \
                  \\) 407.2639 Tj
-5.2213 -123.4137 Td
(0710 { \(lim\) & 0xffff, \(base\) & 0xffff, \(\(base\) >> 16\) \
& 0xff,               \\) 407.2639 Tj
-5.2213 -132.9071 Td
(0711     type, 1, dpl, 1, \(uint\) \(lim\) >> 16, 0, 0, 1, 0,  \
                  \\) 407.2639 Tj
-5.2213 -142.4004 Td
(0712     \(uint\) \(base\) >> 24 }) 156.64 Tj
-5.2213 -151.8938 Td
(0713 ) 26.1067 Tj
-5.2213 -161.3871 Td
(0714 #define DPL_USER    0x3     // User DPL) 229.7386 Tj
-5.2213 -170.8805 Td
(0715 ) 26.1067 Tj
-5.2213 -180.3739 Td
(0716 // Application segment type bits) 193.1893 Tj
-5.2213 -189.8672 Td
(0717 #define STA_X       0x8     // Executable segment) 281.9519 Tj
-5.2213 -199.3606 Td
(0718 #define STA_E       0x4     // Expand down \(non-executabl\
e segments\)) 381.1572 Tj
-5.2213 -208.8539 Td
(0719 #define STA_C       0x4     // Conforming code segment \(e\
xecutable only\)) 402.0426 Tj
-5.2213 -218.3473 Td
(0720 #define STA_W       0x2     // Writeable \(non-executable \
segments\)) 370.7146 Tj
-5.2213 -227.8407 Td
(0721 #define STA_R       0x2     // Readable \(executable segme\
nts\)) 344.6079 Tj
-5.2213 -237.334 Td
(0722 #define STA_A       0x1     // Accessed) 229.7386 Tj
-5.2213 -246.8274 Td
(0723 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0724 // System segment type bits) 167.0826 Tj
-5.2213 -265.8141 Td
(0725 #define STS_T16A    0x1     // Available 16-bit TSS) 292.3946 Tj
-5.2213 -275.3075 Td
(0726 #define STS_LDT     0x2     // Local Descriptor Table) 302.8373 Tj
-5.2213 -284.8008 Td
(0727 #define STS_T16B    0x3     // Busy 16-bit TSS) 266.2879 Tj
-5.2213 -294.2942 Td
(0728 #define STS_CG16    0x4     // 16-bit Call Gate) 271.5093 Tj
-5.2213 -303.7875 Td
(0729 #define STS_TG      0x5     // Task Gate / Coum Transmitio\
ns) 339.3866 Tj
-5.2213 -313.2809 Td
(0730 #define STS_IG16    0x6     // 16-bit Interrupt Gate) 297.6159 Tj
-5.2213 -322.7743 Td
(0731 #define STS_TG16    0x7     // 16-bit Trap Gate) 271.5093 Tj
-5.2213 -332.2676 Td
(0732 #define STS_T32A    0x9     // Available 32-bit TSS) 292.3946 Tj
-5.2213 -341.761 Td
(0733 #define STS_T32B    0xB     // Busy 32-bit TSS) 266.2879 Tj
-5.2213 -351.2543 Td
(0734 #define STS_CG32    0xC     // 32-bit Call Gate) 271.5093 Tj
-5.2213 -360.7477 Td
(0735 #define STS_IG32    0xE     // 32-bit Interrupt Gate) 297.6159 Tj
-5.2213 -370.2411 Td
(0736 #define STS_TG32    0xF     // 32-bit Trap Gate) 271.5093 Tj
-5.2213 -379.7344 Td
(0737 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0738 // Task state segment format) 172.304 Tj
-5.2213 -398.7211 Td
(0739 struct taskstate {) 120.0906 Tj
-5.2213 -408.2145 Td
(0740   uint link;         // Old ts selector) 229.7386 Tj
-5.2213 -417.7079 Td
(0741   uint esp0;         // Stack pointers and segment selecto\
rs) 339.3866 Tj
-5.2213 -427.2012 Td
(0742   ushort ss0;        //   after an increase in privilege l\
evel) 349.8292 Tj
-5.2213 -436.6946 Td
(0743   ushort padding1;) 120.0906 Tj
-5.2213 -446.1879 Td
(0744   uint *esp1;) 93.984 Tj
-5.2213 -455.6813 Td
(0745   ushort ss1;) 93.984 Tj
-5.2213 -465.1747 Td
(0746   ushort padding2;) 120.0906 Tj
-5.2213 -474.668 Td
(0747   uint *esp2;) 93.984 Tj
-5.2213 -484.1614 Td
(0748   ushort ss2;) 93.984 Tj
-5.2213 -493.6547 Td
(0749   ushort padding3;) 120.0906 Tj
-5.2213 -522.1348 Td
(Sheet 07) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mmu.h  Page 3) 177.5253 Tj
-5.2213 -28.4801 Td
(0750   void *cr3;         // Page directory base) 250.6239 Tj
-5.2213 -37.9735 Td
(0751   uint *eip;         // Saved state from last task switch) 323.7226 Tj
-5.2213 -47.4668 Td
(0752   uint eflags;) 99.2053 Tj
-5.2213 -56.9602 Td
(0753   uint eax;          // More saved state \(registers\)) 297.6159 Tj
-5.2213 -66.4535 Td
(0754   uint ecx;) 83.5413 Tj
-5.2213 -75.9469 Td
(0755   uint edx;) 83.5413 Tj
-5.2213 -85.4403 Td
(0756   uint ebx;) 83.5413 Tj
-5.2213 -94.9336 Td
(0757   uint *esp;) 88.7626 Tj
-5.2213 -104.427 Td
(0758   uint *ebp;) 88.7626 Tj
-5.2213 -113.9203 Td
(0759   uint esi;) 83.5413 Tj
-5.2213 -123.4137 Td
(0760   uint edi;) 83.5413 Tj
-5.2213 -132.9071 Td
(0761   ushort es;         // Even more saved state \(segment se\
lectors\)) 365.4932 Tj
-5.2213 -142.4004 Td
(0762   ushort padding4;) 120.0906 Tj
-5.2213 -151.8938 Td
(0763   ushort cs;) 88.7626 Tj
-5.2213 -161.3871 Td
(0764   ushort padding5;) 120.0906 Tj
-5.2213 -170.8805 Td
(0765   ushort ss;) 88.7626 Tj
-5.2213 -180.3739 Td
(0766   ushort padding6;) 120.0906 Tj
-5.2213 -189.8672 Td
(0767   ushort ds;) 88.7626 Tj
-5.2213 -199.3606 Td
(0768   ushort padding7;) 120.0906 Tj
-5.2213 -208.8539 Td
(0769   ushort fs;) 88.7626 Tj
-5.2213 -218.3473 Td
(0770   ushort padding8;) 120.0906 Tj
-5.2213 -227.8407 Td
(0771   ushort gs;) 88.7626 Tj
-5.2213 -237.334 Td
(0772   ushort padding9;) 120.0906 Tj
-5.2213 -246.8274 Td
(0773   ushort ldt;) 93.984 Tj
-5.2213 -256.3207 Td
(0774   ushort padding10;) 125.312 Tj
-5.2213 -265.8141 Td
(0775   ushort t;          // Trap on task switch) 250.6239 Tj
-5.2213 -275.3075 Td
(0776   ushort iomb;       // I/O map base address) 255.8453 Tj
-5.2213 -284.8008 Td
(0777 };) 36.5493 Tj
-5.2213 -294.2942 Td
(0778 ) 26.1067 Tj
-5.2213 -303.7875 Td
(0779 // Gate descriptors for interrupts and traps) 255.8453 Tj
-5.2213 -313.2809 Td
(0780 struct gatedesc {) 114.8693 Tj
-5.2213 -322.7743 Td
(0781   uint off_15_0 : 16;   // low 16 bits of offset in segmen\
t) 334.1652 Tj
-5.2213 -332.2676 Td
(0782   uint ss : 16;         // segment selector) 250.6239 Tj
-5.2213 -341.761 Td
(0783   uint args : 5;        // # args, 0 for interrupt/trap ga\
tes) 344.6079 Tj
-5.2213 -351.2543 Td
(0784   uint rsv1 : 3;        // reserved\(should be zero I gues\
s\)) 334.1652 Tj
-5.2213 -360.7477 Td
(0785   uint type : 4;        // type\(STS_{TG,IG32,TG32}\)) 292.3946 Tj
-5.2213 -370.2411 Td
(0786   uint s : 1;           // must be 0 \(system\)) 261.0666 Tj
-5.2213 -379.7344 Td
(0787   uint dpl : 2;         // descriptor\(meaning new\) privi\
lege level) 370.7146 Tj
-5.2213 -389.2278 Td
(0788   uint p : 1;           // Present) 203.6319 Tj
-5.2213 -398.7211 Td
(0789   uint off_31_16 : 16;  // high bits of offset in segment) 323.7226 Tj
-5.2213 -408.2145 Td
(0790 };) 36.5493 Tj
-5.2213 -417.7079 Td
(0791 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0792 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0793 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0794 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0795 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0796 ) 26.1067 Tj
-5.2213 -474.668 Td
(0797 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0798 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 07) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 17 17
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mmu.h  Page 4) 177.5253 Tj
-5.2213 -28.4801 Td
(0800 // Set up a normal interrupt/trap gate descriptor.) 287.1733 Tj
-5.2213 -37.9735 Td
(0801 // - istrap: 1 for a trap \(= exception\) gate, 0 for an i\
nterrupt gate.) 391.5999 Tj
-5.2213 -47.4668 Td
(0802 //   interrupt gate clears FL_IF, trap gate leaves FL_IF a\
lone) 349.8292 Tj
-5.2213 -56.9602 Td
(0803 // - sel: Code segment selector for interrupt/trap handler) 328.9439 Tj
-5.2213 -66.4535 Td
(0804 // - off: Offset in code segment for interrupt/trap handle\
r) 334.1652 Tj
-5.2213 -75.9469 Td
(0805 // - dpl: Descriptor Privilege Level -) 224.5173 Tj
-5.2213 -85.4403 Td
(0806 //        the privilege level required for software to inv\
oke) 344.6079 Tj
-5.2213 -94.9336 Td
(0807 //        this interrupt/trap gate explicitly using an int\
 instruction.) 396.8212 Tj
-5.2213 -104.427 Td
(0808 #define SETGATE\(gate, istrap, sel, off, d\)              \
  \\) 334.1652 Tj
-5.2213 -113.9203 Td
(0809 {                                                         \
\\) 334.1652 Tj
-5.2213 -123.4137 Td
(0810   \(gate\).off_15_0 = \(uint\) \(off\) & 0xffff;          \
      \\) 334.1652 Tj
-5.2213 -132.9071 Td
(0811   \(gate\).ss = \(sel\);                                  \
    \\) 334.1652 Tj
-5.2213 -142.4004 Td
(0812   \(gate\).args = 0;                                      \
  \\) 334.1652 Tj
-5.2213 -151.8938 Td
(0813   \(gate\).rsv1 = 0;                                      \
  \\) 334.1652 Tj
-5.2213 -161.3871 Td
(0814   \(gate\).type = \(istrap\) ? STS_TG32 : STS_IG32;       \
    \\) 334.1652 Tj
-5.2213 -170.8805 Td
(0815   \(gate\).s = 0;                                         \
  \\) 334.1652 Tj
-5.2213 -180.3739 Td
(0816   \(gate\).dpl = \(d\);                                   \
    \\) 334.1652 Tj
-5.2213 -189.8672 Td
(0817   \(gate\).p = 1;                                         \
  \\) 334.1652 Tj
-5.2213 -199.3606 Td
(0818   \(gate\).off_31_16 = \(uint\) \(off\) >> 16;            \
      \\) 334.1652 Tj
-5.2213 -208.8539 Td
(0819 }) 31.328 Tj
-5.2213 -218.3473 Td
(0820 ) 26.1067 Tj
-5.2213 -227.8407 Td
(0821 #endif // XV6_MMU_H_) 130.5333 Tj
-5.2213 -237.334 Td
(0822 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0823 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0824 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0825 ) 26.1067 Tj
-5.2213 -275.3075 Td
(0826 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0827 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0828 ) 26.1067 Tj
-5.2213 -303.7875 Td
(0829 ) 26.1067 Tj
-5.2213 -313.2809 Td
(0830 ) 26.1067 Tj
-5.2213 -322.7743 Td
(0831 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0832 ) 26.1067 Tj
-5.2213 -341.761 Td
(0833 ) 26.1067 Tj
-5.2213 -351.2543 Td
(0834 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0835 ) 26.1067 Tj
-5.2213 -370.2411 Td
(0836 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0837 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0838 ) 26.1067 Tj
-5.2213 -398.7211 Td
(0839 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0840 ) 26.1067 Tj
-5.2213 -417.7079 Td
(0841 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0842 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0843 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0844 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0845 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0846 ) 26.1067 Tj
-5.2213 -474.668 Td
(0847 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0848 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0849 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 08) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/elf.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(0850 // Format of an ELF executable file) 208.8533 Tj
-5.2213 -37.9735 Td
(0851 ) 26.1067 Tj
-5.2213 -47.4668 Td
(0852 #define ELF_MAGIC 0x464C457FU  // "\\x7FELF" in little end\
ian) 339.3866 Tj
-5.2213 -56.9602 Td
(0853 ) 26.1067 Tj
-5.2213 -66.4535 Td
(0854 // File header) 99.2053 Tj
-5.2213 -75.9469 Td
(0855 struct elfhdr {) 104.4266 Tj
-5.2213 -85.4403 Td
(0856   uint magic;  // must equal ELF_MAGIC) 224.5173 Tj
-5.2213 -94.9336 Td
(0857   uchar elf[12];) 109.648 Tj
-5.2213 -104.427 Td
(0858   ushort type;) 99.2053 Tj
-5.2213 -113.9203 Td
(0859   ushort machine;) 114.8693 Tj
-5.2213 -123.4137 Td
(0860   uint version;) 104.4266 Tj
-5.2213 -132.9071 Td
(0861   uint entry;) 93.984 Tj
-5.2213 -142.4004 Td
(0862   uint phoff;) 93.984 Tj
-5.2213 -151.8938 Td
(0863   uint shoff;) 93.984 Tj
-5.2213 -161.3871 Td
(0864   uint flags;) 93.984 Tj
-5.2213 -170.8805 Td
(0865   ushort ehsize;) 109.648 Tj
-5.2213 -180.3739 Td
(0866   ushort phentsize;) 125.312 Tj
-5.2213 -189.8672 Td
(0867   ushort phnum;) 104.4266 Tj
-5.2213 -199.3606 Td
(0868   ushort shentsize;) 125.312 Tj
-5.2213 -208.8539 Td
(0869   ushort shnum;) 104.4266 Tj
-5.2213 -218.3473 Td
(0870   ushort shstrndx;) 120.0906 Tj
-5.2213 -227.8407 Td
(0871 };) 36.5493 Tj
-5.2213 -237.334 Td
(0872 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0873 // Program section header) 156.64 Tj
-5.2213 -256.3207 Td
(0874 struct proghdr {) 109.648 Tj
-5.2213 -265.8141 Td
(0875   uint type;) 88.7626 Tj
-5.2213 -275.3075 Td
(0876   uint offset;) 99.2053 Tj
-5.2213 -284.8008 Td
(0877   uint va;) 78.32 Tj
-5.2213 -294.2942 Td
(0878   uint pa;) 78.32 Tj
-5.2213 -303.7875 Td
(0879   uint filesz;) 99.2053 Tj
-5.2213 -313.2809 Td
(0880   uint memsz;) 93.984 Tj
-5.2213 -322.7743 Td
(0881   uint flags;) 93.984 Tj
-5.2213 -332.2676 Td
(0882   uint align;) 93.984 Tj
-5.2213 -341.761 Td
(0883 };) 36.5493 Tj
-5.2213 -351.2543 Td
(0884 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0885 // Values for Proghdr type) 161.8613 Tj
-5.2213 -370.2411 Td
(0886 #define ELF_PROG_LOAD           1) 198.4106 Tj
-5.2213 -379.7344 Td
(0887 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0888 // Flag bits for Proghdr flags) 182.7466 Tj
-5.2213 -398.7211 Td
(0889 #define ELF_PROG_FLAG_EXEC      1) 198.4106 Tj
-5.2213 -408.2145 Td
(0890 #define ELF_PROG_FLAG_WRITE     2) 198.4106 Tj
-5.2213 -417.7079 Td
(0891 #define ELF_PROG_FLAG_READ      4) 198.4106 Tj
-5.2213 -427.2012 Td
(0892 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0893 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0894 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0895 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0896 ) 26.1067 Tj
-5.2213 -474.668 Td
(0897 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0898 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 08) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 18 18
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/elf.h  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(0900 // Blank page.) 99.2053 Tj
-5.2213 -37.9735 Td
(0901 ) 26.1067 Tj
-5.2213 -47.4668 Td
(0902 ) 26.1067 Tj
-5.2213 -56.9602 Td
(0903 ) 26.1067 Tj
-5.2213 -66.4535 Td
(0904 ) 26.1067 Tj
-5.2213 -75.9469 Td
(0905 ) 26.1067 Tj
-5.2213 -85.4403 Td
(0906 ) 26.1067 Tj
-5.2213 -94.9336 Td
(0907 ) 26.1067 Tj
-5.2213 -104.427 Td
(0908 ) 26.1067 Tj
-5.2213 -113.9203 Td
(0909 ) 26.1067 Tj
-5.2213 -123.4137 Td
(0910 ) 26.1067 Tj
-5.2213 -132.9071 Td
(0911 ) 26.1067 Tj
-5.2213 -142.4004 Td
(0912 ) 26.1067 Tj
-5.2213 -151.8938 Td
(0913 ) 26.1067 Tj
-5.2213 -161.3871 Td
(0914 ) 26.1067 Tj
-5.2213 -170.8805 Td
(0915 ) 26.1067 Tj
-5.2213 -180.3739 Td
(0916 ) 26.1067 Tj
-5.2213 -189.8672 Td
(0917 ) 26.1067 Tj
-5.2213 -199.3606 Td
(0918 ) 26.1067 Tj
-5.2213 -208.8539 Td
(0919 ) 26.1067 Tj
-5.2213 -218.3473 Td
(0920 ) 26.1067 Tj
-5.2213 -227.8407 Td
(0921 ) 26.1067 Tj
-5.2213 -237.334 Td
(0922 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0923 ) 26.1067 Tj
-5.2213 -256.3207 Td
(0924 ) 26.1067 Tj
-5.2213 -265.8141 Td
(0925 ) 26.1067 Tj
-5.2213 -275.3075 Td
(0926 ) 26.1067 Tj
-5.2213 -284.8008 Td
(0927 ) 26.1067 Tj
-5.2213 -294.2942 Td
(0928 ) 26.1067 Tj
-5.2213 -303.7875 Td
(0929 ) 26.1067 Tj
-5.2213 -313.2809 Td
(0930 ) 26.1067 Tj
-5.2213 -322.7743 Td
(0931 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0932 ) 26.1067 Tj
-5.2213 -341.761 Td
(0933 ) 26.1067 Tj
-5.2213 -351.2543 Td
(0934 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0935 ) 26.1067 Tj
-5.2213 -370.2411 Td
(0936 ) 26.1067 Tj
-5.2213 -379.7344 Td
(0937 ) 26.1067 Tj
-5.2213 -389.2278 Td
(0938 ) 26.1067 Tj
-5.2213 -398.7211 Td
(0939 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0940 ) 26.1067 Tj
-5.2213 -417.7079 Td
(0941 ) 26.1067 Tj
-5.2213 -427.2012 Td
(0942 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0943 ) 26.1067 Tj
-5.2213 -446.1879 Td
(0944 ) 26.1067 Tj
-5.2213 -455.6813 Td
(0945 ) 26.1067 Tj
-5.2213 -465.1747 Td
(0946 ) 26.1067 Tj
-5.2213 -474.668 Td
(0947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(0948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(0949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 09) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bootasm.S  Page 1) 198.4106 Tj
-5.2213 -28.4801 Td
(0950 #include "asm.h") 109.648 Tj
-5.2213 -37.9735 Td
(0951 ) 26.1067 Tj
-5.2213 -47.4668 Td
(0952 # Start the first CPU: switch to 32-bit protected mode, ju\
mp into C.) 381.1572 Tj
-5.2213 -56.9602 Td
(0953 # The BIOS loads this code from the first sector of the ha\
rd disk into) 391.5999 Tj
-5.2213 -66.4535 Td
(0954 # memory at physical address 0x7c00 and starts executing i\
n real mode) 386.3786 Tj
-5.2213 -75.9469 Td
(0955 # with %cs=0 %ip=7c00.) 140.976 Tj
-5.2213 -85.4403 Td
(0956 ) 26.1067 Tj
-5.2213 -94.9336 Td
(0957 .set PROT_MODE_CSEG, 0x8         # kernel code segment sel\
ector) 355.0506 Tj
-5.2213 -104.427 Td
(0958 .set PROT_MODE_DSEG, 0x10        # kernel data segment sel\
ector) 355.0506 Tj
-5.2213 -113.9203 Td
(0959 .set CR0_PE_ON,      0x1         # protected mode enable f\
lag) 344.6079 Tj
-5.2213 -123.4137 Td
(0960 ) 26.1067 Tj
-5.2213 -132.9071 Td
(0961 .globl start) 88.7626 Tj
-5.2213 -142.4004 Td
(0962 start:) 57.4347 Tj
-5.2213 -151.8938 Td
(0963   .code16                     # Assemble for 16-bit mode) 318.5013 Tj
-5.2213 -161.3871 Td
(0964   cli                         # Disable interrupts) 287.1733 Tj
-5.2213 -170.8805 Td
(0965   cld                         # String operations incremen\
t) 334.1652 Tj
-5.2213 -180.3739 Td
(0966 ) 26.1067 Tj
-5.2213 -189.8672 Td
(0967   # Set up the important data segment registers \(DS, ES, \
SS\).) 344.6079 Tj
-5.2213 -199.3606 Td
(0968   xorw    %ax,%ax             # Segment number zero) 292.3946 Tj
-5.2213 -208.8539 Td
(0969   movw    %ax,%ds             # -> Data Segment) 271.5093 Tj
-5.2213 -218.3473 Td
(0970   movw    %ax,%es             # -> Extra Segment) 276.7306 Tj
-5.2213 -227.8407 Td
(0971   movw    %ax,%ss             # -> Stack Segment) 276.7306 Tj
-5.2213 -237.334 Td
(0972 ) 26.1067 Tj
-5.2213 -246.8274 Td
(0973   # Enable A20:) 104.4266 Tj
-5.2213 -256.3207 Td
(0974   #   For backwards compatibility with the earliest PCs, p\
hysical) 365.4932 Tj
-5.2213 -265.8141 Td
(0975   #   address line 20 is tied low, so that addresses highe\
r than) 360.2719 Tj
-5.2213 -275.3075 Td
(0976   #   1MB wrap around to zero by default.  This code undoe\
s this.) 365.4932 Tj
-5.2213 -284.8008 Td
(0977 seta20.1:) 73.0986 Tj
-5.2213 -294.2942 Td
(0978   inb     $0x64,%al               # Wait for not busy) 302.8373 Tj
-5.2213 -303.7875 Td
(0979   testb   $0x2,%al) 120.0906 Tj
-5.2213 -313.2809 Td
(0980   jnz     seta20.1) 120.0906 Tj
-5.2213 -322.7743 Td
(0981 ) 26.1067 Tj
-5.2213 -332.2676 Td
(0982   movb    $0xd1,%al               # 0xd1 -> port 0x64) 302.8373 Tj
-5.2213 -341.761 Td
(0983   outb    %al,$0x64) 125.312 Tj
-5.2213 -351.2543 Td
(0984 ) 26.1067 Tj
-5.2213 -360.7477 Td
(0985 seta20.2:) 73.0986 Tj
-5.2213 -370.2411 Td
(0986   inb     $0x64,%al               # Wait for not busy) 302.8373 Tj
-5.2213 -379.7344 Td
(0987   testb   $0x2,%al) 120.0906 Tj
-5.2213 -389.2278 Td
(0988   jnz     seta20.2) 120.0906 Tj
-5.2213 -398.7211 Td
(0989 ) 26.1067 Tj
-5.2213 -408.2145 Td
(0990   movb    $0xdf,%al               # 0xdf -> port 0x60) 302.8373 Tj
-5.2213 -417.7079 Td
(0991   outb    %al,$0x60) 125.312 Tj
-5.2213 -427.2012 Td
(0992 ) 26.1067 Tj
-5.2213 -436.6946 Td
(0993   # Switch from real to protected mode, using a bootstrap \
GDT) 344.6079 Tj
-5.2213 -446.1879 Td
(0994   # and segment translation that makes virtual addresses) 318.5013 Tj
-5.2213 -455.6813 Td
(0995   # identical to their physical addresses, so that the) 308.0586 Tj
-5.2213 -465.1747 Td
(0996   # effective memory map does not change during the switch\
.) 334.1652 Tj
-5.2213 -474.668 Td
(0997   lgdt    gdtdesc) 114.8693 Tj
-5.2213 -484.1614 Td
(0998   movl    %cr0, %eax) 130.5333 Tj
-5.2213 -493.6547 Td
(0999   orl     $CR0_PE_ON, %eax) 161.8613 Tj
-5.2213 -522.1348 Td
(Sheet 09) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 19 19
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bootasm.S  Page 2) 198.4106 Tj
-5.2213 -28.4801 Td
(1000   movl    %eax, %cr0) 130.5333 Tj
-5.2213 -37.9735 Td
(1001 ) 26.1067 Tj
-5.2213 -47.4668 Td
(1002   # Jump to next instruction, but in 32-bit code segment.) 323.7226 Tj
-5.2213 -56.9602 Td
(1003   # Switches processor into 32-bit mode.) 234.9599 Tj
-5.2213 -66.4535 Td
(1004   ljmp    $PROT_MODE_CSEG, $protcseg) 214.0746 Tj
-5.2213 -75.9469 Td
(1005 ) 26.1067 Tj
-5.2213 -85.4403 Td
(1006   .code32                     # Assemble for 32-bit mode) 318.5013 Tj
-5.2213 -94.9336 Td
(1007 protcseg:) 73.0986 Tj
-5.2213 -104.427 Td
(1008   # Set up the protected-mode data segment registers) 297.6159 Tj
-5.2213 -113.9203 Td
(1009   movw    $PROT_MODE_DSEG, %ax    # Our data segment selec\
tor) 344.6079 Tj
-5.2213 -123.4137 Td
(1010   movw    %ax, %ds                # -> DS: Data Segment) 313.2799 Tj
-5.2213 -132.9071 Td
(1011   movw    %ax, %es                # -> ES: Extra Segment) 318.5013 Tj
-5.2213 -142.4004 Td
(1012   movw    %ax, %fs                # -> FS) 240.1813 Tj
-5.2213 -151.8938 Td
(1013   movw    %ax, %gs                # -> GS) 240.1813 Tj
-5.2213 -161.3871 Td
(1014   movw    %ax, %ss                # -> SS: Stack Segment) 318.5013 Tj
-5.2213 -170.8805 Td
(1015 ) 26.1067 Tj
-5.2213 -180.3739 Td
(1016   # Set up the stack pointer and call into C.) 261.0666 Tj
-5.2213 -189.8672 Td
(1017   movl    $start, %esp) 140.976 Tj
-5.2213 -199.3606 Td
(1018   call    bootmain) 120.0906 Tj
-5.2213 -208.8539 Td
(1019 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1020   # If bootmain returns \(it shouldn't\), loop.) 261.0666 Tj
-5.2213 -227.8407 Td
(1021 spin:) 52.2133 Tj
-5.2213 -237.334 Td
(1022   jmp     spin) 99.2053 Tj
-5.2213 -246.8274 Td
(1023 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1024 # Bootstrap GDT) 104.4266 Tj
-5.2213 -265.8141 Td
(1025 .p2align 2                                # force 4 byte a\
lignment) 370.7146 Tj
-5.2213 -275.3075 Td
(1026 gdt:) 46.992 Tj
-5.2213 -284.8008 Td
(1027   SEG_NULLASM                             # null seg) 297.6159 Tj
-5.2213 -294.2942 Td
(1028   SEG_ASM\(STA_X|STA_R, 0x0, 0xffffffff\)   # code seg) 297.6159 Tj
-5.2213 -303.7875 Td
(1029   SEG_ASM\(STA_W, 0x0, 0xffffffff\)         # data seg) 297.6159 Tj
-5.2213 -313.2809 Td
(1030 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1031 gdtdesc:) 67.8773 Tj
-5.2213 -332.2676 Td
(1032   .word   0x17                            # sizeof\(gdt\) \
- 1) 334.1652 Tj
-5.2213 -341.761 Td
(1033   .long   gdt                             # address gdt) 313.2799 Tj
-5.2213 -351.2543 Td
(1034 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1035 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1036 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1037 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1038 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1039 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1040 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1041 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1042 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1043 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1044 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1045 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1046 ) 26.1067 Tj
-5.2213 -474.668 Td
(1047 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 10) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bootother.S  Page 1) 208.8533 Tj
-5.2213 -28.4801 Td
(1050 #include "asm.h") 109.648 Tj
-5.2213 -37.9735 Td
(1051 ) 26.1067 Tj
-5.2213 -47.4668 Td
(1052 # Start an Application Processor. This must be placed on a\
 4KB boundary) 396.8212 Tj
-5.2213 -56.9602 Td
(1053 # somewhere in the 1st MB of conventional memory \(APBOOTS\
TRAP\). However,) 402.0426 Tj
-5.2213 -66.4535 Td
(1054 # due to some shortcuts below it's restricted further to w\
ithin the 1st) 396.8212 Tj
-5.2213 -75.9469 Td
(1055 # 64KB. The AP starts in real-mode, with) 234.9599 Tj
-5.2213 -85.4403 Td
(1056 #   CS selector set to the startup memory address/16;) 302.8373 Tj
-5.2213 -94.9336 Td
(1057 #   CS base set to startup memory address;) 245.4026 Tj
-5.2213 -104.427 Td
(1058 #   CS limit set to 64KB;) 156.64 Tj
-5.2213 -113.9203 Td
(1059 #   CPL and IP set to 0.) 151.4186 Tj
-5.2213 -123.4137 Td
(1060 #) 31.328 Tj
-5.2213 -132.9071 Td
(1061 # Bootothers \(in main.c\) starts each non-boot CPU in tur\
n.) 328.9439 Tj
-5.2213 -142.4004 Td
(1062 # It puts the correct %esp in start-4,) 224.5173 Tj
-5.2213 -151.8938 Td
(1063 # and the place to jump to in start-8.) 224.5173 Tj
-5.2213 -161.3871 Td
(1064 #) 31.328 Tj
-5.2213 -170.8805 Td
(1065 # This code is identical to bootasm.S except:) 261.0666 Tj
-5.2213 -180.3739 Td
(1066 #   - it does not need to enable A20) 214.0746 Tj
-5.2213 -189.8672 Td
(1067 #   - it uses the address at start-4 for the %esp) 281.9519 Tj
-5.2213 -199.3606 Td
(1068 #   - it jumps to the address at start-8 instead of callin\
g bootmain) 381.1572 Tj
-5.2213 -208.8539 Td
(1069 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1070 .set PROT_MODE_CSEG, 0x8         # kernel code segment sel\
ector) 355.0506 Tj
-5.2213 -227.8407 Td
(1071 .set PROT_MODE_DSEG, 0x10        # kernel data segment sel\
ector) 355.0506 Tj
-5.2213 -237.334 Td
(1072 .set CR0_PE_ON,      0x1         # protected mode enable f\
lag) 344.6079 Tj
-5.2213 -246.8274 Td
(1073 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1074 .globl start) 88.7626 Tj
-5.2213 -265.8141 Td
(1075 start:) 57.4347 Tj
-5.2213 -275.3075 Td
(1076   .code16                     # Assemble for 16-bit mode) 318.5013 Tj
-5.2213 -284.8008 Td
(1077   cli                         # Disable interrupts) 287.1733 Tj
-5.2213 -294.2942 Td
(1078   cld                         # String operations incremen\
t) 334.1652 Tj
-5.2213 -303.7875 Td
(1079 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1080   # Set up the important data segment registers \(DS, ES, \
SS\).) 344.6079 Tj
-5.2213 -322.7743 Td
(1081   xorw    %ax,%ax             # Segment number zero) 292.3946 Tj
-5.2213 -332.2676 Td
(1082   movw    %ax,%ds             # -> Data Segment) 271.5093 Tj
-5.2213 -341.761 Td
(1083   movw    %ax,%es             # -> Extra Segment) 276.7306 Tj
-5.2213 -351.2543 Td
(1084   movw    %ax,%ss             # -> Stack Segment) 276.7306 Tj
-5.2213 -360.7477 Td
(1085 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1086   # Switch from real to protected mode, using a bootstrap \
GDT) 344.6079 Tj
-5.2213 -379.7344 Td
(1087   # and segment translation that makes virtual addresses) 318.5013 Tj
-5.2213 -389.2278 Td
(1088   # identical to their physical addresses, so that the) 308.0586 Tj
-5.2213 -398.7211 Td
(1089   # effective memory map does not change during the switch\
.) 334.1652 Tj
-5.2213 -408.2145 Td
(1090   lgdt    gdtdesc) 114.8693 Tj
-5.2213 -417.7079 Td
(1091   movl    %cr0, %eax) 130.5333 Tj
-5.2213 -427.2012 Td
(1092   orl     $CR0_PE_ON, %eax) 161.8613 Tj
-5.2213 -436.6946 Td
(1093   movl    %eax, %cr0) 130.5333 Tj
-5.2213 -446.1879 Td
(1094 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1095   # Jump to next instruction, but in 32-bit code segment.) 323.7226 Tj
-5.2213 -465.1747 Td
(1096   # Switches processor into 32-bit mode.) 234.9599 Tj
-5.2213 -474.668 Td
(1097   ljmp    $PROT_MODE_CSEG, $protcseg) 214.0746 Tj
-5.2213 -484.1614 Td
(1098 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1099 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 10) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 20 20
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bootother.S  Page 2) 208.8533 Tj
-5.2213 -28.4801 Td
(1100   .code32                     # Assemble for 32-bit mode) 318.5013 Tj
-5.2213 -37.9735 Td
(1101 protcseg:) 73.0986 Tj
-5.2213 -47.4668 Td
(1102   # Set up the protected-mode data segment registers) 297.6159 Tj
-5.2213 -56.9602 Td
(1103   movw    $PROT_MODE_DSEG, %ax    # Our data segment selec\
tor) 344.6079 Tj
-5.2213 -66.4535 Td
(1104   movw    %ax, %ds                # -> DS: Data Segment) 313.2799 Tj
-5.2213 -75.9469 Td
(1105   movw    %ax, %es                # -> ES: Extra Segment) 318.5013 Tj
-5.2213 -85.4403 Td
(1106   movw    %ax, %fs                # -> FS) 240.1813 Tj
-5.2213 -94.9336 Td
(1107   movw    %ax, %gs                # -> GS) 240.1813 Tj
-5.2213 -104.427 Td
(1108   movw    %ax, %ss                # -> SS: Stack Segment) 318.5013 Tj
-5.2213 -113.9203 Td
(1109 ) 26.1067 Tj
-5.2213 -123.4137 Td
(1110   movl    start-4, %esp) 146.1973 Tj
-5.2213 -132.9071 Td
(1111   movl    start-8, %eax) 146.1973 Tj
-5.2213 -142.4004 Td
(1112   jmp     *%eax) 104.4266 Tj
-5.2213 -151.8938 Td
(1113 ) 26.1067 Tj
-5.2213 -161.3871 Td
(1114 # Bootstrap GDT) 104.4266 Tj
-5.2213 -170.8805 Td
(1115 .p2align 2                                # force 4 byte a\
lignment) 370.7146 Tj
-5.2213 -180.3739 Td
(1116 gdt:) 46.992 Tj
-5.2213 -189.8672 Td
(1117   SEG_NULLASM                             # null seg) 297.6159 Tj
-5.2213 -199.3606 Td
(1118   SEG_ASM\(STA_X|STA_R, 0x0, 0xffffffff\)   # code seg) 297.6159 Tj
-5.2213 -208.8539 Td
(1119   SEG_ASM\(STA_W, 0x0, 0xffffffff\)         # data seg) 297.6159 Tj
-5.2213 -218.3473 Td
(1120 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1121 gdtdesc:) 67.8773 Tj
-5.2213 -237.334 Td
(1122   .word   0x17                            # sizeof\(gdt\) \
- 1) 334.1652 Tj
-5.2213 -246.8274 Td
(1123   .long   gdt                             # address gdt) 313.2799 Tj
-5.2213 -256.3207 Td
(1124 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1126 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1127 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1128 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1129 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1130 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1131 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1132 ) 26.1067 Tj
-5.2213 -341.761 Td
(1133 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1134 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1135 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1136 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1137 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1138 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1139 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1140 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1141 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1142 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1143 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1144 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1146 ) 26.1067 Tj
-5.2213 -474.668 Td
(1147 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 11) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bootmain.c  Page 1) 203.6319 Tj
-5.2213 -28.4801 Td
(1150 // Boot loader.) 104.4266 Tj
-5.2213 -37.9735 Td
(1151 //) 36.5493 Tj
-5.2213 -47.4668 Td
(1152 // The BIOS loads boot sector \(bootasm.S\) from sector 0 \
of the disk) 375.9359 Tj
-5.2213 -56.9602 Td
(1153 // into memory and executes it.  The boot sector puts the \
processor) 375.9359 Tj
-5.2213 -66.4535 Td
(1154 // in 32-bit mode and calls bootmain below, which loads an\
 ELF kernel) 386.3786 Tj
-5.2213 -75.9469 Td
(1155 // image from the disk starting at sector 1 and then jumps\
 to the) 365.4932 Tj
-5.2213 -85.4403 Td
(1156 // kernel entry routine.) 151.4186 Tj
-5.2213 -94.9336 Td
(1157 ) 26.1067 Tj
-5.2213 -104.427 Td
(1158 #include "types.h") 120.0906 Tj
-5.2213 -113.9203 Td
(1159 #include "elf.h") 109.648 Tj
-5.2213 -123.4137 Td
(1160 #include "x86.h") 109.648 Tj
-5.2213 -132.9071 Td
(1161 ) 26.1067 Tj
-5.2213 -142.4004 Td
(1162 #define SECTSIZE  512) 135.7546 Tj
-5.2213 -151.8938 Td
(1163 ) 26.1067 Tj
-5.2213 -161.3871 Td
(1164 void readseg\(uint, uint, uint\);) 187.968 Tj
-5.2213 -170.8805 Td
(1165 ) 26.1067 Tj
-5.2213 -180.3739 Td
(1166 void) 46.992 Tj
-5.2213 -189.8672 Td
(1167 bootmain\(void\)) 99.2053 Tj
-5.2213 -199.3606 Td
(1168 {) 31.328 Tj
-5.2213 -208.8539 Td
(1169   struct elfhdr *elf;) 135.7546 Tj
-5.2213 -218.3473 Td
(1170   struct proghdr *ph, *eph;) 167.0826 Tj
-5.2213 -227.8407 Td
(1171   void \(*entry\)\(void\);) 140.976 Tj
-5.2213 -237.334 Td
(1172 ) 26.1067 Tj
-5.2213 -246.8274 Td
(1173   elf = \(struct elfhdr*\)0x10000;  // scratch space) 287.1733 Tj
-5.2213 -256.3207 Td
(1174 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1175   // Read 1st page off disk) 167.0826 Tj
-5.2213 -275.3075 Td
(1176   readseg\(\(uint\)elf, SECTSIZE*8, 0\);) 214.0746 Tj
-5.2213 -284.8008 Td
(1177 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1178   // Is this an ELF executable?) 187.968 Tj
-5.2213 -303.7875 Td
(1179   if\(elf->magic != ELF_MAGIC\)) 177.5253 Tj
-5.2213 -313.2809 Td
(1180     goto bad;) 93.984 Tj
-5.2213 -322.7743 Td
(1181 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1182   // Load each program segment \(ignores ph flags\).) 287.1733 Tj
-5.2213 -341.761 Td
(1183   ph = \(struct proghdr*\)\(\(uchar*\)elf + elf->phoff\);) 292.3946 Tj
-5.2213 -351.2543 Td
(1184   eph = ph + elf->phnum;) 151.4186 Tj
-5.2213 -360.7477 Td
(1185   for\(; ph < eph; ph++\)) 146.1973 Tj
-5.2213 -370.2411 Td
(1186     readseg\(ph->va, ph->memsz, ph->offset\);) 250.6239 Tj
-5.2213 -379.7344 Td
(1187 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1188   // Call the entry point from the ELF header.) 266.2879 Tj
-5.2213 -398.7211 Td
(1189   // Does not return!) 135.7546 Tj
-5.2213 -408.2145 Td
(1190   entry = \(void\(*\)\(void\)\)\(elf->entry & 0xFFFFFF\);) 281.9519 Tj
-5.2213 -417.7079 Td
(1191   entry\(\);) 78.32 Tj
-5.2213 -427.2012 Td
(1192 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1193 bad:) 46.992 Tj
-5.2213 -446.1879 Td
(1194   outw\(0x8A00, 0x8A00\);) 146.1973 Tj
-5.2213 -455.6813 Td
(1195   outw\(0x8A00, 0x8E00\);) 146.1973 Tj
-5.2213 -465.1747 Td
(1196   for\(;;\)) 73.0986 Tj
-5.2213 -474.668 Td
(1197     ;) 52.2133 Tj
-5.2213 -484.1614 Td
(1198 }) 31.328 Tj
-5.2213 -493.6547 Td
(1199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 11) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 21 21
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bootmain.c  Page 2) 203.6319 Tj
-5.2213 -28.4801 Td
(1200 void) 46.992 Tj
-5.2213 -37.9735 Td
(1201 waitdisk\(void\)) 99.2053 Tj
-5.2213 -47.4668 Td
(1202 {) 31.328 Tj
-5.2213 -56.9602 Td
(1203   // Wait for disk ready.) 156.64 Tj
-5.2213 -66.4535 Td
(1204   while\(\(inb\(0x1F7\) & 0xC0\) != 0x40\)) 214.0746 Tj
-5.2213 -75.9469 Td
(1205     ;) 52.2133 Tj
-5.2213 -85.4403 Td
(1206 }) 31.328 Tj
-5.2213 -94.9336 Td
(1207 ) 26.1067 Tj
-5.2213 -104.427 Td
(1208 // Read a single sector at offset into dst.) 250.6239 Tj
-5.2213 -113.9203 Td
(1209 void) 46.992 Tj
-5.2213 -123.4137 Td
(1210 readsect\(void *dst, uint offset\)) 193.1893 Tj
-5.2213 -132.9071 Td
(1211 {) 31.328 Tj
-5.2213 -142.4004 Td
(1212   // Issue command.) 125.312 Tj
-5.2213 -151.8938 Td
(1213   waitdisk\(\);) 93.984 Tj
-5.2213 -161.3871 Td
(1214   outb\(0x1F2, 1\);   // count = 1) 193.1893 Tj
-5.2213 -170.8805 Td
(1215   outb\(0x1F3, offset\);) 140.976 Tj
-5.2213 -180.3739 Td
(1216   outb\(0x1F4, offset >> 8\);) 167.0826 Tj
-5.2213 -189.8672 Td
(1217   outb\(0x1F5, offset >> 16\);) 172.304 Tj
-5.2213 -199.3606 Td
(1218   outb\(0x1F6, \(offset >> 24\) | 0xE0\);) 219.2959 Tj
-5.2213 -208.8539 Td
(1219   outb\(0x1F7, 0x20\);  // cmd 0x20 - read sectors) 276.7306 Tj
-5.2213 -218.3473 Td
(1220 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1221   // Read data.) 104.4266 Tj
-5.2213 -237.334 Td
(1222   waitdisk\(\);) 93.984 Tj
-5.2213 -246.8274 Td
(1223   insl\(0x1F0, dst, SECTSIZE/4\);) 187.968 Tj
-5.2213 -256.3207 Td
(1224 }) 31.328 Tj
-5.2213 -265.8141 Td
(1225 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1226 // Read 'count' bytes at 'offset' from kernel into virtual\
 address 'va'.) 402.0426 Tj
-5.2213 -284.8008 Td
(1227 // Might copy more than asked.) 182.7466 Tj
-5.2213 -294.2942 Td
(1228 void) 46.992 Tj
-5.2213 -303.7875 Td
(1229 readseg\(uint va, uint count, uint offset\)) 240.1813 Tj
-5.2213 -313.2809 Td
(1230 {) 31.328 Tj
-5.2213 -322.7743 Td
(1231   uint eva;) 83.5413 Tj
-5.2213 -332.2676 Td
(1232 ) 26.1067 Tj
-5.2213 -341.761 Td
(1233   va &= 0xFFFFFF;) 114.8693 Tj
-5.2213 -351.2543 Td
(1234   eva = va + count;) 125.312 Tj
-5.2213 -360.7477 Td
(1235 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1236   // Round down to sector boundary.) 208.8533 Tj
-5.2213 -379.7344 Td
(1237   va &= ~\(SECTSIZE - 1\);) 151.4186 Tj
-5.2213 -389.2278 Td
(1238 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1239   // Translate from bytes to sectors; kernel starts at sec\
tor 1.) 360.2719 Tj
-5.2213 -408.2145 Td
(1240   offset = \(offset / SECTSIZE\) + 1;) 208.8533 Tj
-5.2213 -417.7079 Td
(1241 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1242   // If this is too slow, we could read lots of sectors at\
 a time.) 370.7146 Tj
-5.2213 -436.6946 Td
(1243   // We'd write more to memory than asked, but it doesn't \
matter --) 375.9359 Tj
-5.2213 -446.1879 Td
(1244   // we load in increasing order.) 198.4106 Tj
-5.2213 -455.6813 Td
(1245   for\(; va < eva; va += SECTSIZE, offset++\)) 250.6239 Tj
-5.2213 -465.1747 Td
(1246     readsect\(\(uchar*\)va, offset\);) 198.4106 Tj
-5.2213 -474.668 Td
(1247 }) 31.328 Tj
-5.2213 -484.1614 Td
(1248 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1249 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 12) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/main.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(1250 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(1251 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(1252 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(1253 #include "mmu.h") 109.648 Tj
-5.2213 -66.4535 Td
(1254 #include "proc.h") 114.8693 Tj
-5.2213 -75.9469 Td
(1255 #include "x86.h") 109.648 Tj
-5.2213 -85.4403 Td
(1256 #include "pci.h") 109.648 Tj
-5.2213 -94.9336 Td
(1257 ) 26.1067 Tj
-5.2213 -104.427 Td
(1258 static void bootothers\(void\);) 177.5253 Tj
-5.2213 -113.9203 Td
(1259 ) 26.1067 Tj
-5.2213 -123.4137 Td
(1260 // Bootstrap processor starts running C code here.) 287.1733 Tj
-5.2213 -132.9071 Td
(1261 int) 41.7707 Tj
-5.2213 -142.4004 Td
(1262 main\(void\)) 78.32 Tj
-5.2213 -151.8938 Td
(1263 {) 31.328 Tj
-5.2213 -161.3871 Td
(1264   int i;) 67.8773 Tj
-5.2213 -170.8805 Td
(1265   static volatile int bcpu;  // cannot be on stack) 287.1733 Tj
-5.2213 -180.3739 Td
(1266   extern char edata[], end[];) 177.5253 Tj
-5.2213 -189.8672 Td
(1267 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1268   // clear BSS) 99.2053 Tj
-5.2213 -208.8539 Td
(1269   memset\(edata, 0, end - edata\);) 193.1893 Tj
-5.2213 -218.3473 Td
(1270 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1271   // Prevent release\(\) from enabling interrupts.) 276.7306 Tj
-5.2213 -237.334 Td
(1272   for\(i=0; i<NCPU; i++\)) 146.1973 Tj
-5.2213 -246.8274 Td
(1273     cpus[i].nlock = 1;) 140.976 Tj
-5.2213 -256.3207 Td
(1274 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1275 //  mp_init\(\); // collect info about this machine) 281.9519 Tj
-5.2213 -275.3075 Td
(1276   bcpu = mp_bcpu\(\);) 125.312 Tj
-5.2213 -284.8008 Td
(1277 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1278   // Switch to bootstrap processor's stack) 245.4026 Tj
-5.2213 -303.7875 Td
(1279   asm volatile\("movl %0, %%esp" : : "r" \(cpus[bcpu].mpst\
ack+MPSTACK-32\)\);) 407.2639 Tj
-5.2213 -313.2809 Td
(1280   asm volatile\("movl %0, %%ebp" : : "r" \(cpus[bcpu].mpst\
ack+MPSTACK\)\);) 391.5999 Tj
-5.2213 -322.7743 Td
(1281 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1282   lapic_init\(bcpu\);) 125.312 Tj
-5.2213 -341.761 Td
(1283   cprintf\("\\ncpu%d: starting xv6\\n\\n", cpu\(\)\);) 266.2879 Tj
-5.2213 -351.2543 Td
(1284 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1285   pinit\(\);         // process table) 208.8533 Tj
-5.2213 -370.2411 Td
(1286   binit\(\);         // buffer cache) 203.6319 Tj
-5.2213 -379.7344 Td
(1287   pic_init\(\);      // interrupt controller) 245.4026 Tj
-5.2213 -389.2278 Td
(1288   ioapic_init\(\);   // another interrupt controller) 287.1733 Tj
-5.2213 -398.7211 Td
(1289   kinit\(\);         // physical memory allocator) 271.5093 Tj
-5.2213 -408.2145 Td
(1290   tvinit\(\);        // trap vectors) 203.6319 Tj
-5.2213 -417.7079 Td
(1291   idtinit\(\);       // interrupt descriptor table) 276.7306 Tj
-5.2213 -427.2012 Td
(1292   fileinit\(\);      // file table) 193.1893 Tj
-5.2213 -436.6946 Td
(1293   iinit\(\);         // inode cache) 198.4106 Tj
-5.2213 -446.1879 Td
(1294   setupsegs\(0\);    // segments & TSS) 214.0746 Tj
-5.2213 -455.6813 Td
(1295   console_init\(\);  // I/O devices & their interrupts) 297.6159 Tj
-5.2213 -465.1747 Td
(1296   ide_init\(\);      // disk) 161.8613 Tj
-5.2213 -474.668 Td
(1297 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1298 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1299 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 12) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 22 22
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/main.c  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(1300   // lwIP init) 99.2053 Tj
-5.2213 -37.9735 Td
(1301   memp_init\(\);) 99.2053 Tj
-5.2213 -47.4668 Td
(1302   mem_init\(\);) 93.984 Tj
-5.2213 -56.9602 Td
(1303   netif_init\(\);) 104.4266 Tj
-5.2213 -66.4535 Td
(1304   pbuf_init\(\);) 99.2053 Tj
-5.2213 -75.9469 Td
(1305   tcpip_init\(0, 0\);) 125.312 Tj
-5.2213 -85.4403 Td
(1306 ) 26.1067 Tj
-5.2213 -94.9336 Td
(1307   pci_init\(\);      // PCI) 156.64 Tj
-5.2213 -104.427 Td
(1308   bootothers\(\);    // boot other CPUs) 219.2959 Tj
-5.2213 -113.9203 Td
(1309   if\(!ismp\)) 83.5413 Tj
-5.2213 -123.4137 Td
(1310     timer_init\(\); // uniprocessor timer) 229.7386 Tj
-5.2213 -132.9071 Td
(1311   userinit\(\);      // first user process) 234.9599 Tj
-5.2213 -142.4004 Td
(1312 ) 26.1067 Tj
-5.2213 -151.8938 Td
(1313   // enable interrupts on this processor.) 240.1813 Tj
-5.2213 -161.3871 Td
(1314   cpus[cpu\(\)].nlock--;) 140.976 Tj
-5.2213 -170.8805 Td
(1315   if \(cpus[cpu\(\)].nlock == 0\)) 177.5253 Tj
-5.2213 -180.3739 Td
(1316     sti\(\);) 78.32 Tj
-5.2213 -189.8672 Td
(1317 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1318   scheduler\(\);) 99.2053 Tj
-5.2213 -208.8539 Td
(1319 }) 31.328 Tj
-5.2213 -218.3473 Td
(1320 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1321 // Additional processors start here.) 214.0746 Tj
-5.2213 -237.334 Td
(1322 static void) 83.5413 Tj
-5.2213 -246.8274 Td
(1323 mpmain\(void\)) 88.7626 Tj
-5.2213 -256.3207 Td
(1324 {) 31.328 Tj
-5.2213 -265.8141 Td
(1325   cprintf\("cpu%d: starting\\n", cpu\(\)\);) 224.5173 Tj
-5.2213 -275.3075 Td
(1326   idtinit\(\);) 88.7626 Tj
-5.2213 -284.8008 Td
(1327   lapic_init\(cpu\(\)\);) 130.5333 Tj
-5.2213 -294.2942 Td
(1328   setupsegs\(0\);) 104.4266 Tj
-5.2213 -303.7875 Td
(1329   cpuid\(0, 0, 0, 0, 0\);  // memory barrier) 245.4026 Tj
-5.2213 -313.2809 Td
(1330   cpus[cpu\(\)].booted = 1;) 156.64 Tj
-5.2213 -322.7743 Td
(1331 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1332   // Enable interrupts on this processor.) 240.1813 Tj
-5.2213 -341.761 Td
(1333   cpus[cpu\(\)].nlock--;) 140.976 Tj
-5.2213 -351.2543 Td
(1334   if \(cpus[cpu\(\)].nlock == 0\)) 177.5253 Tj
-5.2213 -360.7477 Td
(1335     sti\(\);) 78.32 Tj
-5.2213 -370.2411 Td
(1336 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1337   scheduler\(\);) 99.2053 Tj
-5.2213 -389.2278 Td
(1338 }) 31.328 Tj
-5.2213 -398.7211 Td
(1339 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1340 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1341 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1342 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1344 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1345 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1346 ) 26.1067 Tj
-5.2213 -474.668 Td
(1347 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1348 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1349 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 13) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/main.c  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(1350 static void) 83.5413 Tj
-5.2213 -37.9735 Td
(1351 bootothers\(void\)) 109.648 Tj
-5.2213 -47.4668 Td
(1352 {) 31.328 Tj
-5.2213 -56.9602 Td
(1353   extern uchar _binary_bootother_start[], _binary_bootothe\
r_size[];) 375.9359 Tj
-5.2213 -66.4535 Td
(1354   uchar *code;) 99.2053 Tj
-5.2213 -75.9469 Td
(1355   struct cpu *c;) 109.648 Tj
-5.2213 -85.4403 Td
(1356 ) 26.1067 Tj
-5.2213 -94.9336 Td
(1357   // Write bootstrap code to unused memory at 0x7000.) 302.8373 Tj
-5.2213 -104.427 Td
(1358   code = \(uchar*\)0x7000;) 151.4186 Tj
-5.2213 -113.9203 Td
(1359   memmove\(code, _binary_bootother_start, \(uint\)_binary_\
bootother_size\);) 396.8212 Tj
-5.2213 -123.4137 Td
(1360 ) 26.1067 Tj
-5.2213 -132.9071 Td
(1361   for\(c = cpus; c < cpus+ncpu; c++\){) 214.0746 Tj
-5.2213 -142.4004 Td
(1362     if\(c == cpus+cpu\(\)\)  // We've started already.) 287.1733 Tj
-5.2213 -151.8938 Td
(1363       continue;) 104.4266 Tj
-5.2213 -161.3871 Td
(1364 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1365     // Fill in %esp, %eip and start code on cpu.) 276.7306 Tj
-5.2213 -180.3739 Td
(1366     *\(void**\)\(code-4\) = c->mpstack + MPSTACK;) 261.0666 Tj
-5.2213 -189.8672 Td
(1367     *\(void**\)\(code-8\) = mpmain;) 187.968 Tj
-5.2213 -199.3606 Td
(1368     lapic_startap\(c->apicid, \(uint\)code\);) 240.1813 Tj
-5.2213 -208.8539 Td
(1369 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1370     // Wait for cpu to get through bootstrap.) 261.0666 Tj
-5.2213 -227.8407 Td
(1371     while\(c->booted == 0\)) 156.64 Tj
-5.2213 -237.334 Td
(1372       ;) 62.656 Tj
-5.2213 -246.8274 Td
(1373   }) 41.7707 Tj
-5.2213 -256.3207 Td
(1374 }) 31.328 Tj
-5.2213 -265.8141 Td
(1375 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1376 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1377 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1378 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1379 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1380 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1381 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1382 ) 26.1067 Tj
-5.2213 -341.761 Td
(1383 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1384 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1385 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1386 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1387 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1388 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1389 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1390 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1391 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1392 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1393 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1394 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1395 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1396 ) 26.1067 Tj
-5.2213 -474.668 Td
(1397 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 13) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 23 23
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/spinlock.h  Page 1) 203.6319 Tj
-5.2213 -28.4801 Td
(1400 #ifndef XV6_SPINLOCK_H_) 146.1973 Tj
-5.2213 -37.9735 Td
(1401 #define XV6_SPINLOCK_H_) 146.1973 Tj
-5.2213 -47.4668 Td
(1402 // Mutual exclusion lock.) 156.64 Tj
-5.2213 -56.9602 Td
(1403 struct spinlock {) 114.8693 Tj
-5.2213 -66.4535 Td
(1404   uint locked;   // Is the lock held?) 219.2959 Tj
-5.2213 -75.9469 Td
(1405 ) 26.1067 Tj
-5.2213 -85.4403 Td
(1406   // For debugging:) 125.312 Tj
-5.2213 -94.9336 Td
(1407   char *name;    // Name of lock.) 198.4106 Tj
-5.2213 -104.427 Td
(1408   int  cpu;      // The number of the cpu holding the lock\
.) 334.1652 Tj
-5.2213 -113.9203 Td
(1409   uint pcs[10];  // The call stack \(an array of program c\
ounters\)) 365.4932 Tj
-5.2213 -123.4137 Td
(1410                  // that locked the lock.) 240.1813 Tj
-5.2213 -132.9071 Td
(1411 };) 36.5493 Tj
-5.2213 -142.4004 Td
(1412 #endif // XV6_SPINLOCK_H_) 156.64 Tj
-5.2213 -151.8938 Td
(1413 ) 26.1067 Tj
-5.2213 -161.3871 Td
(1414 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1415 ) 26.1067 Tj
-5.2213 -180.3739 Td
(1416 ) 26.1067 Tj
-5.2213 -189.8672 Td
(1417 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1418 ) 26.1067 Tj
-5.2213 -208.8539 Td
(1419 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1420 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1421 ) 26.1067 Tj
-5.2213 -237.334 Td
(1422 ) 26.1067 Tj
-5.2213 -246.8274 Td
(1423 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1424 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1425 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1426 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1427 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1428 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1429 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1430 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1431 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1432 ) 26.1067 Tj
-5.2213 -341.761 Td
(1433 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1434 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1435 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1436 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1437 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1438 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1439 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1440 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1441 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1442 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1443 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1444 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1445 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1446 ) 26.1067 Tj
-5.2213 -474.668 Td
(1447 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 14) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/spinlock.h  Page 2) 203.6319 Tj
-5.2213 -28.4801 Td
(1450 // Blank page.) 99.2053 Tj
-5.2213 -37.9735 Td
(1451 ) 26.1067 Tj
-5.2213 -47.4668 Td
(1452 ) 26.1067 Tj
-5.2213 -56.9602 Td
(1453 ) 26.1067 Tj
-5.2213 -66.4535 Td
(1454 ) 26.1067 Tj
-5.2213 -75.9469 Td
(1455 ) 26.1067 Tj
-5.2213 -85.4403 Td
(1456 ) 26.1067 Tj
-5.2213 -94.9336 Td
(1457 ) 26.1067 Tj
-5.2213 -104.427 Td
(1458 ) 26.1067 Tj
-5.2213 -113.9203 Td
(1459 ) 26.1067 Tj
-5.2213 -123.4137 Td
(1460 ) 26.1067 Tj
-5.2213 -132.9071 Td
(1461 ) 26.1067 Tj
-5.2213 -142.4004 Td
(1462 ) 26.1067 Tj
-5.2213 -151.8938 Td
(1463 ) 26.1067 Tj
-5.2213 -161.3871 Td
(1464 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1465 ) 26.1067 Tj
-5.2213 -180.3739 Td
(1466 ) 26.1067 Tj
-5.2213 -189.8672 Td
(1467 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1468 ) 26.1067 Tj
-5.2213 -208.8539 Td
(1469 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1470 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1471 ) 26.1067 Tj
-5.2213 -237.334 Td
(1472 ) 26.1067 Tj
-5.2213 -246.8274 Td
(1473 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1474 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1475 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1476 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1477 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1478 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1479 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1480 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1481 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1482 ) 26.1067 Tj
-5.2213 -341.761 Td
(1483 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1484 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1485 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1486 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1487 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1488 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1489 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1490 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1491 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1492 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1493 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1494 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1495 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1496 ) 26.1067 Tj
-5.2213 -474.668 Td
(1497 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1498 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1499 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 14) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 24 24
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/spinlock.c  Page 1) 203.6319 Tj
-5.2213 -28.4801 Td
(1500 // Mutual exclusion spin locks.) 187.968 Tj
-5.2213 -37.9735 Td
(1501 ) 26.1067 Tj
-5.2213 -47.4668 Td
(1502 #include "types.h") 120.0906 Tj
-5.2213 -56.9602 Td
(1503 #include "defs.h") 114.8693 Tj
-5.2213 -66.4535 Td
(1504 #include "param.h") 120.0906 Tj
-5.2213 -75.9469 Td
(1505 #include "x86.h") 109.648 Tj
-5.2213 -85.4403 Td
(1506 #include "mmu.h") 109.648 Tj
-5.2213 -94.9336 Td
(1507 #include "proc.h") 114.8693 Tj
-5.2213 -104.427 Td
(1508 #include "spinlock.h") 135.7546 Tj
-5.2213 -113.9203 Td
(1509 ) 26.1067 Tj
-5.2213 -123.4137 Td
(1510 extern int use_console_lock;) 172.304 Tj
-5.2213 -132.9071 Td
(1511 ) 26.1067 Tj
-5.2213 -142.4004 Td
(1512 void) 46.992 Tj
-5.2213 -151.8938 Td
(1513 initlock\(struct spinlock *lock, char *name\)) 250.6239 Tj
-5.2213 -161.3871 Td
(1514 {) 31.328 Tj
-5.2213 -170.8805 Td
(1515   lock->name = name;) 130.5333 Tj
-5.2213 -180.3739 Td
(1516   lock->locked = 0;) 125.312 Tj
-5.2213 -189.8672 Td
(1517   lock->cpu = 0xffffffff;) 156.64 Tj
-5.2213 -199.3606 Td
(1518 }) 31.328 Tj
-5.2213 -208.8539 Td
(1519 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1520 int int_enabled;) 109.648 Tj
-5.2213 -227.8407 Td
(1521 // Acquire the lock.) 130.5333 Tj
-5.2213 -237.334 Td
(1522 // Loops \(spins\) until the lock is acquired.) 255.8453 Tj
-5.2213 -246.8274 Td
(1523 // Holding a lock for a long time may cause) 250.6239 Tj
-5.2213 -256.3207 Td
(1524 // other CPUs to waste time spinning to acquire it.) 292.3946 Tj
-5.2213 -265.8141 Td
(1525 void) 46.992 Tj
-5.2213 -275.3075 Td
(1526 acquire\(struct spinlock *lock\)) 182.7466 Tj
-5.2213 -284.8008 Td
(1527 {) 31.328 Tj
-5.2213 -294.2942 Td
(1528   if\(holding\(lock\)\)) 125.312 Tj
-5.2213 -303.7875 Td
(1529   {) 41.7707 Tj
-5.2213 -313.2809 Td
(1530     cprintf\("lock already acquired by:\\n"\);) 250.6239 Tj
-5.2213 -322.7743 Td
(1531     int i;) 78.32 Tj
-5.2213 -332.2676 Td
(1532     for \(i=0; i<10; i++\)) 151.4186 Tj
-5.2213 -341.761 Td
(1533     {) 52.2133 Tj
-5.2213 -351.2543 Td
(1534         if \(\(lock->pcs[i] == 0\) || \(lock->pcs[i] == 0x\
ffffffff\)\)) 360.2719 Tj
-5.2213 -360.7477 Td
(1535             break;) 120.0906 Tj
-5.2213 -370.2411 Td
(1536         cprintf\("0x%08x ", lock->pcs[i]\);) 240.1813 Tj
-5.2213 -379.7344 Td
(1537     }) 52.2133 Tj
-5.2213 -389.2278 Td
(1538     cprintf\("\\n"\);) 120.0906 Tj
-5.2213 -398.7211 Td
(1539     panic\("acquire"\);) 135.7546 Tj
-5.2213 -408.2145 Td
(1540   }) 41.7707 Tj
-5.2213 -417.7079 Td
(1541 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1542 //  if\(cpus[cpu\(\)].nlock == 0\)) 182.7466 Tj
-5.2213 -436.6946 Td
(1543 //  {) 52.2133 Tj
-5.2213 -446.1879 Td
(1544 //    int_enabled = 0;) 140.976 Tj
-5.2213 -455.6813 Td
(1545     cli\(\);) 78.32 Tj
-5.2213 -465.1747 Td
(1546 //    cprintf\("!D"\);) 130.5333 Tj
-5.2213 -474.668 Td
(1547 // }) 46.992 Tj
-5.2213 -484.1614 Td
(1548   cpus[cpu\(\)].nlock++;) 140.976 Tj
-5.2213 -493.6547 Td
(1549   cpus[cpu\(\)].locks[cpus[cpu\(\)].nlock] = lock;) 266.2879 Tj
-5.2213 -522.1348 Td
(Sheet 15) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/spinlock.c  Page 2) 203.6319 Tj
-5.2213 -28.4801 Td
(1550   while\(cmpxchg\(0, 1, &lock->locked\) == 1\)) 245.4026 Tj
-5.2213 -37.9735 Td
(1551     ;) 52.2133 Tj
-5.2213 -47.4668 Td
(1552 ) 26.1067 Tj
-5.2213 -56.9602 Td
(1553   // Serialize instructions: now that lock is acquired, ma\
ke sure) 365.4932 Tj
-5.2213 -66.4535 Td
(1554   // we wait for all pending writes from other processors.) 328.9439 Tj
-5.2213 -75.9469 Td
(1555   cpuid\(0, 0, 0, 0, 0\);  // memory barrier \(see Ch 7, I\
A-32 manual vol 3\)) 407.2639 Tj
-5.2213 -85.4403 Td
(1556 ) 26.1067 Tj
-5.2213 -94.9336 Td
(1557   // Record info about lock acquisition for debugging.) 308.0586 Tj
-5.2213 -104.427 Td
(1558   // The +10 is only so that we can tell the difference) 313.2799 Tj
-5.2213 -113.9203 Td
(1559   // between forgetting to initialize lock->cpu) 271.5093 Tj
-5.2213 -123.4137 Td
(1560   // and holding a lock on cpu 0.) 198.4106 Tj
-5.2213 -132.9071 Td
(1561   lock->cpu = cpu\(\) + 10;) 156.64 Tj
-5.2213 -142.4004 Td
(1562   getcallerpcs\(&lock, lock->pcs\);) 198.4106 Tj
-5.2213 -151.8938 Td
(1563 }) 31.328 Tj
-5.2213 -161.3871 Td
(1564 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1565 // Release the lock.) 130.5333 Tj
-5.2213 -180.3739 Td
(1566 void) 46.992 Tj
-5.2213 -189.8672 Td
(1567 release\(struct spinlock *lock\)) 182.7466 Tj
-5.2213 -199.3606 Td
(1568 {) 31.328 Tj
-5.2213 -208.8539 Td
(1569   if\(!holding\(lock\)\)) 130.5333 Tj
-5.2213 -218.3473 Td
(1570     panic\("release"\);) 135.7546 Tj
-5.2213 -227.8407 Td
(1571 ) 26.1067 Tj
-5.2213 -237.334 Td
(1572   lock->pcs[0] = 0;) 125.312 Tj
-5.2213 -246.8274 Td
(1573   lock->cpu = 0xffffffff;) 156.64 Tj
-5.2213 -256.3207 Td
(1574 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1575   // Serialize instructions: before unlocking the lock, ma\
ke sure) 365.4932 Tj
-5.2213 -275.3075 Td
(1576   // to flush any pending memory writes from this processo\
r.) 339.3866 Tj
-5.2213 -284.8008 Td
(1577   cpuid\(0, 0, 0, 0, 0\);  // memory barrier \(see Ch 7, I\
A-32 manual vol 3\)) 407.2639 Tj
-5.2213 -294.2942 Td
(1578 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1579   if \(int_enabled\)) 120.0906 Tj
-5.2213 -313.2809 Td
(1580       panic\("release when interrupts enabled"\);) 271.5093 Tj
-5.2213 -322.7743 Td
(1581   lock->locked = 0;) 125.312 Tj
-5.2213 -332.2676 Td
(1582   if\(--cpus[cpu\(\)].nlock == 0\)) 182.7466 Tj
-5.2213 -341.761 Td
(1583   {) 41.7707 Tj
-5.2213 -351.2543 Td
(1584 //      int_enabled = 1;) 151.4186 Tj
-5.2213 -360.7477 Td
(1585     sti\(\);) 78.32 Tj
-5.2213 -370.2411 Td
(1586  //   cprintf\("!E"\);) 130.5333 Tj
-5.2213 -379.7344 Td
(1587   }) 41.7707 Tj
-5.2213 -389.2278 Td
(1588 }) 31.328 Tj
-5.2213 -398.7211 Td
(1589 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1590 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1591 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1592 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1593 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1594 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1595 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1596 ) 26.1067 Tj
-5.2213 -474.668 Td
(1597 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1598 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1599 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 15) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 25 25
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/spinlock.c  Page 3) 203.6319 Tj
-5.2213 -28.4801 Td
(1600 // Record the current call stack in pcs[] by following the\
 %ebp chain.) 391.5999 Tj
-5.2213 -37.9735 Td
(1601 void) 46.992 Tj
-5.2213 -47.4668 Td
(1602 getcallerpcs\(void *v, uint pcs[]\)) 198.4106 Tj
-5.2213 -56.9602 Td
(1603 {) 31.328 Tj
-5.2213 -66.4535 Td
(1604   uint *ebp;) 88.7626 Tj
-5.2213 -75.9469 Td
(1605   int i;) 67.8773 Tj
-5.2213 -85.4403 Td
(1606 ) 26.1067 Tj
-5.2213 -94.9336 Td
(1607   ebp = \(uint*\)v - 2;) 135.7546 Tj
-5.2213 -104.427 Td
(1608   for\(i = 0; i < 10; i++\){) 161.8613 Tj
-5.2213 -113.9203 Td
(1609     if\(ebp == 0 || ebp == \(uint*\)0xffffffff\)) 255.8453 Tj
-5.2213 -123.4137 Td
(1610       break;) 88.7626 Tj
-5.2213 -132.9071 Td
(1611     pcs[i] = ebp[1];     // saved %eip) 224.5173 Tj
-5.2213 -142.4004 Td
(1612     ebp = \(uint*\)ebp[0]; // saved %ebp) 224.5173 Tj
-5.2213 -151.8938 Td
(1613   }) 41.7707 Tj
-5.2213 -161.3871 Td
(1614   for\(; i < 10; i++\)) 130.5333 Tj
-5.2213 -170.8805 Td
(1615     pcs[i] = 0;) 104.4266 Tj
-5.2213 -180.3739 Td
(1616 }) 31.328 Tj
-5.2213 -189.8672 Td
(1617 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1618 // Check whether this cpu is holding the lock.) 266.2879 Tj
-5.2213 -208.8539 Td
(1619 int) 41.7707 Tj
-5.2213 -218.3473 Td
(1620 holding\(struct spinlock *lock\)) 182.7466 Tj
-5.2213 -227.8407 Td
(1621 {) 31.328 Tj
-5.2213 -237.334 Td
(1622   return lock->locked && lock->cpu == cpu\(\) + 10;) 281.9519 Tj
-5.2213 -246.8274 Td
(1623 }) 31.328 Tj
-5.2213 -256.3207 Td
(1624 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1625 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1626 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1627 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1628 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1629 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1630 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1631 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1632 ) 26.1067 Tj
-5.2213 -341.761 Td
(1633 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1634 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1635 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1636 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1637 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1638 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1639 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1640 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1641 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1642 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1643 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1644 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1645 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1646 ) 26.1067 Tj
-5.2213 -474.668 Td
(1647 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1648 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1649 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 16) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sem.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(1650 #ifndef XV6_SEM_H_) 120.0906 Tj
-5.2213 -37.9735 Td
(1651 #define XV6_SEM_H_) 120.0906 Tj
-5.2213 -47.4668 Td
(1652 ) 26.1067 Tj
-5.2213 -56.9602 Td
(1653 struct sem;) 83.5413 Tj
-5.2213 -66.4535 Td
(1654 typedef struct sem sem_t;) 156.64 Tj
-5.2213 -75.9469 Td
(1655 ) 26.1067 Tj
-5.2213 -85.4403 Td
(1656 int sem_init\(sem_t *sem, unsigned int value\);) 261.0666 Tj
-5.2213 -94.9336 Td
(1657 int sem_destroy\(sem_t *sem\);) 172.304 Tj
-5.2213 -104.427 Td
(1658 void sem_post\(sem_t *sem\);) 161.8613 Tj
-5.2213 -113.9203 Td
(1659 void sem_wait\(sem_t *sem\);) 161.8613 Tj
-5.2213 -123.4137 Td
(1660 int sem_timedwait\(sem_t *sem, int timo\);) 234.9599 Tj
-5.2213 -132.9071 Td
(1661 int sem_trywait\(sem_t *sem\);) 172.304 Tj
-5.2213 -142.4004 Td
(1662 int sem_value\(sem_t *sem\);) 161.8613 Tj
-5.2213 -151.8938 Td
(1663 int sem_size\(\);) 104.4266 Tj
-5.2213 -161.3871 Td
(1664 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1665 #endif // XV6_SEM_H_) 130.5333 Tj
-5.2213 -180.3739 Td
(1666 ) 26.1067 Tj
-5.2213 -189.8672 Td
(1667 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1668 ) 26.1067 Tj
-5.2213 -208.8539 Td
(1669 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1670 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1671 ) 26.1067 Tj
-5.2213 -237.334 Td
(1672 ) 26.1067 Tj
-5.2213 -246.8274 Td
(1673 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1674 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1675 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1676 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1677 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1678 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1679 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1680 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1681 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1682 ) 26.1067 Tj
-5.2213 -341.761 Td
(1683 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1684 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1685 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1686 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1687 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1688 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1689 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1690 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1691 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1692 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1693 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1694 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1695 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1696 ) 26.1067 Tj
-5.2213 -474.668 Td
(1697 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1698 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1699 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 16) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 26 26
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sem.c  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(1700 #include "assert.h") 125.312 Tj
-5.2213 -37.9735 Td
(1701 #include "types.h") 120.0906 Tj
-5.2213 -47.4668 Td
(1702 #include "spinlock.h") 135.7546 Tj
-5.2213 -56.9602 Td
(1703 #include "defs.h") 114.8693 Tj
-5.2213 -66.4535 Td
(1704 #include "sem.h") 109.648 Tj
-5.2213 -75.9469 Td
(1705 ) 26.1067 Tj
-5.2213 -85.4403 Td
(1706 struct sem {) 88.7626 Tj
-5.2213 -94.9336 Td
(1707     struct spinlock lock;) 156.64 Tj
-5.2213 -104.427 Td
(1708     int val;) 88.7626 Tj
-5.2213 -113.9203 Td
(1709     int waiters;) 109.648 Tj
-5.2213 -123.4137 Td
(1710 };) 36.5493 Tj
-5.2213 -132.9071 Td
(1711 ) 26.1067 Tj
-5.2213 -142.4004 Td
(1712 int sem_init\(sem_t *sem, unsigned int value\)) 255.8453 Tj
-5.2213 -151.8938 Td
(1713 {) 31.328 Tj
-5.2213 -161.3871 Td
(1714     assert\(value >= 0\);) 146.1973 Tj
-5.2213 -170.8805 Td
(1715     initlock\(&sem->lock, "sem lock"\);) 219.2959 Tj
-5.2213 -180.3739 Td
(1716     sem->val = value;) 135.7546 Tj
-5.2213 -189.8672 Td
(1717     sem->waiters = 0;) 135.7546 Tj
-5.2213 -199.3606 Td
(1718     return 0;) 93.984 Tj
-5.2213 -208.8539 Td
(1719 }) 31.328 Tj
-5.2213 -218.3473 Td
(1720 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1721 int sem_destroy\(sem_t *sem\)) 167.0826 Tj
-5.2213 -237.334 Td
(1722 {) 31.328 Tj
-5.2213 -246.8274 Td
(1723     assert\(sem->waiters == 0\);) 182.7466 Tj
-5.2213 -256.3207 Td
(1724     return 0;) 93.984 Tj
-5.2213 -265.8141 Td
(1725 }) 31.328 Tj
-5.2213 -275.3075 Td
(1726 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1727 void sem_post\(sem_t *sem\)) 156.64 Tj
-5.2213 -294.2942 Td
(1728 {) 31.328 Tj
-5.2213 -303.7875 Td
(1729     acquire\(&sem->lock\);) 151.4186 Tj
-5.2213 -313.2809 Td
(1730     sem->val++;) 104.4266 Tj
-5.2213 -322.7743 Td
(1731     if \(\(sem->waiters\) && \(sem->val > 0\)\)) 240.1813 Tj
-5.2213 -332.2676 Td
(1732     {) 52.2133 Tj
-5.2213 -341.761 Td
(1733         wakeup_one\(sem\); // XXX maybe wakeup?) 261.0666 Tj
-5.2213 -351.2543 Td
(1734     }) 52.2133 Tj
-5.2213 -360.7477 Td
(1735     release\(&sem->lock\);) 151.4186 Tj
-5.2213 -370.2411 Td
(1736 }) 31.328 Tj
-5.2213 -379.7344 Td
(1737 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1738 void sem_wait\(sem_t *sem\)) 156.64 Tj
-5.2213 -398.7211 Td
(1739 {) 31.328 Tj
-5.2213 -408.2145 Td
(1740     acquire\(&sem->lock\);) 151.4186 Tj
-5.2213 -417.7079 Td
(1741     while \(sem->val == 0\)) 156.64 Tj
-5.2213 -427.2012 Td
(1742     {) 52.2133 Tj
-5.2213 -436.6946 Td
(1743         sem->waiters++;) 146.1973 Tj
-5.2213 -446.1879 Td
(1744         sleep\(sem, &sem->lock\);) 187.968 Tj
-5.2213 -455.6813 Td
(1745         sem->waiters--;) 146.1973 Tj
-5.2213 -465.1747 Td
(1746     }) 52.2133 Tj
-5.2213 -474.668 Td
(1747     sem->val--;) 104.4266 Tj
-5.2213 -484.1614 Td
(1748     release\(&sem->lock\);) 151.4186 Tj
-5.2213 -493.6547 Td
(1749 }) 31.328 Tj
-5.2213 -522.1348 Td
(Sheet 17) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sem.c  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(1750 int sem_timedwait\(sem_t *sem, int timo\)) 229.7386 Tj
-5.2213 -37.9735 Td
(1751 {) 31.328 Tj
-5.2213 -47.4668 Td
(1752     int ret;) 88.7626 Tj
-5.2213 -56.9602 Td
(1753 ) 26.1067 Tj
-5.2213 -66.4535 Td
(1754     acquire\(&sem->lock\);) 151.4186 Tj
-5.2213 -75.9469 Td
(1755     for \(ret = 0; sem->val == 0 && ret == 0;\)) 261.0666 Tj
-5.2213 -85.4403 Td
(1756     {) 52.2133 Tj
-5.2213 -94.9336 Td
(1757         sem->waiters++;) 146.1973 Tj
-5.2213 -104.427 Td
(1758         ret = msleep_spin\(sem, &sem->lock, timo\);) 281.9519 Tj
-5.2213 -113.9203 Td
(1759         sem->waiters--;) 146.1973 Tj
-5.2213 -123.4137 Td
(1760     }) 52.2133 Tj
-5.2213 -132.9071 Td
(1761     if \(sem->val > 0\)) 135.7546 Tj
-5.2213 -142.4004 Td
(1762     {) 52.2133 Tj
-5.2213 -151.8938 Td
(1763         sem->val--;) 125.312 Tj
-5.2213 -161.3871 Td
(1764         ret = 0;) 109.648 Tj
-5.2213 -170.8805 Td
(1765     }) 52.2133 Tj
-5.2213 -180.3739 Td
(1766     release\(&sem->lock\);) 151.4186 Tj
-5.2213 -189.8672 Td
(1767 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1768     return ret;) 104.4266 Tj
-5.2213 -208.8539 Td
(1769 }) 31.328 Tj
-5.2213 -218.3473 Td
(1770 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1771 int sem_trywait\(sem_t *sem\)) 167.0826 Tj
-5.2213 -237.334 Td
(1772 {) 31.328 Tj
-5.2213 -246.8274 Td
(1773     int ret;) 88.7626 Tj
-5.2213 -256.3207 Td
(1774 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1775     acquire\(&sem->lock\);) 151.4186 Tj
-5.2213 -275.3075 Td
(1776     if \(sem->val > 0\)) 135.7546 Tj
-5.2213 -284.8008 Td
(1777     {) 52.2133 Tj
-5.2213 -294.2942 Td
(1778         sem->val--;) 125.312 Tj
-5.2213 -303.7875 Td
(1779         ret = 1;) 109.648 Tj
-5.2213 -313.2809 Td
(1780     } else {) 88.7626 Tj
-5.2213 -322.7743 Td
(1781         ret = 0;) 109.648 Tj
-5.2213 -332.2676 Td
(1782     }) 52.2133 Tj
-5.2213 -341.761 Td
(1783     release\(&sem->lock\);) 151.4186 Tj
-5.2213 -351.2543 Td
(1784     return ret;) 104.4266 Tj
-5.2213 -360.7477 Td
(1785 }) 31.328 Tj
-5.2213 -370.2411 Td
(1786 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1787 int sem_value\(sem_t *sem\)) 156.64 Tj
-5.2213 -389.2278 Td
(1788 {) 31.328 Tj
-5.2213 -398.7211 Td
(1789     int ret;) 88.7626 Tj
-5.2213 -408.2145 Td
(1790 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1791     acquire\(&sem->lock\);) 151.4186 Tj
-5.2213 -427.2012 Td
(1792     ret = sem->val;) 125.312 Tj
-5.2213 -436.6946 Td
(1793     release\(&sem->lock\);) 151.4186 Tj
-5.2213 -446.1879 Td
(1794     return ret;) 104.4266 Tj
-5.2213 -455.6813 Td
(1795 }) 31.328 Tj
-5.2213 -465.1747 Td
(1796 ) 26.1067 Tj
-5.2213 -474.668 Td
(1797 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1798 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 17) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 27 27
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sem.c  Page 3) 177.5253 Tj
-5.2213 -28.4801 Td
(1800 int sem_size\(\)) 99.2053 Tj
-5.2213 -37.9735 Td
(1801 {) 31.328 Tj
-5.2213 -47.4668 Td
(1802     return sizeof\(struct sem\);) 182.7466 Tj
-5.2213 -56.9602 Td
(1803 }) 31.328 Tj
-5.2213 -66.4535 Td
(1804 ) 26.1067 Tj
-5.2213 -75.9469 Td
(1805 ) 26.1067 Tj
-5.2213 -85.4403 Td
(1806 ) 26.1067 Tj
-5.2213 -94.9336 Td
(1807 ) 26.1067 Tj
-5.2213 -104.427 Td
(1808 ) 26.1067 Tj
-5.2213 -113.9203 Td
(1809 ) 26.1067 Tj
-5.2213 -123.4137 Td
(1810 ) 26.1067 Tj
-5.2213 -132.9071 Td
(1811 ) 26.1067 Tj
-5.2213 -142.4004 Td
(1812 ) 26.1067 Tj
-5.2213 -151.8938 Td
(1813 ) 26.1067 Tj
-5.2213 -161.3871 Td
(1814 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1815 ) 26.1067 Tj
-5.2213 -180.3739 Td
(1816 ) 26.1067 Tj
-5.2213 -189.8672 Td
(1817 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1818 ) 26.1067 Tj
-5.2213 -208.8539 Td
(1819 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1820 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1821 ) 26.1067 Tj
-5.2213 -237.334 Td
(1822 ) 26.1067 Tj
-5.2213 -246.8274 Td
(1823 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1824 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1825 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1826 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1827 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1828 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1829 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1830 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1831 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1832 ) 26.1067 Tj
-5.2213 -341.761 Td
(1833 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1834 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1835 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1836 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1837 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1838 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1839 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1840 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1841 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1842 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1843 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1844 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1845 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1846 ) 26.1067 Tj
-5.2213 -474.668 Td
(1847 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1848 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1849 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 18) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/assert.h  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(1850 #ifndef XV6_ASSERT_H_) 135.7546 Tj
-5.2213 -37.9735 Td
(1851 #define XV6_ASSERT_H_) 135.7546 Tj
-5.2213 -47.4668 Td
(1852 ) 26.1067 Tj
-5.2213 -56.9602 Td
(1853 #define assert\(expr\) \\) 140.976 Tj
-5.2213 -66.4535 Td
(1854     \(\(expr\) ? \(void\)0 : __assert\(__func__, __FILE__,\
 \\) 308.0586 Tj
-5.2213 -75.9469 Td
(1855         __LINE__, #expr\)\)) 156.64 Tj
-5.2213 -85.4403 Td
(1856 ) 26.1067 Tj
-5.2213 -94.9336 Td
(1857 void __assert\(const char *, const char *, int, const char\
 *\);) 344.6079 Tj
-5.2213 -104.427 Td
(1858 ) 26.1067 Tj
-5.2213 -113.9203 Td
(1859 #endif // XV6_ASSERT_H_) 146.1973 Tj
-5.2213 -123.4137 Td
(1860 ) 26.1067 Tj
-5.2213 -132.9071 Td
(1861 ) 26.1067 Tj
-5.2213 -142.4004 Td
(1862 ) 26.1067 Tj
-5.2213 -151.8938 Td
(1863 ) 26.1067 Tj
-5.2213 -161.3871 Td
(1864 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1865 ) 26.1067 Tj
-5.2213 -180.3739 Td
(1866 ) 26.1067 Tj
-5.2213 -189.8672 Td
(1867 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1868 ) 26.1067 Tj
-5.2213 -208.8539 Td
(1869 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1870 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1871 ) 26.1067 Tj
-5.2213 -237.334 Td
(1872 ) 26.1067 Tj
-5.2213 -246.8274 Td
(1873 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1874 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1875 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1876 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1877 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1878 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1879 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1880 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1881 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1882 ) 26.1067 Tj
-5.2213 -341.761 Td
(1883 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1884 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1885 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1886 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1887 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1888 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1889 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1890 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1891 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1892 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1893 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1894 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1895 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1896 ) 26.1067 Tj
-5.2213 -474.668 Td
(1897 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1898 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 18) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 28 28
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/assert.c  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(1900 #include "assert.h") 125.312 Tj
-5.2213 -37.9735 Td
(1901 #include "types.h") 120.0906 Tj
-5.2213 -47.4668 Td
(1902 #include "defs.h") 114.8693 Tj
-5.2213 -56.9602 Td
(1903 ) 26.1067 Tj
-5.2213 -66.4535 Td
(1904 void __assert\(const char *func, const char *file,) 281.9519 Tj
-5.2213 -75.9469 Td
(1905         int line, const char *expr\)) 208.8533 Tj
-5.2213 -85.4403 Td
(1906 {) 31.328 Tj
-5.2213 -94.9336 Td
(1907     cprintf\("assert failed: %s at %s:%d, expression %s\\n\
",) 328.9439 Tj
-5.2213 -104.427 Td
(1908             func, file, line, expr\);) 214.0746 Tj
-5.2213 -113.9203 Td
(1909 }) 31.328 Tj
-5.2213 -123.4137 Td
(1910 ) 26.1067 Tj
-5.2213 -132.9071 Td
(1911 ) 26.1067 Tj
-5.2213 -142.4004 Td
(1912 ) 26.1067 Tj
-5.2213 -151.8938 Td
(1913 ) 26.1067 Tj
-5.2213 -161.3871 Td
(1914 ) 26.1067 Tj
-5.2213 -170.8805 Td
(1915 ) 26.1067 Tj
-5.2213 -180.3739 Td
(1916 ) 26.1067 Tj
-5.2213 -189.8672 Td
(1917 ) 26.1067 Tj
-5.2213 -199.3606 Td
(1918 ) 26.1067 Tj
-5.2213 -208.8539 Td
(1919 ) 26.1067 Tj
-5.2213 -218.3473 Td
(1920 ) 26.1067 Tj
-5.2213 -227.8407 Td
(1921 ) 26.1067 Tj
-5.2213 -237.334 Td
(1922 ) 26.1067 Tj
-5.2213 -246.8274 Td
(1923 ) 26.1067 Tj
-5.2213 -256.3207 Td
(1924 ) 26.1067 Tj
-5.2213 -265.8141 Td
(1925 ) 26.1067 Tj
-5.2213 -275.3075 Td
(1926 ) 26.1067 Tj
-5.2213 -284.8008 Td
(1927 ) 26.1067 Tj
-5.2213 -294.2942 Td
(1928 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1929 ) 26.1067 Tj
-5.2213 -313.2809 Td
(1930 ) 26.1067 Tj
-5.2213 -322.7743 Td
(1931 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1932 ) 26.1067 Tj
-5.2213 -341.761 Td
(1933 ) 26.1067 Tj
-5.2213 -351.2543 Td
(1934 ) 26.1067 Tj
-5.2213 -360.7477 Td
(1935 ) 26.1067 Tj
-5.2213 -370.2411 Td
(1936 ) 26.1067 Tj
-5.2213 -379.7344 Td
(1937 ) 26.1067 Tj
-5.2213 -389.2278 Td
(1938 ) 26.1067 Tj
-5.2213 -398.7211 Td
(1939 ) 26.1067 Tj
-5.2213 -408.2145 Td
(1940 ) 26.1067 Tj
-5.2213 -417.7079 Td
(1941 ) 26.1067 Tj
-5.2213 -427.2012 Td
(1942 ) 26.1067 Tj
-5.2213 -436.6946 Td
(1943 ) 26.1067 Tj
-5.2213 -446.1879 Td
(1944 ) 26.1067 Tj
-5.2213 -455.6813 Td
(1945 ) 26.1067 Tj
-5.2213 -465.1747 Td
(1946 ) 26.1067 Tj
-5.2213 -474.668 Td
(1947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(1948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(1949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 19) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.h  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(1950 #include "spinlock.h") 135.7546 Tj
-5.2213 -37.9735 Td
(1951 #include "param.h") 120.0906 Tj
-5.2213 -47.4668 Td
(1952 #include "mmu.h") 109.648 Tj
-5.2213 -56.9602 Td
(1953 // Segments in proc->gdt) 151.4186 Tj
-5.2213 -66.4535 Td
(1954 #define SEG_KCODE 1  // kernel code) 208.8533 Tj
-5.2213 -75.9469 Td
(1955 #define SEG_KDATA 2  // kernel data+stack) 240.1813 Tj
-5.2213 -85.4403 Td
(1956 #define SEG_UCODE 3) 125.312 Tj
-5.2213 -94.9336 Td
(1957 #define SEG_UDATA 4) 125.312 Tj
-5.2213 -104.427 Td
(1958 #define SEG_TSS   5  // this process's task state) 281.9519 Tj
-5.2213 -113.9203 Td
(1959 #define NSEGS     6) 125.312 Tj
-5.2213 -123.4137 Td
(1960 ) 26.1067 Tj
-5.2213 -132.9071 Td
(1961 // Saved registers for kernel context switches.) 271.5093 Tj
-5.2213 -142.4004 Td
(1962 // Don't need to save all the %fs etc. segment registers,) 323.7226 Tj
-5.2213 -151.8938 Td
(1963 // because they are constant across kernel contexts.) 297.6159 Tj
-5.2213 -161.3871 Td
(1964 // Save all the regular registers so we don't need to care) 328.9439 Tj
-5.2213 -170.8805 Td
(1965 // which are caller save, but not the return register %eax\
.) 334.1652 Tj
-5.2213 -180.3739 Td
(1966 // \(Not saving %eax just simplifies the switching code.\)) 318.5013 Tj
-5.2213 -189.8672 Td
(1967 // The layout of context must match code in swtch.S.) 297.6159 Tj
-5.2213 -199.3606 Td
(1968 struct context {) 109.648 Tj
-5.2213 -208.8539 Td
(1969   int eip;) 78.32 Tj
-5.2213 -218.3473 Td
(1970   int esp;) 78.32 Tj
-5.2213 -227.8407 Td
(1971   int ebx;) 78.32 Tj
-5.2213 -237.334 Td
(1972   int ecx;) 78.32 Tj
-5.2213 -246.8274 Td
(1973   int edx;) 78.32 Tj
-5.2213 -256.3207 Td
(1974   int esi;) 78.32 Tj
-5.2213 -265.8141 Td
(1975   int edi;) 78.32 Tj
-5.2213 -275.3075 Td
(1976   int ebp;) 78.32 Tj
-5.2213 -284.8008 Td
(1977 };) 36.5493 Tj
-5.2213 -294.2942 Td
(1978 ) 26.1067 Tj
-5.2213 -303.7875 Td
(1979 enum proc_state { UNUSED, EMBRYO, SLEEPING, RUNNABLE,) 302.8373 Tj
-5.2213 -313.2809 Td
(1980     RUNNING, ZOMBIE, MSLEEPING};) 193.1893 Tj
-5.2213 -322.7743 Td
(1981 ) 26.1067 Tj
-5.2213 -332.2676 Td
(1982 // Per-process state) 130.5333 Tj
-5.2213 -341.761 Td
(1983 struct proc {) 93.984 Tj
-5.2213 -351.2543 Td
(1984   char *mem;                // Start of process memory \(k\
ernel address\)) 396.8212 Tj
-5.2213 -360.7477 Td
(1985   uint sz;                  // Size of process memory \(by\
tes\)) 344.6079 Tj
-5.2213 -370.2411 Td
(1986   char *kstack;             // Bottom of kernel stack for \
this process) 391.5999 Tj
-5.2213 -379.7344 Td
(1987   enum proc_state state;    // Process state) 255.8453 Tj
-5.2213 -389.2278 Td
(1988   int pid;                  // Process ID) 240.1813 Tj
-5.2213 -398.7211 Td
(1989   struct proc *parent;      // Parent process) 261.0666 Tj
-5.2213 -408.2145 Td
(1990   void *chan;               // If non-zero, sleeping on ch\
an) 339.3866 Tj
-5.2213 -417.7079 Td
(1991   int killed;               // If non-zero, have been kill\
ed) 339.3866 Tj
-5.2213 -427.2012 Td
(1992   struct file *ofile[NOFILE];  // Open files) 255.8453 Tj
-5.2213 -436.6946 Td
(1993   struct inode *cwd;        // Current directory) 276.7306 Tj
-5.2213 -446.1879 Td
(1994   struct context context;   // Switch here to run process) 323.7226 Tj
-5.2213 -455.6813 Td
(1995   struct trapframe *tf;     // Trap frame for current inte\
rrupt) 355.0506 Tj
-5.2213 -465.1747 Td
(1996   char name[32];            // Process name \(debugging\)) 313.2799 Tj
-5.2213 -474.668 Td
(1997   struct thread *thr;) 135.7546 Tj
-5.2213 -484.1614 Td
(1998 };) 36.5493 Tj
-5.2213 -493.6547 Td
(1999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 19) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 29 29
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.h  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(2000 // Process memory is laid out contiguously, low addresses \
first:) 360.2719 Tj
-5.2213 -37.9735 Td
(2001 //   text) 73.0986 Tj
-5.2213 -47.4668 Td
(2002 //   original data and bss) 161.8613 Tj
-5.2213 -56.9602 Td
(2003 //   fixed-size stack) 135.7546 Tj
-5.2213 -66.4535 Td
(2004 //   expandable heap) 130.5333 Tj
-5.2213 -75.9469 Td
(2005 ) 26.1067 Tj
-5.2213 -85.4403 Td
(2006 // Arrange that cp point to the struct proc that this) 302.8373 Tj
-5.2213 -94.9336 Td
(2007 // CPU is currently running.  Such preprocessor) 271.5093 Tj
-5.2213 -104.427 Td
(2008 // subterfuge can be confusing, but saves a lot of typing.) 328.9439 Tj
-5.2213 -113.9203 Td
(2009 extern struct proc *curproc[NCPU];  // Current \(running\)\
 process per CPU) 402.0426 Tj
-5.2213 -123.4137 Td
(2010 #define cp \(curproc[cpu\(\)]\)  // Current process on thi\
s CPU) 334.1652 Tj
-5.2213 -132.9071 Td
(2011 ) 26.1067 Tj
-5.2213 -142.4004 Td
(2012 ) 26.1067 Tj
-5.2213 -151.8938 Td
(2013 #define MPSTACK 4096) 130.5333 Tj
-5.2213 -161.3871 Td
(2014 ) 26.1067 Tj
-5.2213 -170.8805 Td
(2015 // Per-CPU state) 109.648 Tj
-5.2213 -180.3739 Td
(2016 struct cpu {) 88.7626 Tj
-5.2213 -189.8672 Td
(2017   uchar apicid;               // Local APIC ID) 266.2879 Tj
-5.2213 -199.3606 Td
(2018   struct context context;     // Switch here to enter sche\
duler) 355.0506 Tj
-5.2213 -208.8539 Td
(2019   struct taskstate ts;        // Used by x86 to find stack\
 for interrupt) 402.0426 Tj
-5.2213 -218.3473 Td
(2020   struct segdesc gdt[NSEGS];  // x86 global descriptor tab\
le) 339.3866 Tj
-5.2213 -227.8407 Td
(2021   char mpstack[MPSTACK];      // Per-CPU startup stack) 308.0586 Tj
-5.2213 -237.334 Td
(2022   volatile int booted;        // Has the CPU started?) 302.8373 Tj
-5.2213 -246.8274 Td
(2023   int nlock;                  // Number of locks currently\
 held) 355.0506 Tj
-5.2213 -256.3207 Td
(2024 #define MAX_LOCKS   10) 140.976 Tj
-5.2213 -265.8141 Td
(2025   struct spinlock *locks[MAX_LOCKS];) 214.0746 Tj
-5.2213 -275.3075 Td
(2026 };) 36.5493 Tj
-5.2213 -284.8008 Td
(2027 ) 26.1067 Tj
-5.2213 -294.2942 Td
(2028 extern struct cpu cpus[NCPU];) 177.5253 Tj
-5.2213 -303.7875 Td
(2029 extern int ncpu;) 109.648 Tj
-5.2213 -313.2809 Td
(2030 extern struct spinlock proc_table_lock;) 229.7386 Tj
-5.2213 -322.7743 Td
(2031 ) 26.1067 Tj
-5.2213 -332.2676 Td
(2032 ) 26.1067 Tj
-5.2213 -341.761 Td
(2033 ) 26.1067 Tj
-5.2213 -351.2543 Td
(2034 ) 26.1067 Tj
-5.2213 -360.7477 Td
(2035 ) 26.1067 Tj
-5.2213 -370.2411 Td
(2036 ) 26.1067 Tj
-5.2213 -379.7344 Td
(2037 ) 26.1067 Tj
-5.2213 -389.2278 Td
(2038 ) 26.1067 Tj
-5.2213 -398.7211 Td
(2039 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2040 ) 26.1067 Tj
-5.2213 -417.7079 Td
(2041 ) 26.1067 Tj
-5.2213 -427.2012 Td
(2042 ) 26.1067 Tj
-5.2213 -436.6946 Td
(2043 ) 26.1067 Tj
-5.2213 -446.1879 Td
(2044 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2045 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2046 ) 26.1067 Tj
-5.2213 -474.668 Td
(2047 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 20) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(2050 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(2051 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(2052 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(2053 #include "mmu.h") 109.648 Tj
-5.2213 -66.4535 Td
(2054 #include "x86.h") 109.648 Tj
-5.2213 -75.9469 Td
(2055 #include "proc.h") 114.8693 Tj
-5.2213 -85.4403 Td
(2056 #include "spinlock.h") 135.7546 Tj
-5.2213 -94.9336 Td
(2057 #include "thread.h") 125.312 Tj
-5.2213 -104.427 Td
(2058 ) 26.1067 Tj
-5.2213 -113.9203 Td
(2059 struct spinlock proc_table_lock;) 193.1893 Tj
-5.2213 -123.4137 Td
(2060 ) 26.1067 Tj
-5.2213 -132.9071 Td
(2061 struct proc proc[NPROC];) 151.4186 Tj
-5.2213 -142.4004 Td
(2062 struct proc *curproc[NCPU];) 167.0826 Tj
-5.2213 -151.8938 Td
(2063 struct proc *initproc;) 140.976 Tj
-5.2213 -161.3871 Td
(2064 ) 26.1067 Tj
-5.2213 -170.8805 Td
(2065 int nextpid = 1;) 109.648 Tj
-5.2213 -180.3739 Td
(2066 extern void forkret\(void\);) 161.8613 Tj
-5.2213 -189.8672 Td
(2067 extern void forkret1\(struct trapframe*\);) 234.9599 Tj
-5.2213 -199.3606 Td
(2068 ) 26.1067 Tj
-5.2213 -208.8539 Td
(2069 void) 46.992 Tj
-5.2213 -218.3473 Td
(2070 pinit\(void\)) 83.5413 Tj
-5.2213 -227.8407 Td
(2071 {) 31.328 Tj
-5.2213 -237.334 Td
(2072   initlock\(&proc_table_lock, "proc_table"\);) 250.6239 Tj
-5.2213 -246.8274 Td
(2073 }) 31.328 Tj
-5.2213 -256.3207 Td
(2074 ) 26.1067 Tj
-5.2213 -265.8141 Td
(2075 // Look in the process table for an UNUSED proc.) 276.7306 Tj
-5.2213 -275.3075 Td
(2076 // If found, change state to EMBRYO and return it.) 287.1733 Tj
-5.2213 -284.8008 Td
(2077 // Otherwise return 0.) 140.976 Tj
-5.2213 -294.2942 Td
(2078 struct proc*) 88.7626 Tj
-5.2213 -303.7875 Td
(2079 allocproc\(void\)) 104.4266 Tj
-5.2213 -313.2809 Td
(2080 {) 31.328 Tj
-5.2213 -322.7743 Td
(2081   int i;) 67.8773 Tj
-5.2213 -332.2676 Td
(2082   struct proc *p;) 114.8693 Tj
-5.2213 -341.761 Td
(2083 ) 26.1067 Tj
-5.2213 -351.2543 Td
(2084   acquire\(&proc_table_lock\);) 172.304 Tj
-5.2213 -360.7477 Td
(2085   for\(i = 0; i < NPROC; i++\){) 177.5253 Tj
-5.2213 -370.2411 Td
(2086     p = &proc[i];) 114.8693 Tj
-5.2213 -379.7344 Td
(2087     if\(p->state == UNUSED\){) 167.0826 Tj
-5.2213 -389.2278 Td
(2088       p->state = EMBRYO;) 151.4186 Tj
-5.2213 -398.7211 Td
(2089       p->pid = nextpid++;) 156.64 Tj
-5.2213 -408.2145 Td
(2090       p->thr = 0;) 114.8693 Tj
-5.2213 -417.7079 Td
(2091       release\(&proc_table_lock\);) 193.1893 Tj
-5.2213 -427.2012 Td
(2092       return p;) 104.4266 Tj
-5.2213 -436.6946 Td
(2093     }) 52.2133 Tj
-5.2213 -446.1879 Td
(2094   }) 41.7707 Tj
-5.2213 -455.6813 Td
(2095   release\(&proc_table_lock\);) 172.304 Tj
-5.2213 -465.1747 Td
(2096   return 0;) 83.5413 Tj
-5.2213 -474.668 Td
(2097 }) 31.328 Tj
-5.2213 -484.1614 Td
(2098 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2099 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 20) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 30 30
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(2100 // Grow current process's memory by n bytes.) 255.8453 Tj
-5.2213 -37.9735 Td
(2101 // Return old size on success, -1 on failure.) 261.0666 Tj
-5.2213 -47.4668 Td
(2102 int) 41.7707 Tj
-5.2213 -56.9602 Td
(2103 growproc\(int n\)) 104.4266 Tj
-5.2213 -66.4535 Td
(2104 {) 31.328 Tj
-5.2213 -75.9469 Td
(2105   char *newmem, *oldmem;) 151.4186 Tj
-5.2213 -85.4403 Td
(2106 ) 26.1067 Tj
-5.2213 -94.9336 Td
(2107   newmem = kalloc\(cp->sz + n\);) 182.7466 Tj
-5.2213 -104.427 Td
(2108   if\(newmem == 0\)) 114.8693 Tj
-5.2213 -113.9203 Td
(2109     return -1;) 99.2053 Tj
-5.2213 -123.4137 Td
(2110   memmove\(newmem, cp->mem, cp->sz\);) 208.8533 Tj
-5.2213 -132.9071 Td
(2111   memset\(newmem + cp->sz, 0, n\);) 193.1893 Tj
-5.2213 -142.4004 Td
(2112   oldmem = cp->mem;) 125.312 Tj
-5.2213 -151.8938 Td
(2113   cp->mem = newmem;) 125.312 Tj
-5.2213 -161.3871 Td
(2114   kfree\(oldmem, cp->sz\);) 151.4186 Tj
-5.2213 -170.8805 Td
(2115   cp->sz += n;) 99.2053 Tj
-5.2213 -180.3739 Td
(2116   return cp->sz - n;) 130.5333 Tj
-5.2213 -189.8672 Td
(2117 }) 31.328 Tj
-5.2213 -199.3606 Td
(2118 ) 26.1067 Tj
-5.2213 -208.8539 Td
(2119 // Set up CPU's segment descriptors and task state for a g\
iven process.) 396.8212 Tj
-5.2213 -218.3473 Td
(2120 // If p==0, set up for "idle" state for when scheduler\(\)\
 is running.) 381.1572 Tj
-5.2213 -227.8407 Td
(2121 void) 46.992 Tj
-5.2213 -237.334 Td
(2122 setupsegs\(struct proc *p\)) 156.64 Tj
-5.2213 -246.8274 Td
(2123 {) 31.328 Tj
-5.2213 -256.3207 Td
(2124   struct cpu *c;) 109.648 Tj
-5.2213 -265.8141 Td
(2125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(2126   c = &cpus[cpu\(\)];) 125.312 Tj
-5.2213 -284.8008 Td
(2127   c->ts.ss0 = SEG_KDATA << 3;) 177.5253 Tj
-5.2213 -294.2942 Td
(2128   if\(p\)) 62.656 Tj
-5.2213 -303.7875 Td
(2129     c->ts.esp0 = \(uint\)\(p->kstack + KSTACKSIZE\);) 276.7306 Tj
-5.2213 -313.2809 Td
(2130   else) 57.4347 Tj
-5.2213 -322.7743 Td
(2131     c->ts.esp0 = 0xffffffff;) 172.304 Tj
-5.2213 -332.2676 Td
(2132 ) 26.1067 Tj
-5.2213 -341.761 Td
(2133   c->gdt[0] = SEG_NULL;) 146.1973 Tj
-5.2213 -351.2543 Td
(2134   c->gdt[SEG_KCODE] = SEG\(STA_X|STA_R, 0, 0x100000 + 64*1\
024-1, 0\);) 375.9359 Tj
-5.2213 -360.7477 Td
(2135   c->gdt[SEG_KDATA] = SEG\(STA_W, 0, 0xffffffff, 0\);) 292.3946 Tj
-5.2213 -370.2411 Td
(2136   c->gdt[SEG_TSS] = SEG16\(STS_T32A, \(uint\)&c->ts, sizeo\
f\(c->ts\)-1, 0\);) 391.5999 Tj
-5.2213 -379.7344 Td
(2137   c->gdt[SEG_TSS].s = 0;) 151.4186 Tj
-5.2213 -389.2278 Td
(2138   if\(p\){) 67.8773 Tj
-5.2213 -398.7211 Td
(2139     c->gdt[SEG_UCODE] = SEG\(STA_X|STA_R, \(uint\)p->mem, \
p->sz-1, DPL_USER\);) 412.4852 Tj
-5.2213 -408.2145 Td
(2140     c->gdt[SEG_UDATA] = SEG\(STA_W, \(uint\)p->mem, p->sz-\
1, DPL_USER\);) 381.1572 Tj
-5.2213 -417.7079 Td
(2141   } else {) 78.32 Tj
-5.2213 -427.2012 Td
(2142     c->gdt[SEG_UCODE] = SEG_NULL;) 198.4106 Tj
-5.2213 -436.6946 Td
(2143     c->gdt[SEG_UDATA] = SEG_NULL;) 198.4106 Tj
-5.2213 -446.1879 Td
(2144   }) 41.7707 Tj
-5.2213 -455.6813 Td
(2145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2146   lgdt\(c->gdt, sizeof\(c->gdt\)\);) 187.968 Tj
-5.2213 -474.668 Td
(2147   ltr\(SEG_TSS << 3\);) 130.5333 Tj
-5.2213 -484.1614 Td
(2148 }) 31.328 Tj
-5.2213 -493.6547 Td
(2149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 21) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(2150 // Create a new process copying p as the parent.) 276.7306 Tj
-5.2213 -37.9735 Td
(2151 // Sets up stack to return as if from system call.) 287.1733 Tj
-5.2213 -47.4668 Td
(2152 // Caller must set state of returned proc to RUNNABLE.) 308.0586 Tj
-5.2213 -56.9602 Td
(2153 struct proc*) 88.7626 Tj
-5.2213 -66.4535 Td
(2154 copyproc\(struct proc *p\)) 151.4186 Tj
-5.2213 -75.9469 Td
(2155 {) 31.328 Tj
-5.2213 -85.4403 Td
(2156   int i;) 67.8773 Tj
-5.2213 -94.9336 Td
(2157   struct proc *np;) 120.0906 Tj
-5.2213 -104.427 Td
(2158 ) 26.1067 Tj
-5.2213 -113.9203 Td
(2159   // Allocate process.) 140.976 Tj
-5.2213 -123.4137 Td
(2160   if\(\(np = allocproc\(\)\) == 0\)) 177.5253 Tj
-5.2213 -132.9071 Td
(2161     return 0;) 93.984 Tj
-5.2213 -142.4004 Td
(2162 ) 26.1067 Tj
-5.2213 -151.8938 Td
(2163   // Allocate kernel stack.) 167.0826 Tj
-5.2213 -161.3871 Td
(2164   if\(\(np->kstack = kalloc\(KSTACKSIZE\)\) == 0\){) 261.0666 Tj
-5.2213 -170.8805 Td
(2165     np->state = UNUSED;) 146.1973 Tj
-5.2213 -180.3739 Td
(2166     return 0;) 93.984 Tj
-5.2213 -189.8672 Td
(2167   }) 41.7707 Tj
-5.2213 -199.3606 Td
(2168   np->tf = \(struct trapframe*\)\(np->kstack + KSTACKSIZE\)\
 - 1;) 339.3866 Tj
-5.2213 -208.8539 Td
(2169 ) 26.1067 Tj
-5.2213 -218.3473 Td
(2170   if\(p\){  // Copy process state from p.) 229.7386 Tj
-5.2213 -227.8407 Td
(2171     np->parent = p;) 125.312 Tj
-5.2213 -237.334 Td
(2172     memmove\(np->tf, p->tf, sizeof\(*np->tf\)\);) 255.8453 Tj
-5.2213 -246.8274 Td
(2173 ) 26.1067 Tj
-5.2213 -256.3207 Td
(2174     np->sz = p->sz;) 125.312 Tj
-5.2213 -265.8141 Td
(2175     if\(\(np->mem = kalloc\(np->sz\)\) == 0\){) 234.9599 Tj
-5.2213 -275.3075 Td
(2176       kfree\(np->kstack, KSTACKSIZE\);) 214.0746 Tj
-5.2213 -284.8008 Td
(2177       np->kstack = 0;) 135.7546 Tj
-5.2213 -294.2942 Td
(2178       np->state = UNUSED;) 156.64 Tj
-5.2213 -303.7875 Td
(2179       return 0;) 104.4266 Tj
-5.2213 -313.2809 Td
(2180     }) 52.2133 Tj
-5.2213 -322.7743 Td
(2181     memmove\(np->mem, p->mem, np->sz\);) 219.2959 Tj
-5.2213 -332.2676 Td
(2182 ) 26.1067 Tj
-5.2213 -341.761 Td
(2183     for\(i = 0; i < NOFILE; i++\)) 187.968 Tj
-5.2213 -351.2543 Td
(2184       if\(p->ofile[i]\)) 135.7546 Tj
-5.2213 -360.7477 Td
(2185         np->ofile[i] = filedup\(p->ofile[i]\);) 255.8453 Tj
-5.2213 -370.2411 Td
(2186     np->cwd = idup\(p->cwd\);) 167.0826 Tj
-5.2213 -379.7344 Td
(2187     np->thr = p->thr;) 135.7546 Tj
-5.2213 -389.2278 Td
(2188   }) 41.7707 Tj
-5.2213 -398.7211 Td
(2189 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2190   // Set up new context to start executing at forkret \(se\
e below\).) 370.7146 Tj
-5.2213 -417.7079 Td
(2191   memset\(&np->context, 0, sizeof\(np->context\)\);) 271.5093 Tj
-5.2213 -427.2012 Td
(2192   np->context.eip = \(uint\)forkret;) 203.6319 Tj
-5.2213 -436.6946 Td
(2193   np->context.esp = \(uint\)np->tf;) 198.4106 Tj
-5.2213 -446.1879 Td
(2194 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2195   // Clear %eax so that fork system call returns 0 in chil\
d.) 339.3866 Tj
-5.2213 -465.1747 Td
(2196   np->tf->eax = 0;) 120.0906 Tj
-5.2213 -474.668 Td
(2197   return np;) 88.7626 Tj
-5.2213 -484.1614 Td
(2198 }) 31.328 Tj
-5.2213 -493.6547 Td
(2199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 21) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 31 31
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 4) 182.7466 Tj
-5.2213 -28.4801 Td
(2200 // Set up first user process.) 177.5253 Tj
-5.2213 -37.9735 Td
(2201 void) 46.992 Tj
-5.2213 -47.4668 Td
(2202 userinit\(void\)) 99.2053 Tj
-5.2213 -56.9602 Td
(2203 {) 31.328 Tj
-5.2213 -66.4535 Td
(2204   struct proc *p;) 114.8693 Tj
-5.2213 -75.9469 Td
(2205   extern uchar _binary_initcode_start[], _binary_initcode_\
size[];) 365.4932 Tj
-5.2213 -85.4403 Td
(2206 ) 26.1067 Tj
-5.2213 -94.9336 Td
(2207   p = copyproc\(0\);) 120.0906 Tj
-5.2213 -104.427 Td
(2208   p->sz = PAGE;) 104.4266 Tj
-5.2213 -113.9203 Td
(2209   p->mem = kalloc\(p->sz\);) 156.64 Tj
-5.2213 -123.4137 Td
(2210   p->cwd = namei\("/"\);) 140.976 Tj
-5.2213 -132.9071 Td
(2211   memset\(p->tf, 0, sizeof\(*p->tf\)\);) 208.8533 Tj
-5.2213 -142.4004 Td
(2212   p->tf->cs = \(SEG_UCODE << 3\) | DPL_USER;) 245.4026 Tj
-5.2213 -151.8938 Td
(2213   p->tf->ds = \(SEG_UDATA << 3\) | DPL_USER;) 245.4026 Tj
-5.2213 -161.3871 Td
(2214   p->tf->es = p->tf->ds;) 151.4186 Tj
-5.2213 -170.8805 Td
(2215   p->tf->ss = p->tf->ds;) 151.4186 Tj
-5.2213 -180.3739 Td
(2216   p->tf->eflags = FL_IF;) 151.4186 Tj
-5.2213 -189.8672 Td
(2217   p->tf->esp = p->sz;) 135.7546 Tj
-5.2213 -199.3606 Td
(2218 ) 26.1067 Tj
-5.2213 -208.8539 Td
(2219   // Make return address readable; needed for some gcc.) 313.2799 Tj
-5.2213 -218.3473 Td
(2220   p->tf->esp -= 4;) 120.0906 Tj
-5.2213 -227.8407 Td
(2221   *\(uint*\)\(p->mem + p->tf->esp\) = 0xefefefef;) 261.0666 Tj
-5.2213 -237.334 Td
(2222 ) 26.1067 Tj
-5.2213 -246.8274 Td
(2223   // On entry to user space, start executing at beginning \
of initcode.S.) 402.0426 Tj
-5.2213 -256.3207 Td
(2224   p->tf->eip = 0;) 114.8693 Tj
-5.2213 -265.8141 Td
(2225   memmove\(p->mem, _binary_initcode_start, \(int\)_binary_\
initcode_size\);) 391.5999 Tj
-5.2213 -275.3075 Td
(2226   safestrcpy\(p->name, "initcode", sizeof\(p->name\)\);) 292.3946 Tj
-5.2213 -284.8008 Td
(2227   p->state = RUNNABLE;) 140.976 Tj
-5.2213 -294.2942 Td
(2228 ) 26.1067 Tj
-5.2213 -303.7875 Td
(2229   initproc = p;) 104.4266 Tj
-5.2213 -313.2809 Td
(2230 }) 31.328 Tj
-5.2213 -322.7743 Td
(2231 ) 26.1067 Tj
-5.2213 -332.2676 Td
(2232 // Per-CPU process scheduler.) 177.5253 Tj
-5.2213 -341.761 Td
(2233 // Each CPU calls scheduler\(\) after setting itself up.) 308.0586 Tj
-5.2213 -351.2543 Td
(2234 // Scheduler never returns.  It loops, doing:) 261.0666 Tj
-5.2213 -360.7477 Td
(2235 //  - choose a process to run) 177.5253 Tj
-5.2213 -370.2411 Td
(2236 //  - swtch to start running that process) 240.1813 Tj
-5.2213 -379.7344 Td
(2237 //  - eventually that process transfers control) 271.5093 Tj
-5.2213 -389.2278 Td
(2238 //      via swtch back to the scheduler.) 234.9599 Tj
-5.2213 -398.7211 Td
(2239 void) 46.992 Tj
-5.2213 -408.2145 Td
(2240 scheduler\(void\)) 104.4266 Tj
-5.2213 -417.7079 Td
(2241 {) 31.328 Tj
-5.2213 -427.2012 Td
(2242   struct proc *p;) 114.8693 Tj
-5.2213 -436.6946 Td
(2243   int i;) 67.8773 Tj
-5.2213 -446.1879 Td
(2244 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2245   for\(;;\){) 78.32 Tj
-5.2213 -465.1747 Td
(2246     // Loop over process table looking for process to run.) 328.9439 Tj
-5.2213 -474.668 Td
(2247     acquire\(&proc_table_lock\);) 182.7466 Tj
-5.2213 -484.1614 Td
(2248 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2249 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 22) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 5) 182.7466 Tj
-5.2213 -28.4801 Td
(2250     for\(i = 0; i < NPROC; i++\){) 187.968 Tj
-5.2213 -37.9735 Td
(2251       p = &proc[i];) 125.312 Tj
-5.2213 -47.4668 Td
(2252       if\(\(p->state != RUNNABLE\) && \(p->state != MSLEEP\
ING\)\)) 334.1652 Tj
-5.2213 -56.9602 Td
(2253         continue;) 114.8693 Tj
-5.2213 -66.4535 Td
(2254 ) 26.1067 Tj
-5.2213 -75.9469 Td
(2255 //      cprintf\("switch to %s eip: 0x%08x...\\n", p->name\
, p->context.eip\);) 412.4852 Tj
-5.2213 -85.4403 Td
(2256       // Switch to chosen process.  It is the process's jo\
b) 334.1652 Tj
-5.2213 -94.9336 Td
(2257       // to release proc_table_lock and then reacquire it) 323.7226 Tj
-5.2213 -104.427 Td
(2258       // before jumping back to us.) 208.8533 Tj
-5.2213 -113.9203 Td
(2259       cp = p;) 93.984 Tj
-5.2213 -123.4137 Td
(2260       setupsegs\(p\);) 125.312 Tj
-5.2213 -132.9071 Td
(2261       if \(p->state == RUNNABLE\)) 187.968 Tj
-5.2213 -142.4004 Td
(2262         p->state = RUNNING;) 167.0826 Tj
-5.2213 -151.8938 Td
(2263       swtch\(&cpus[cpu\(\)].context, &p->context\);) 271.5093 Tj
-5.2213 -161.3871 Td
(2264 ) 26.1067 Tj
-5.2213 -170.8805 Td
(2265 //      cprintf\("done.\\n"\);) 167.0826 Tj
-5.2213 -180.3739 Td
(2266       // Process is done running for now.) 240.1813 Tj
-5.2213 -189.8672 Td
(2267       // It should have changed its p->state before coming\
 back.) 360.2719 Tj
-5.2213 -199.3606 Td
(2268       cp = 0;) 93.984 Tj
-5.2213 -208.8539 Td
(2269       setupsegs\(0\);) 125.312 Tj
-5.2213 -218.3473 Td
(2270     }) 52.2133 Tj
-5.2213 -227.8407 Td
(2271 ) 26.1067 Tj
-5.2213 -237.334 Td
(2272     release\(&proc_table_lock\);) 182.7466 Tj
-5.2213 -246.8274 Td
(2273   }) 41.7707 Tj
-5.2213 -256.3207 Td
(2274 }) 31.328 Tj
-5.2213 -265.8141 Td
(2275 ) 26.1067 Tj
-5.2213 -275.3075 Td
(2276 // Enter scheduler.  Must already hold proc_table_lock) 308.0586 Tj
-5.2213 -284.8008 Td
(2277 // and have changed curproc[cpu\(\)]->state.) 245.4026 Tj
-5.2213 -294.2942 Td
(2278 void) 46.992 Tj
-5.2213 -303.7875 Td
(2279 sched\(void\)) 83.5413 Tj
-5.2213 -313.2809 Td
(2280 {) 31.328 Tj
-5.2213 -322.7743 Td
(2281   if\(cp->state == RUNNING\)) 161.8613 Tj
-5.2213 -332.2676 Td
(2282     panic\("sched running"\);) 167.0826 Tj
-5.2213 -341.761 Td
(2283   if\(!holding\(&proc_table_lock\)\)) 193.1893 Tj
-5.2213 -351.2543 Td
(2284     panic\("sched proc_table_lock"\);) 208.8533 Tj
-5.2213 -360.7477 Td
(2285 //  if\(cpus[cpu\(\)].nlock != 1\)) 182.7466 Tj
-5.2213 -370.2411 Td
(2286 //    panic\("sched locks"\);) 167.0826 Tj
-5.2213 -379.7344 Td
(2287 ) 26.1067 Tj
-5.2213 -389.2278 Td
(2288   swtch\(&cp->context, &cpus[cpu\(\)].context\);) 255.8453 Tj
-5.2213 -398.7211 Td
(2289 }) 31.328 Tj
-5.2213 -408.2145 Td
(2290 ) 26.1067 Tj
-5.2213 -417.7079 Td
(2291 // Give up the CPU for one scheduling round.) 255.8453 Tj
-5.2213 -427.2012 Td
(2292 void) 46.992 Tj
-5.2213 -436.6946 Td
(2293 yield\(void\)) 83.5413 Tj
-5.2213 -446.1879 Td
(2294 {) 31.328 Tj
-5.2213 -455.6813 Td
(2295   acquire\(&proc_table_lock\);) 172.304 Tj
-5.2213 -465.1747 Td
(2296   cp->state = RUNNABLE;) 146.1973 Tj
-5.2213 -474.668 Td
(2297   sched\(\);) 78.32 Tj
-5.2213 -484.1614 Td
(2298   release\(&proc_table_lock\);) 172.304 Tj
-5.2213 -493.6547 Td
(2299 }) 31.328 Tj
-5.2213 -522.1348 Td
(Sheet 22) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 32 32
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 6) 182.7466 Tj
-5.2213 -28.4801 Td
(2300 // A fork child's very first scheduling by scheduler\(\)) 308.0586 Tj
-5.2213 -37.9735 Td
(2301 // will swtch here.  "Return" to user space.) 255.8453 Tj
-5.2213 -47.4668 Td
(2302 void) 46.992 Tj
-5.2213 -56.9602 Td
(2303 forkret\(void\)) 93.984 Tj
-5.2213 -66.4535 Td
(2304 {) 31.328 Tj
-5.2213 -75.9469 Td
(2305   // Still holding proc_table_lock from scheduler.) 287.1733 Tj
-5.2213 -85.4403 Td
(2306   release\(&proc_table_lock\);) 172.304 Tj
-5.2213 -94.9336 Td
(2307 ) 26.1067 Tj
-5.2213 -104.427 Td
(2308   // Jump into assembly, never to return.) 240.1813 Tj
-5.2213 -113.9203 Td
(2309   forkret1\(cp->tf\);) 125.312 Tj
-5.2213 -123.4137 Td
(2310 }) 31.328 Tj
-5.2213 -132.9071 Td
(2311 ) 26.1067 Tj
-5.2213 -142.4004 Td
(2312 int) 41.7707 Tj
-5.2213 -151.8938 Td
(2313 msleep_spin\(void *chan, struct spinlock *lk, int timo\)) 308.0586 Tj
-5.2213 -161.3871 Td
(2314 {) 31.328 Tj
-5.2213 -170.8805 Td
(2315     uint32_t s = millitime\(\);) 177.5253 Tj
-5.2213 -180.3739 Td
(2316     uint32_t p = s;) 125.312 Tj
-5.2213 -189.8672 Td
(2317     int ret = 1; // Time Out) 172.304 Tj
-5.2213 -199.3606 Td
(2318     s += timo;) 99.2053 Tj
-5.2213 -208.8539 Td
(2319 ) 26.1067 Tj
-5.2213 -218.3473 Td
(2320     if \(cp == 0\)) 109.648 Tj
-5.2213 -227.8407 Td
(2321         panic\("msleep with cp == 0"\);) 219.2959 Tj
-5.2213 -237.334 Td
(2322     if \(lk == 0\)) 109.648 Tj
-5.2213 -246.8274 Td
(2323         panic\("msleep without lock"\);) 219.2959 Tj
-5.2213 -256.3207 Td
(2324 ) 26.1067 Tj
-5.2213 -265.8141 Td
(2325     if \(lk != &proc_table_lock\)) 187.968 Tj
-5.2213 -275.3075 Td
(2326     {) 52.2133 Tj
-5.2213 -284.8008 Td
(2327         acquire\(&proc_table_lock\);) 203.6319 Tj
-5.2213 -294.2942 Td
(2328         release\(lk\);) 130.5333 Tj
-5.2213 -303.7875 Td
(2329     }) 52.2133 Tj
-5.2213 -313.2809 Td
(2330 ) 26.1067 Tj
-5.2213 -322.7743 Td
(2331     cp->chan = chan;) 130.5333 Tj
-5.2213 -332.2676 Td
(2332     cp->state = MSLEEPING;) 161.8613 Tj
-5.2213 -341.761 Td
(2333     while \(p < s\)) 114.8693 Tj
-5.2213 -351.2543 Td
(2334     {) 52.2133 Tj
-5.2213 -360.7477 Td
(2335         sched\(\);) 109.648 Tj
-5.2213 -370.2411 Td
(2336         if \(cp->state == RUNNING\)) 198.4106 Tj
-5.2213 -379.7344 Td
(2337         {) 73.0986 Tj
-5.2213 -389.2278 Td
(2338             ret = 0;) 130.5333 Tj
-5.2213 -398.7211 Td
(2339             break;) 120.0906 Tj
-5.2213 -408.2145 Td
(2340         }) 73.0986 Tj
-5.2213 -417.7079 Td
(2341         p = millitime\(\);) 151.4186 Tj
-5.2213 -427.2012 Td
(2342     }) 52.2133 Tj
-5.2213 -436.6946 Td
(2343     cp->chan = 0;) 114.8693 Tj
-5.2213 -446.1879 Td
(2344     cp->state = RUNNING;) 151.4186 Tj
-5.2213 -455.6813 Td
(2345 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2346 ) 26.1067 Tj
-5.2213 -474.668 Td
(2347 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2348 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2349 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 23) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 7) 182.7466 Tj
-5.2213 -28.4801 Td
(2350     if \(lk != &proc_table_lock\)) 187.968 Tj
-5.2213 -37.9735 Td
(2351     {) 52.2133 Tj
-5.2213 -47.4668 Td
(2352         release\(&proc_table_lock\);) 203.6319 Tj
-5.2213 -56.9602 Td
(2353         acquire\(lk\);) 130.5333 Tj
-5.2213 -66.4535 Td
(2354     }) 52.2133 Tj
-5.2213 -75.9469 Td
(2355     return ret;) 104.4266 Tj
-5.2213 -85.4403 Td
(2356 }) 31.328 Tj
-5.2213 -94.9336 Td
(2357 ) 26.1067 Tj
-5.2213 -104.427 Td
(2358 // Atomically release lock and sleep on chan.) 261.0666 Tj
-5.2213 -113.9203 Td
(2359 // Reacquires lock when reawakened.) 208.8533 Tj
-5.2213 -123.4137 Td
(2360 void) 46.992 Tj
-5.2213 -132.9071 Td
(2361 sleep\(void *chan, struct spinlock *lk\)) 224.5173 Tj
-5.2213 -142.4004 Td
(2362 {) 31.328 Tj
-5.2213 -151.8938 Td
(2363   if\(cp == 0\)) 93.984 Tj
-5.2213 -161.3871 Td
(2364     panic\("sleep"\);) 125.312 Tj
-5.2213 -170.8805 Td
(2365 ) 26.1067 Tj
-5.2213 -180.3739 Td
(2366   if\(lk == 0\)) 93.984 Tj
-5.2213 -189.8672 Td
(2367     panic\("sleep without lk"\);) 182.7466 Tj
-5.2213 -199.3606 Td
(2368 ) 26.1067 Tj
-5.2213 -208.8539 Td
(2369   // Must acquire proc_table_lock in order to) 261.0666 Tj
-5.2213 -218.3473 Td
(2370   // change p->state and then call sched.) 240.1813 Tj
-5.2213 -227.8407 Td
(2371   // Once we hold proc_table_lock, we can be) 255.8453 Tj
-5.2213 -237.334 Td
(2372   // guaranteed that we won't miss any wakeup) 261.0666 Tj
-5.2213 -246.8274 Td
(2373   // \(wakeup runs with proc_table_lock locked\),) 271.5093 Tj
-5.2213 -256.3207 Td
(2374   // so it's okay to release lk.) 193.1893 Tj
-5.2213 -265.8141 Td
(2375   if\(lk != &proc_table_lock\){) 177.5253 Tj
-5.2213 -275.3075 Td
(2376     acquire\(&proc_table_lock\);) 182.7466 Tj
-5.2213 -284.8008 Td
(2377     release\(lk\);) 109.648 Tj
-5.2213 -294.2942 Td
(2378   }) 41.7707 Tj
-5.2213 -303.7875 Td
(2379 ) 26.1067 Tj
-5.2213 -313.2809 Td
(2380   // Go to sleep.) 114.8693 Tj
-5.2213 -322.7743 Td
(2381   cp->chan = chan;) 120.0906 Tj
-5.2213 -332.2676 Td
(2382   cp->state = SLEEPING;) 146.1973 Tj
-5.2213 -341.761 Td
(2383   sched\(\);) 78.32 Tj
-5.2213 -351.2543 Td
(2384 ) 26.1067 Tj
-5.2213 -360.7477 Td
(2385   // Tidy up.) 93.984 Tj
-5.2213 -370.2411 Td
(2386   cp->chan = 0;) 104.4266 Tj
-5.2213 -379.7344 Td
(2387 ) 26.1067 Tj
-5.2213 -389.2278 Td
(2388   // Reacquire original lock.) 177.5253 Tj
-5.2213 -398.7211 Td
(2389   if\(lk != &proc_table_lock\){) 177.5253 Tj
-5.2213 -408.2145 Td
(2390     release\(&proc_table_lock\);) 182.7466 Tj
-5.2213 -417.7079 Td
(2391     acquire\(lk\);) 109.648 Tj
-5.2213 -427.2012 Td
(2392   }) 41.7707 Tj
-5.2213 -436.6946 Td
(2393 }) 31.328 Tj
-5.2213 -446.1879 Td
(2394 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2395 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2396 ) 26.1067 Tj
-5.2213 -474.668 Td
(2397 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 23) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 33 33
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 8) 182.7466 Tj
-5.2213 -28.4801 Td
(2400 // Wake up all processes sleeping on chan.) 245.4026 Tj
-5.2213 -37.9735 Td
(2401 // Proc_table_lock must be held.) 193.1893 Tj
-5.2213 -47.4668 Td
(2402 static void) 83.5413 Tj
-5.2213 -56.9602 Td
(2403 wakeup1\(void *chan\)) 125.312 Tj
-5.2213 -66.4535 Td
(2404 {) 31.328 Tj
-5.2213 -75.9469 Td
(2405   struct proc *p;) 114.8693 Tj
-5.2213 -85.4403 Td
(2406 ) 26.1067 Tj
-5.2213 -94.9336 Td
(2407   for\(p = proc; p < &proc[NPROC]; p++\)) 224.5173 Tj
-5.2213 -104.427 Td
(2408     if\(\(\(p->state == SLEEPING\) ||) 198.4106 Tj
-5.2213 -113.9203 Td
(2409                 \(p->state == MSLEEPING\)\) && p->chan == \
chan\)) 339.3866 Tj
-5.2213 -123.4137 Td
(2410       p->state = RUNNABLE;) 161.8613 Tj
-5.2213 -132.9071 Td
(2411 }) 31.328 Tj
-5.2213 -142.4004 Td
(2412 ) 26.1067 Tj
-5.2213 -151.8938 Td
(2413 // Wake up all processes sleeping on chan.) 245.4026 Tj
-5.2213 -161.3871 Td
(2414 // Proc_table_lock must be held.) 193.1893 Tj
-5.2213 -170.8805 Td
(2415 static void) 83.5413 Tj
-5.2213 -180.3739 Td
(2416 wakeup_one1\(void *chan\)) 146.1973 Tj
-5.2213 -189.8672 Td
(2417 {) 31.328 Tj
-5.2213 -199.3606 Td
(2418   struct proc *p;) 114.8693 Tj
-5.2213 -208.8539 Td
(2419 ) 26.1067 Tj
-5.2213 -218.3473 Td
(2420   for\(p = proc; p < &proc[NPROC]; p++\)) 224.5173 Tj
-5.2213 -227.8407 Td
(2421     if\(\(\(p->state == SLEEPING\) ||) 198.4106 Tj
-5.2213 -237.334 Td
(2422                 \(p->state == MSLEEPING\)\) && p->chan == \
chan\)) 339.3866 Tj
-5.2213 -246.8274 Td
(2423     {) 52.2133 Tj
-5.2213 -256.3207 Td
(2424       p->state = RUNNABLE;) 161.8613 Tj
-5.2213 -265.8141 Td
(2425       break;) 88.7626 Tj
-5.2213 -275.3075 Td
(2426     }) 52.2133 Tj
-5.2213 -284.8008 Td
(2427 }) 31.328 Tj
-5.2213 -294.2942 Td
(2428 ) 26.1067 Tj
-5.2213 -303.7875 Td
(2429 void) 46.992 Tj
-5.2213 -313.2809 Td
(2430 wakeup_one\(void *chan\)) 140.976 Tj
-5.2213 -322.7743 Td
(2431 {) 31.328 Tj
-5.2213 -332.2676 Td
(2432   acquire\(&proc_table_lock\);) 172.304 Tj
-5.2213 -341.761 Td
(2433   wakeup_one1\(chan\);) 130.5333 Tj
-5.2213 -351.2543 Td
(2434   release\(&proc_table_lock\);) 172.304 Tj
-5.2213 -360.7477 Td
(2435 }) 31.328 Tj
-5.2213 -370.2411 Td
(2436 ) 26.1067 Tj
-5.2213 -379.7344 Td
(2437 // Wake up all processes sleeping on chan.) 245.4026 Tj
-5.2213 -389.2278 Td
(2438 // Proc_table_lock is acquired and released.) 255.8453 Tj
-5.2213 -398.7211 Td
(2439 void) 46.992 Tj
-5.2213 -408.2145 Td
(2440 wakeup\(void *chan\)) 120.0906 Tj
-5.2213 -417.7079 Td
(2441 {) 31.328 Tj
-5.2213 -427.2012 Td
(2442   acquire\(&proc_table_lock\);) 172.304 Tj
-5.2213 -436.6946 Td
(2443   wakeup1\(chan\);) 109.648 Tj
-5.2213 -446.1879 Td
(2444   release\(&proc_table_lock\);) 172.304 Tj
-5.2213 -455.6813 Td
(2445 }) 31.328 Tj
-5.2213 -465.1747 Td
(2446 ) 26.1067 Tj
-5.2213 -474.668 Td
(2447 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 24) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 9) 182.7466 Tj
-5.2213 -28.4801 Td
(2450 // Kill the process with the given pid.) 229.7386 Tj
-5.2213 -37.9735 Td
(2451 // Process won't actually exit until it returns) 271.5093 Tj
-5.2213 -47.4668 Td
(2452 // to user space \(see trap in trap.c\).) 224.5173 Tj
-5.2213 -56.9602 Td
(2453 int) 41.7707 Tj
-5.2213 -66.4535 Td
(2454 kill\(int pid\)) 93.984 Tj
-5.2213 -75.9469 Td
(2455 {) 31.328 Tj
-5.2213 -85.4403 Td
(2456   struct proc *p;) 114.8693 Tj
-5.2213 -94.9336 Td
(2457 ) 26.1067 Tj
-5.2213 -104.427 Td
(2458   acquire\(&proc_table_lock\);) 172.304 Tj
-5.2213 -113.9203 Td
(2459   for\(p = proc; p < &proc[NPROC]; p++\){) 229.7386 Tj
-5.2213 -123.4137 Td
(2460     if\(p->pid == pid\){) 140.976 Tj
-5.2213 -132.9071 Td
(2461       p->killed = 1;) 130.5333 Tj
-5.2213 -142.4004 Td
(2462       // Wake process from sleep if necessary.) 266.2879 Tj
-5.2213 -151.8938 Td
(2463       if\(p->state == SLEEPING\)) 182.7466 Tj
-5.2213 -161.3871 Td
(2464         p->state = RUNNABLE;) 172.304 Tj
-5.2213 -170.8805 Td
(2465       release\(&proc_table_lock\);) 193.1893 Tj
-5.2213 -180.3739 Td
(2466       return 0;) 104.4266 Tj
-5.2213 -189.8672 Td
(2467     }) 52.2133 Tj
-5.2213 -199.3606 Td
(2468   }) 41.7707 Tj
-5.2213 -208.8539 Td
(2469   release\(&proc_table_lock\);) 172.304 Tj
-5.2213 -218.3473 Td
(2470   return -1;) 88.7626 Tj
-5.2213 -227.8407 Td
(2471 }) 31.328 Tj
-5.2213 -237.334 Td
(2472 ) 26.1067 Tj
-5.2213 -246.8274 Td
(2473 // Exit the current process.  Does not return.) 266.2879 Tj
-5.2213 -256.3207 Td
(2474 // Exited processes remain in the zombie state) 266.2879 Tj
-5.2213 -265.8141 Td
(2475 // until their parent calls wait\(\) to find out they exit\
ed.) 334.1652 Tj
-5.2213 -275.3075 Td
(2476 void) 46.992 Tj
-5.2213 -284.8008 Td
(2477 exit\(void\)) 78.32 Tj
-5.2213 -294.2942 Td
(2478 {) 31.328 Tj
-5.2213 -303.7875 Td
(2479   struct proc *p;) 114.8693 Tj
-5.2213 -313.2809 Td
(2480   int fd;) 73.0986 Tj
-5.2213 -322.7743 Td
(2481 ) 26.1067 Tj
-5.2213 -332.2676 Td
(2482   if\(cp == initproc\)) 130.5333 Tj
-5.2213 -341.761 Td
(2483     panic\("init exiting"\);) 161.8613 Tj
-5.2213 -351.2543 Td
(2484 ) 26.1067 Tj
-5.2213 -360.7477 Td
(2485   // Close all open files.) 161.8613 Tj
-5.2213 -370.2411 Td
(2486   for\(fd = 0; fd < NOFILE; fd++\){) 198.4106 Tj
-5.2213 -379.7344 Td
(2487     if\(cp->ofile[fd]\){) 140.976 Tj
-5.2213 -389.2278 Td
(2488       fileclose\(cp->ofile[fd]\);) 187.968 Tj
-5.2213 -398.7211 Td
(2489       cp->ofile[fd] = 0;) 151.4186 Tj
-5.2213 -408.2145 Td
(2490     }) 52.2133 Tj
-5.2213 -417.7079 Td
(2491   }) 41.7707 Tj
-5.2213 -427.2012 Td
(2492 ) 26.1067 Tj
-5.2213 -436.6946 Td
(2493   iput\(cp->cwd\);) 109.648 Tj
-5.2213 -446.1879 Td
(2494   cp->cwd = 0;) 99.2053 Tj
-5.2213 -455.6813 Td
(2495 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2496   acquire\(&proc_table_lock\);) 172.304 Tj
-5.2213 -474.668 Td
(2497 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2498   // Parent might be sleeping in proc_wait.) 250.6239 Tj
-5.2213 -493.6547 Td
(2499   wakeup1\(cp->parent\);) 140.976 Tj
-5.2213 -522.1348 Td
(Sheet 24) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 34 34
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 10) 187.968 Tj
-5.2213 -28.4801 Td
(2500   // Pass abandoned children to init.) 219.2959 Tj
-5.2213 -37.9735 Td
(2501   for\(p = proc; p < &proc[NPROC]; p++\){) 229.7386 Tj
-5.2213 -47.4668 Td
(2502     if\(p->parent == cp\){) 151.4186 Tj
-5.2213 -56.9602 Td
(2503       p->parent = initproc;) 167.0826 Tj
-5.2213 -66.4535 Td
(2504       if\(p->state == ZOMBIE\)) 172.304 Tj
-5.2213 -75.9469 Td
(2505         wakeup1\(initproc\);) 161.8613 Tj
-5.2213 -85.4403 Td
(2506     }) 52.2133 Tj
-5.2213 -94.9336 Td
(2507   }) 41.7707 Tj
-5.2213 -104.427 Td
(2508 ) 26.1067 Tj
-5.2213 -113.9203 Td
(2509   if \(cp->thr\)) 99.2053 Tj
-5.2213 -123.4137 Td
(2510       kproc_free\(cp->thr\);) 161.8613 Tj
-5.2213 -132.9071 Td
(2511 ) 26.1067 Tj
-5.2213 -142.4004 Td
(2512   // Jump into the scheduler, never to return.) 266.2879 Tj
-5.2213 -151.8938 Td
(2513   cp->killed = 0;) 114.8693 Tj
-5.2213 -161.3871 Td
(2514   cp->state = ZOMBIE;) 135.7546 Tj
-5.2213 -170.8805 Td
(2515   cp->thr = 0;) 99.2053 Tj
-5.2213 -180.3739 Td
(2516   sched\(\);) 78.32 Tj
-5.2213 -189.8672 Td
(2517   panic\("zombie exit"\);) 146.1973 Tj
-5.2213 -199.3606 Td
(2518 }) 31.328 Tj
-5.2213 -208.8539 Td
(2519 ) 26.1067 Tj
-5.2213 -218.3473 Td
(2520 // Wait for a child process to exit and return its pid.) 313.2799 Tj
-5.2213 -227.8407 Td
(2521 // Return -1 if this process has no children.) 261.0666 Tj
-5.2213 -237.334 Td
(2522 int) 41.7707 Tj
-5.2213 -246.8274 Td
(2523 wait\(void\)) 78.32 Tj
-5.2213 -256.3207 Td
(2524 {) 31.328 Tj
-5.2213 -265.8141 Td
(2525   struct proc *p;) 114.8693 Tj
-5.2213 -275.3075 Td
(2526   int i, havekids, pid;) 146.1973 Tj
-5.2213 -284.8008 Td
(2527 ) 26.1067 Tj
-5.2213 -294.2942 Td
(2528   acquire\(&proc_table_lock\);) 172.304 Tj
-5.2213 -303.7875 Td
(2529   for\(;;\){) 78.32 Tj
-5.2213 -313.2809 Td
(2530     // Scan through table looking for zombie children.) 308.0586 Tj
-5.2213 -322.7743 Td
(2531     havekids = 0;) 114.8693 Tj
-5.2213 -332.2676 Td
(2532     for\(i = 0; i < NPROC; i++\){) 187.968 Tj
-5.2213 -341.761 Td
(2533       p = &proc[i];) 125.312 Tj
-5.2213 -351.2543 Td
(2534       if\(p->state == UNUSED\)) 172.304 Tj
-5.2213 -360.7477 Td
(2535         continue;) 114.8693 Tj
-5.2213 -370.2411 Td
(2536       if\(p->parent == cp\){) 161.8613 Tj
-5.2213 -379.7344 Td
(2537         if\(p->state == ZOMBIE\){) 187.968 Tj
-5.2213 -389.2278 Td
(2538           // Found one.) 146.1973 Tj
-5.2213 -398.7211 Td
(2539 #ifdef PROC_DEBUG) 114.8693 Tj
-5.2213 -408.2145 Td
(2540           cprintf\("wait: freeing ZOMBIE %d %s\\n", p->pid\
, p->name\);) 375.9359 Tj
-5.2213 -417.7079 Td
(2541           cprintf\("      freeing mem\\n"\);) 240.1813 Tj
-5.2213 -427.2012 Td
(2542 #endif) 57.4347 Tj
-5.2213 -436.6946 Td
(2543           if \(p->sz != 0\) // kernel thread doesn't have \
mem) 334.1652 Tj
-5.2213 -446.1879 Td
(2544             kfree\(p->mem, p->sz\);) 198.4106 Tj
-5.2213 -455.6813 Td
(2545 #ifdef PROC_DEBUG) 114.8693 Tj
-5.2213 -465.1747 Td
(2546           cprintf\("      freeing kstack\\n"\);) 255.8453 Tj
-5.2213 -474.668 Td
(2547 #endif) 57.4347 Tj
-5.2213 -484.1614 Td
(2548           kfree\(p->kstack, KSTACKSIZE\);) 229.7386 Tj
-5.2213 -493.6547 Td
(2549           pid = p->pid;) 146.1973 Tj
-5.2213 -522.1348 Td
(Sheet 25) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 11) 187.968 Tj
-5.2213 -28.4801 Td
(2550           p->state = UNUSED;) 172.304 Tj
-5.2213 -37.9735 Td
(2551           p->pid = 0;) 135.7546 Tj
-5.2213 -47.4668 Td
(2552           p->parent = 0;) 151.4186 Tj
-5.2213 -56.9602 Td
(2553           p->name[0] = 0;) 156.64 Tj
-5.2213 -66.4535 Td
(2554           release\(&proc_table_lock\);) 214.0746 Tj
-5.2213 -75.9469 Td
(2555           return pid;) 135.7546 Tj
-5.2213 -85.4403 Td
(2556         }) 73.0986 Tj
-5.2213 -94.9336 Td
(2557         havekids = 1;) 135.7546 Tj
-5.2213 -104.427 Td
(2558       }) 62.656 Tj
-5.2213 -113.9203 Td
(2559     }) 52.2133 Tj
-5.2213 -123.4137 Td
(2560 ) 26.1067 Tj
-5.2213 -132.9071 Td
(2561     // No point waiting if we don't have any children.) 308.0586 Tj
-5.2213 -142.4004 Td
(2562     if\(!havekids || cp->killed\){) 193.1893 Tj
-5.2213 -151.8938 Td
(2563       release\(&proc_table_lock\);) 193.1893 Tj
-5.2213 -161.3871 Td
(2564       return -1;) 109.648 Tj
-5.2213 -170.8805 Td
(2565     }) 52.2133 Tj
-5.2213 -180.3739 Td
(2566 ) 26.1067 Tj
-5.2213 -189.8672 Td
(2567     // Wait for children to exit.  \(See wakeup1 call in p\
roc_exit.\)) 375.9359 Tj
-5.2213 -199.3606 Td
(2568     sleep\(cp, &proc_table_lock\);) 193.1893 Tj
-5.2213 -208.8539 Td
(2569   }) 41.7707 Tj
-5.2213 -218.3473 Td
(2570 }) 31.328 Tj
-5.2213 -227.8407 Td
(2571 ) 26.1067 Tj
-5.2213 -237.334 Td
(2572 // Print a process listing to console.  For debugging.) 308.0586 Tj
-5.2213 -246.8274 Td
(2573 // Runs when user types ^P on console.) 224.5173 Tj
-5.2213 -256.3207 Td
(2574 // No lock to avoid wedging a stuck machine further.) 297.6159 Tj
-5.2213 -265.8141 Td
(2575 void) 46.992 Tj
-5.2213 -275.3075 Td
(2576 procdump\(void\)) 99.2053 Tj
-5.2213 -284.8008 Td
(2577 {) 31.328 Tj
-5.2213 -294.2942 Td
(2578   static char *states[] = {) 167.0826 Tj
-5.2213 -303.7875 Td
(2579   [UNUSED]    "unused",) 146.1973 Tj
-5.2213 -313.2809 Td
(2580   [EMBRYO]    "embryo",) 146.1973 Tj
-5.2213 -322.7743 Td
(2581   [SLEEPING]  "sleep ",) 146.1973 Tj
-5.2213 -332.2676 Td
(2582   [RUNNABLE]  "runble",) 146.1973 Tj
-5.2213 -341.761 Td
(2583   [RUNNING]   "run   ",) 146.1973 Tj
-5.2213 -351.2543 Td
(2584   [ZOMBIE]    "zombie",) 146.1973 Tj
-5.2213 -360.7477 Td
(2585   [MSLEEPING] "msleep") 140.976 Tj
-5.2213 -370.2411 Td
(2586   };) 46.992 Tj
-5.2213 -379.7344 Td
(2587   int i, j;) 83.5413 Tj
-5.2213 -389.2278 Td
(2588   struct proc *p;) 114.8693 Tj
-5.2213 -398.7211 Td
(2589   char *state;) 99.2053 Tj
-5.2213 -408.2145 Td
(2590   uint pc[10];) 99.2053 Tj
-5.2213 -417.7079 Td
(2591 ) 26.1067 Tj
-5.2213 -427.2012 Td
(2592   for\(i = 0; i < NPROC; i++\){) 177.5253 Tj
-5.2213 -436.6946 Td
(2593     p = &proc[i];) 114.8693 Tj
-5.2213 -446.1879 Td
(2594     if\(p->state == UNUSED\)) 161.8613 Tj
-5.2213 -455.6813 Td
(2595       continue;) 104.4266 Tj
-5.2213 -465.1747 Td
(2596     if\(p->state >= 0 && p->state < NELEM\(states\) && sta\
tes[p->state]\)) 386.3786 Tj
-5.2213 -474.668 Td
(2597       state = states[p->state];) 187.968 Tj
-5.2213 -484.1614 Td
(2598     else) 67.8773 Tj
-5.2213 -493.6547 Td
(2599       state = "???";) 130.5333 Tj
-5.2213 -522.1348 Td
(Sheet 25) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 35 35
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/proc.c  Page 12) 187.968 Tj
-5.2213 -28.4801 Td
(2600     cprintf\("%d %s %s", p->pid, state, p->name\);) 276.7306 Tj
-5.2213 -37.9735 Td
(2601     if\(\(p->state == SLEEPING\) || \(p->state == MSLEEPIN\
G\)\){) 328.9439 Tj
-5.2213 -47.4668 Td
(2602       getcallerpcs\(\(uint*\)p->context.ebp+2, pc\);) 276.7306 Tj
-5.2213 -56.9602 Td
(2603       for\(j=0; j<10 && pc[j] != 0; j++\)) 229.7386 Tj
-5.2213 -66.4535 Td
(2604         cprintf\(" %p", pc[j]\);) 182.7466 Tj
-5.2213 -75.9469 Td
(2605     }) 52.2133 Tj
-5.2213 -85.4403 Td
(2606     cprintf\("\\n"\);) 120.0906 Tj
-5.2213 -94.9336 Td
(2607   }) 41.7707 Tj
-5.2213 -104.427 Td
(2608 }) 31.328 Tj
-5.2213 -113.9203 Td
(2609 ) 26.1067 Tj
-5.2213 -123.4137 Td
(2610 ) 26.1067 Tj
-5.2213 -132.9071 Td
(2611 ) 26.1067 Tj
-5.2213 -142.4004 Td
(2612 ) 26.1067 Tj
-5.2213 -151.8938 Td
(2613 ) 26.1067 Tj
-5.2213 -161.3871 Td
(2614 ) 26.1067 Tj
-5.2213 -170.8805 Td
(2615 ) 26.1067 Tj
-5.2213 -180.3739 Td
(2616 ) 26.1067 Tj
-5.2213 -189.8672 Td
(2617 ) 26.1067 Tj
-5.2213 -199.3606 Td
(2618 ) 26.1067 Tj
-5.2213 -208.8539 Td
(2619 ) 26.1067 Tj
-5.2213 -218.3473 Td
(2620 ) 26.1067 Tj
-5.2213 -227.8407 Td
(2621 ) 26.1067 Tj
-5.2213 -237.334 Td
(2622 ) 26.1067 Tj
-5.2213 -246.8274 Td
(2623 ) 26.1067 Tj
-5.2213 -256.3207 Td
(2624 ) 26.1067 Tj
-5.2213 -265.8141 Td
(2625 ) 26.1067 Tj
-5.2213 -275.3075 Td
(2626 ) 26.1067 Tj
-5.2213 -284.8008 Td
(2627 ) 26.1067 Tj
-5.2213 -294.2942 Td
(2628 ) 26.1067 Tj
-5.2213 -303.7875 Td
(2629 ) 26.1067 Tj
-5.2213 -313.2809 Td
(2630 ) 26.1067 Tj
-5.2213 -322.7743 Td
(2631 ) 26.1067 Tj
-5.2213 -332.2676 Td
(2632 ) 26.1067 Tj
-5.2213 -341.761 Td
(2633 ) 26.1067 Tj
-5.2213 -351.2543 Td
(2634 ) 26.1067 Tj
-5.2213 -360.7477 Td
(2635 ) 26.1067 Tj
-5.2213 -370.2411 Td
(2636 ) 26.1067 Tj
-5.2213 -379.7344 Td
(2637 ) 26.1067 Tj
-5.2213 -389.2278 Td
(2638 ) 26.1067 Tj
-5.2213 -398.7211 Td
(2639 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2640 ) 26.1067 Tj
-5.2213 -417.7079 Td
(2641 ) 26.1067 Tj
-5.2213 -427.2012 Td
(2642 ) 26.1067 Tj
-5.2213 -436.6946 Td
(2643 ) 26.1067 Tj
-5.2213 -446.1879 Td
(2644 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2645 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2646 ) 26.1067 Tj
-5.2213 -474.668 Td
(2647 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2648 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2649 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 26) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/swtch.S  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(2650 #   void swtch\(struct context *old, struct context *new\)\
;) 323.7226 Tj
-5.2213 -37.9735 Td
(2651 #) 31.328 Tj
-5.2213 -47.4668 Td
(2652 # Save current register context in old) 224.5173 Tj
-5.2213 -56.9602 Td
(2653 # and then load register context from new.) 245.4026 Tj
-5.2213 -66.4535 Td
(2654 ) 26.1067 Tj
-5.2213 -75.9469 Td
(2655 .globl swtch) 88.7626 Tj
-5.2213 -85.4403 Td
(2656 swtch:) 57.4347 Tj
-5.2213 -94.9336 Td
(2657   # Save old registers) 140.976 Tj
-5.2213 -104.427 Td
(2658   movl 4\(%esp\), %eax) 130.5333 Tj
-5.2213 -113.9203 Td
(2659 ) 26.1067 Tj
-5.2213 -123.4137 Td
(2660   popl 0\(%eax\)  # %eip) 140.976 Tj
-5.2213 -132.9071 Td
(2661   movl %esp, 4\(%eax\)) 130.5333 Tj
-5.2213 -142.4004 Td
(2662   movl %ebx, 8\(%eax\)) 130.5333 Tj
-5.2213 -151.8938 Td
(2663   movl %ecx, 12\(%eax\)) 135.7546 Tj
-5.2213 -161.3871 Td
(2664   movl %edx, 16\(%eax\)) 135.7546 Tj
-5.2213 -170.8805 Td
(2665   movl %esi, 20\(%eax\)) 135.7546 Tj
-5.2213 -180.3739 Td
(2666   movl %edi, 24\(%eax\)) 135.7546 Tj
-5.2213 -189.8672 Td
(2667   movl %ebp, 28\(%eax\)) 135.7546 Tj
-5.2213 -199.3606 Td
(2668 ) 26.1067 Tj
-5.2213 -208.8539 Td
(2669   # Load new registers) 140.976 Tj
-5.2213 -218.3473 Td
(2670   movl 4\(%esp\), %eax  # not 8\(%esp\) - popped return ad\
dress above) 365.4932 Tj
-5.2213 -227.8407 Td
(2671 ) 26.1067 Tj
-5.2213 -237.334 Td
(2672   movl 28\(%eax\), %ebp) 135.7546 Tj
-5.2213 -246.8274 Td
(2673   movl 24\(%eax\), %edi) 135.7546 Tj
-5.2213 -256.3207 Td
(2674   movl 20\(%eax\), %esi) 135.7546 Tj
-5.2213 -265.8141 Td
(2675   movl 16\(%eax\), %edx) 135.7546 Tj
-5.2213 -275.3075 Td
(2676   movl 12\(%eax\), %ecx) 135.7546 Tj
-5.2213 -284.8008 Td
(2677   movl 8\(%eax\), %ebx) 130.5333 Tj
-5.2213 -294.2942 Td
(2678   movl 4\(%eax\), %esp) 130.5333 Tj
-5.2213 -303.7875 Td
(2679   pushl 0\(%eax\)  # %eip) 146.1973 Tj
-5.2213 -313.2809 Td
(2680 ) 26.1067 Tj
-5.2213 -322.7743 Td
(2681   ret) 52.2133 Tj
-5.2213 -332.2676 Td
(2682 ) 26.1067 Tj
-5.2213 -341.761 Td
(2683 ) 26.1067 Tj
-5.2213 -351.2543 Td
(2684 ) 26.1067 Tj
-5.2213 -360.7477 Td
(2685 ) 26.1067 Tj
-5.2213 -370.2411 Td
(2686 ) 26.1067 Tj
-5.2213 -379.7344 Td
(2687 ) 26.1067 Tj
-5.2213 -389.2278 Td
(2688 ) 26.1067 Tj
-5.2213 -398.7211 Td
(2689 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2690 ) 26.1067 Tj
-5.2213 -417.7079 Td
(2691 ) 26.1067 Tj
-5.2213 -427.2012 Td
(2692 ) 26.1067 Tj
-5.2213 -436.6946 Td
(2693 ) 26.1067 Tj
-5.2213 -446.1879 Td
(2694 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2695 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2696 ) 26.1067 Tj
-5.2213 -474.668 Td
(2697 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2698 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2699 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 26) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 36 36
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kalloc.c  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(2700 // Physical memory allocator, intended to allocate) 287.1733 Tj
-5.2213 -37.9735 Td
(2701 // memory for user processes. Allocates in 4096-byte "page\
s".) 344.6079 Tj
-5.2213 -47.4668 Td
(2702 // Free list is kept sorted and combines adjacent pages in\
to) 339.3866 Tj
-5.2213 -56.9602 Td
(2703 // long runs, to make it easier to allocate big segments.) 323.7226 Tj
-5.2213 -66.4535 Td
(2704 // One reason the page size is 4k is that the x86 segment \
size) 349.8292 Tj
-5.2213 -75.9469 Td
(2705 // granularity is 4k.) 135.7546 Tj
-5.2213 -85.4403 Td
(2706 ) 26.1067 Tj
-5.2213 -94.9336 Td
(2707 #include "types.h") 120.0906 Tj
-5.2213 -104.427 Td
(2708 #include "defs.h") 114.8693 Tj
-5.2213 -113.9203 Td
(2709 #include "param.h") 120.0906 Tj
-5.2213 -123.4137 Td
(2710 #include "spinlock.h") 135.7546 Tj
-5.2213 -132.9071 Td
(2711 ) 26.1067 Tj
-5.2213 -142.4004 Td
(2712 //#define MEM_DEBUG 1) 135.7546 Tj
-5.2213 -151.8938 Td
(2713 struct spinlock kalloc_lock;) 172.304 Tj
-5.2213 -161.3871 Td
(2714 ) 26.1067 Tj
-5.2213 -170.8805 Td
(2715 struct run {) 88.7626 Tj
-5.2213 -180.3739 Td
(2716   struct run *next;) 125.312 Tj
-5.2213 -189.8672 Td
(2717   int len; // bytes) 125.312 Tj
-5.2213 -199.3606 Td
(2718 };) 36.5493 Tj
-5.2213 -208.8539 Td
(2719 struct run *freelist;) 135.7546 Tj
-5.2213 -218.3473 Td
(2720 ) 26.1067 Tj
-5.2213 -227.8407 Td
(2721 // Initialize free list of physical pages.) 245.4026 Tj
-5.2213 -237.334 Td
(2722 // This code cheats by just considering one megabyte of) 313.2799 Tj
-5.2213 -246.8274 Td
(2723 // pages after _end.  Real systems would determine the) 308.0586 Tj
-5.2213 -256.3207 Td
(2724 // amount of memory available in the system and use it all\
.) 334.1652 Tj
-5.2213 -265.8141 Td
(2725 void) 46.992 Tj
-5.2213 -275.3075 Td
(2726 kinit\(void\)) 83.5413 Tj
-5.2213 -284.8008 Td
(2727 {) 31.328 Tj
-5.2213 -294.2942 Td
(2728   extern int end;) 114.8693 Tj
-5.2213 -303.7875 Td
(2729   uint mem;) 83.5413 Tj
-5.2213 -313.2809 Td
(2730   char *start;) 99.2053 Tj
-5.2213 -322.7743 Td
(2731 ) 26.1067 Tj
-5.2213 -332.2676 Td
(2732   initlock\(&kalloc_lock, "kalloc"\);) 208.8533 Tj
-5.2213 -341.761 Td
(2733   start = \(char*\) &end;) 146.1973 Tj
-5.2213 -351.2543 Td
(2734   start = \(char*\) \(\(\(uint\)start + PAGE\) & ~\(PAGE-1\
\)\);) 302.8373 Tj
-5.2213 -360.7477 Td
(2735   mem = 256; // assume computer has 256 pages of RAM) 297.6159 Tj
-5.2213 -370.2411 Td
(2736   cprintf\("mem = %d\\n", mem * PAGE\);) 214.0746 Tj
-5.2213 -379.7344 Td
(2737   kfree\(start, mem * PAGE\);) 167.0826 Tj
-5.2213 -389.2278 Td
(2738 }) 31.328 Tj
-5.2213 -398.7211 Td
(2739 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2740 ) 26.1067 Tj
-5.2213 -417.7079 Td
(2741 ) 26.1067 Tj
-5.2213 -427.2012 Td
(2742 ) 26.1067 Tj
-5.2213 -436.6946 Td
(2743 ) 26.1067 Tj
-5.2213 -446.1879 Td
(2744 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2745 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2746 ) 26.1067 Tj
-5.2213 -474.668 Td
(2747 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2748 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2749 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 27) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kalloc.c  Page 2) 193.1893 Tj
-5.2213 -28.4801 Td
(2750 // Free the len bytes of memory pointed at by v,) 276.7306 Tj
-5.2213 -37.9735 Td
(2751 // which normally should have been returned by a) 276.7306 Tj
-5.2213 -47.4668 Td
(2752 // call to kalloc\(len\).  \(The exception is when) 271.5093 Tj
-5.2213 -56.9602 Td
(2753 // initializing the allocator; see kinit above.\)) 276.7306 Tj
-5.2213 -66.4535 Td
(2754 void) 46.992 Tj
-5.2213 -75.9469 Td
(2755 kfree\(char *v, int len\)) 146.1973 Tj
-5.2213 -85.4403 Td
(2756 {) 31.328 Tj
-5.2213 -94.9336 Td
(2757   struct run *r, *rend, **rp, *p, *pend;) 234.9599 Tj
-5.2213 -104.427 Td
(2758 ) 26.1067 Tj
-5.2213 -113.9203 Td
(2759 #ifdef MEM_DEBUG) 109.648 Tj
-5.2213 -123.4137 Td
(2760   cprintf\("kfree: %d pages\\n", len / PAGE\);) 250.6239 Tj
-5.2213 -132.9071 Td
(2761 #endif) 57.4347 Tj
-5.2213 -142.4004 Td
(2762   if\(len <= 0 || len % PAGE\)) 172.304 Tj
-5.2213 -151.8938 Td
(2763   {) 41.7707 Tj
-5.2213 -161.3871 Td
(2764     cprintf\("kfree: length = %d\\n", len\);) 240.1813 Tj
-5.2213 -170.8805 Td
(2765     panic\("kfree"\);) 125.312 Tj
-5.2213 -180.3739 Td
(2766   }) 41.7707 Tj
-5.2213 -189.8672 Td
(2767 ) 26.1067 Tj
-5.2213 -199.3606 Td
(2768   // Fill with junk to catch dangling refs.) 250.6239 Tj
-5.2213 -208.8539 Td
(2769   memset\(v, 1, len\);) 130.5333 Tj
-5.2213 -218.3473 Td
(2770 ) 26.1067 Tj
-5.2213 -227.8407 Td
(2771   acquire\(&kalloc_lock\);) 151.4186 Tj
-5.2213 -237.334 Td
(2772   p = \(struct run*\)v;) 135.7546 Tj
-5.2213 -246.8274 Td
(2773   pend = \(struct run*\)\(v + len\);) 193.1893 Tj
-5.2213 -256.3207 Td
(2774   for\(rp=&freelist; \(r=*rp\) != 0 && r <= pend; rp=&r->n\
ext\){) 339.3866 Tj
-5.2213 -265.8141 Td
(2775     rend = \(struct run*\)\(\(char*\)r + r->len\);) 255.8453 Tj
-5.2213 -275.3075 Td
(2776     if\(r <= p && p < rend\)) 161.8613 Tj
-5.2213 -284.8008 Td
(2777       panic\("freeing free page"\);) 198.4106 Tj
-5.2213 -294.2942 Td
(2778     if\(pend == r\){  // p next to r: replace r with p) 297.6159 Tj
-5.2213 -303.7875 Td
(2779       p->len = len + r->len;) 172.304 Tj
-5.2213 -313.2809 Td
(2780       p->next = r->next;) 151.4186 Tj
-5.2213 -322.7743 Td
(2781       *rp = p;) 99.2053 Tj
-5.2213 -332.2676 Td
(2782       goto out;) 104.4266 Tj
-5.2213 -341.761 Td
(2783     }) 52.2133 Tj
-5.2213 -351.2543 Td
(2784     if\(rend == p\){  // r next to p: replace p with r) 297.6159 Tj
-5.2213 -360.7477 Td
(2785       r->len += len;) 130.5333 Tj
-5.2213 -370.2411 Td
(2786       if\(r->next && r->next == pend\){  // r now next to \
r->next?) 360.2719 Tj
-5.2213 -379.7344 Td
(2787         r->len += r->next->len;) 187.968 Tj
-5.2213 -389.2278 Td
(2788         r->next = r->next->next;) 193.1893 Tj
-5.2213 -398.7211 Td
(2789       }) 62.656 Tj
-5.2213 -408.2145 Td
(2790       goto out;) 104.4266 Tj
-5.2213 -417.7079 Td
(2791     }) 52.2133 Tj
-5.2213 -427.2012 Td
(2792   }) 41.7707 Tj
-5.2213 -436.6946 Td
(2793   // Insert p before r in list.) 187.968 Tj
-5.2213 -446.1879 Td
(2794   p->len = len;) 104.4266 Tj
-5.2213 -455.6813 Td
(2795   p->next = r;) 99.2053 Tj
-5.2213 -465.1747 Td
(2796   *rp = p;) 78.32 Tj
-5.2213 -474.668 Td
(2797 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2798 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 27) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 37 37
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kalloc.c  Page 3) 193.1893 Tj
-5.2213 -28.4801 Td
(2800  out:) 52.2133 Tj
-5.2213 -37.9735 Td
(2801   release\(&kalloc_lock\);) 151.4186 Tj
-5.2213 -47.4668 Td
(2802 }) 31.328 Tj
-5.2213 -56.9602 Td
(2803 ) 26.1067 Tj
-5.2213 -66.4535 Td
(2804 // Allocate n bytes of physical memory.) 229.7386 Tj
-5.2213 -75.9469 Td
(2805 // Returns a kernel-segment pointer.) 214.0746 Tj
-5.2213 -85.4403 Td
(2806 // Returns 0 if the memory cannot be allocated.) 271.5093 Tj
-5.2213 -94.9336 Td
(2807 char*) 52.2133 Tj
-5.2213 -104.427 Td
(2808 kalloc\(int n\)) 93.984 Tj
-5.2213 -113.9203 Td
(2809 {) 31.328 Tj
-5.2213 -123.4137 Td
(2810   char *p;) 78.32 Tj
-5.2213 -132.9071 Td
(2811   struct run *r, **rp;) 140.976 Tj
-5.2213 -142.4004 Td
(2812 ) 26.1067 Tj
-5.2213 -151.8938 Td
(2813 #ifdef MEM_DEBUG) 109.648 Tj
-5.2213 -161.3871 Td
(2814   cprintf\("kalloc: %d pages\\n", n / PAGE\);) 245.4026 Tj
-5.2213 -170.8805 Td
(2815   printstack\(\);) 104.4266 Tj
-5.2213 -180.3739 Td
(2816 #endif) 57.4347 Tj
-5.2213 -189.8672 Td
(2817   if\(n % PAGE || n <= 0\)) 151.4186 Tj
-5.2213 -199.3606 Td
(2818     panic\("kalloc"\);) 130.5333 Tj
-5.2213 -208.8539 Td
(2819 ) 26.1067 Tj
-5.2213 -218.3473 Td
(2820   acquire\(&kalloc_lock\);) 151.4186 Tj
-5.2213 -227.8407 Td
(2821   for\(rp=&freelist; \(r=*rp\) != 0; rp=&r->next\){) 271.5093 Tj
-5.2213 -237.334 Td
(2822     if\(r->len == n\){) 130.5333 Tj
-5.2213 -246.8274 Td
(2823       *rp = r->next;) 130.5333 Tj
-5.2213 -256.3207 Td
(2824       release\(&kalloc_lock\);) 172.304 Tj
-5.2213 -265.8141 Td
(2825       return \(char*\)r;) 140.976 Tj
-5.2213 -275.3075 Td
(2826     }) 52.2133 Tj
-5.2213 -284.8008 Td
(2827     if\(r->len > n\){) 125.312 Tj
-5.2213 -294.2942 Td
(2828       r->len -= n;) 120.0906 Tj
-5.2213 -303.7875 Td
(2829       p = \(char*\)r + r->len;) 172.304 Tj
-5.2213 -313.2809 Td
(2830       release\(&kalloc_lock\);) 172.304 Tj
-5.2213 -322.7743 Td
(2831       return p;) 104.4266 Tj
-5.2213 -332.2676 Td
(2832     }) 52.2133 Tj
-5.2213 -341.761 Td
(2833   }) 41.7707 Tj
-5.2213 -351.2543 Td
(2834   release\(&kalloc_lock\);) 151.4186 Tj
-5.2213 -360.7477 Td
(2835 ) 26.1067 Tj
-5.2213 -370.2411 Td
(2836   cprintf\("kalloc: out of memory\\n"\);) 219.2959 Tj
-5.2213 -379.7344 Td
(2837   return 0;) 83.5413 Tj
-5.2213 -389.2278 Td
(2838 }) 31.328 Tj
-5.2213 -398.7211 Td
(2839 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2840 void *) 57.4347 Tj
-5.2213 -417.7079 Td
(2841 kmalloc\(int n\)) 99.2053 Tj
-5.2213 -427.2012 Td
(2842 {) 31.328 Tj
-5.2213 -436.6946 Td
(2843 #ifdef MEM_DEBUG) 109.648 Tj
-5.2213 -446.1879 Td
(2844     cprintf\("kmalloc: %d bytes\\n", n\);) 224.5173 Tj
-5.2213 -455.6813 Td
(2845 #endif) 57.4347 Tj
-5.2213 -465.1747 Td
(2846     return kalloc\(\(\(n - 1\) / PAGE + 1\) * PAGE\);) 271.5093 Tj
-5.2213 -474.668 Td
(2847 }) 31.328 Tj
-5.2213 -484.1614 Td
(2848 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2849 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 28) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kalloc.c  Page 4) 193.1893 Tj
-5.2213 -28.4801 Td
(2850 void) 46.992 Tj
-5.2213 -37.9735 Td
(2851 kmfree\(void *p, int n\)) 140.976 Tj
-5.2213 -47.4668 Td
(2852 {) 31.328 Tj
-5.2213 -56.9602 Td
(2853 #ifdef MEM_DEBUG) 109.648 Tj
-5.2213 -66.4535 Td
(2854     cprintf\("kmfree: %d bytes\\n", n\);) 219.2959 Tj
-5.2213 -75.9469 Td
(2855 #endif) 57.4347 Tj
-5.2213 -85.4403 Td
(2856     return kfree\(p, \(\(n - 1\) / PAGE + 1\) * PAGE\);) 281.9519 Tj
-5.2213 -94.9336 Td
(2857 }) 31.328 Tj
-5.2213 -104.427 Td
(2858 ) 26.1067 Tj
-5.2213 -113.9203 Td
(2859 ) 26.1067 Tj
-5.2213 -123.4137 Td
(2860 ) 26.1067 Tj
-5.2213 -132.9071 Td
(2861 ) 26.1067 Tj
-5.2213 -142.4004 Td
(2862 ) 26.1067 Tj
-5.2213 -151.8938 Td
(2863 ) 26.1067 Tj
-5.2213 -161.3871 Td
(2864 ) 26.1067 Tj
-5.2213 -170.8805 Td
(2865 ) 26.1067 Tj
-5.2213 -180.3739 Td
(2866 ) 26.1067 Tj
-5.2213 -189.8672 Td
(2867 ) 26.1067 Tj
-5.2213 -199.3606 Td
(2868 ) 26.1067 Tj
-5.2213 -208.8539 Td
(2869 ) 26.1067 Tj
-5.2213 -218.3473 Td
(2870 ) 26.1067 Tj
-5.2213 -227.8407 Td
(2871 ) 26.1067 Tj
-5.2213 -237.334 Td
(2872 ) 26.1067 Tj
-5.2213 -246.8274 Td
(2873 ) 26.1067 Tj
-5.2213 -256.3207 Td
(2874 ) 26.1067 Tj
-5.2213 -265.8141 Td
(2875 ) 26.1067 Tj
-5.2213 -275.3075 Td
(2876 ) 26.1067 Tj
-5.2213 -284.8008 Td
(2877 ) 26.1067 Tj
-5.2213 -294.2942 Td
(2878 ) 26.1067 Tj
-5.2213 -303.7875 Td
(2879 ) 26.1067 Tj
-5.2213 -313.2809 Td
(2880 ) 26.1067 Tj
-5.2213 -322.7743 Td
(2881 ) 26.1067 Tj
-5.2213 -332.2676 Td
(2882 ) 26.1067 Tj
-5.2213 -341.761 Td
(2883 ) 26.1067 Tj
-5.2213 -351.2543 Td
(2884 ) 26.1067 Tj
-5.2213 -360.7477 Td
(2885 ) 26.1067 Tj
-5.2213 -370.2411 Td
(2886 ) 26.1067 Tj
-5.2213 -379.7344 Td
(2887 ) 26.1067 Tj
-5.2213 -389.2278 Td
(2888 ) 26.1067 Tj
-5.2213 -398.7211 Td
(2889 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2890 ) 26.1067 Tj
-5.2213 -417.7079 Td
(2891 ) 26.1067 Tj
-5.2213 -427.2012 Td
(2892 ) 26.1067 Tj
-5.2213 -436.6946 Td
(2893 ) 26.1067 Tj
-5.2213 -446.1879 Td
(2894 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2895 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2896 ) 26.1067 Tj
-5.2213 -474.668 Td
(2897 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2898 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 28) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 38 38
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/thread.h  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(2900 #ifndef XV6_THREAD_H_) 135.7546 Tj
-5.2213 -37.9735 Td
(2901 #define XV6_THREAD_H_) 135.7546 Tj
-5.2213 -47.4668 Td
(2902 typedef struct thread * kproc_t;) 193.1893 Tj
-5.2213 -56.9602 Td
(2903 ) 26.1067 Tj
-5.2213 -66.4535 Td
(2904 #ifndef SYS_TIMEOUTS_DEFINED) 172.304 Tj
-5.2213 -75.9469 Td
(2905 #define SYS_TIMEOUTS_DEFINED) 172.304 Tj
-5.2213 -85.4403 Td
(2906 ) 26.1067 Tj
-5.2213 -94.9336 Td
(2907 struct sys_timeouts {) 135.7546 Tj
-5.2213 -104.427 Td
(2908     struct sys_timeout *next;) 177.5253 Tj
-5.2213 -113.9203 Td
(2909 };) 36.5493 Tj
-5.2213 -123.4137 Td
(2910 #endif // SYS_TIMEOUTS_DEFINED) 182.7466 Tj
-5.2213 -132.9071 Td
(2911 ) 26.1067 Tj
-5.2213 -142.4004 Td
(2912 struct thread {) 104.4266 Tj
-5.2213 -151.8938 Td
(2913     struct proc *p;) 125.312 Tj
-5.2213 -161.3871 Td
(2914     void *data;) 104.4266 Tj
-5.2213 -170.8805 Td
(2915     struct sys_timeouts timeouts;) 198.4106 Tj
-5.2213 -180.3739 Td
(2916 };) 36.5493 Tj
-5.2213 -189.8672 Td
(2917 ) 26.1067 Tj
-5.2213 -199.3606 Td
(2918 kproc_t kproc_start\(void \(* proc\)\(void *arg\),) 261.0666 Tj
-5.2213 -208.8539 Td
(2919         void *arg, int prio, void *data, char *name\);) 302.8373 Tj
-5.2213 -218.3473 Td
(2920 void kproc_free\(kproc_t thread\);) 193.1893 Tj
-5.2213 -227.8407 Td
(2921 ) 26.1067 Tj
-5.2213 -237.334 Td
(2922 #endif // XV6_THREAD_H_) 146.1973 Tj
-5.2213 -246.8274 Td
(2923 ) 26.1067 Tj
-5.2213 -256.3207 Td
(2924 ) 26.1067 Tj
-5.2213 -265.8141 Td
(2925 ) 26.1067 Tj
-5.2213 -275.3075 Td
(2926 ) 26.1067 Tj
-5.2213 -284.8008 Td
(2927 ) 26.1067 Tj
-5.2213 -294.2942 Td
(2928 ) 26.1067 Tj
-5.2213 -303.7875 Td
(2929 ) 26.1067 Tj
-5.2213 -313.2809 Td
(2930 ) 26.1067 Tj
-5.2213 -322.7743 Td
(2931 ) 26.1067 Tj
-5.2213 -332.2676 Td
(2932 ) 26.1067 Tj
-5.2213 -341.761 Td
(2933 ) 26.1067 Tj
-5.2213 -351.2543 Td
(2934 ) 26.1067 Tj
-5.2213 -360.7477 Td
(2935 ) 26.1067 Tj
-5.2213 -370.2411 Td
(2936 ) 26.1067 Tj
-5.2213 -379.7344 Td
(2937 ) 26.1067 Tj
-5.2213 -389.2278 Td
(2938 ) 26.1067 Tj
-5.2213 -398.7211 Td
(2939 ) 26.1067 Tj
-5.2213 -408.2145 Td
(2940 ) 26.1067 Tj
-5.2213 -417.7079 Td
(2941 ) 26.1067 Tj
-5.2213 -427.2012 Td
(2942 ) 26.1067 Tj
-5.2213 -436.6946 Td
(2943 ) 26.1067 Tj
-5.2213 -446.1879 Td
(2944 ) 26.1067 Tj
-5.2213 -455.6813 Td
(2945 ) 26.1067 Tj
-5.2213 -465.1747 Td
(2946 ) 26.1067 Tj
-5.2213 -474.668 Td
(2947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 29) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/thread.c  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(2950 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(2951 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(2952 #include "thread.h") 125.312 Tj
-5.2213 -56.9602 Td
(2953 #include "param.h") 120.0906 Tj
-5.2213 -66.4535 Td
(2954 #include "mmu.h") 109.648 Tj
-5.2213 -75.9469 Td
(2955 #include "proc.h") 114.8693 Tj
-5.2213 -85.4403 Td
(2956 ) 26.1067 Tj
-5.2213 -94.9336 Td
(2957 void thread_wrap\(void \(* thread\)\(void *arg\), void *ar\
g\);) 318.5013 Tj
-5.2213 -104.427 Td
(2958 ) 26.1067 Tj
-5.2213 -113.9203 Td
(2959 extern struct proc *initproc;) 177.5253 Tj
-5.2213 -123.4137 Td
(2960 ) 26.1067 Tj
-5.2213 -132.9071 Td
(2961 kproc_t kproc_start\(void \(* proc\)\(void *arg\),) 261.0666 Tj
-5.2213 -142.4004 Td
(2962         void *arg, int prio, void *data, char *name\)) 297.6159 Tj
-5.2213 -151.8938 Td
(2963 {) 31.328 Tj
-5.2213 -161.3871 Td
(2964     kproc_t thr = \(kproc_t\)kmalloc\(sizeof\(struct threa\
d\)\);) 328.9439 Tj
-5.2213 -170.8805 Td
(2965     if \(!thr\)) 93.984 Tj
-5.2213 -180.3739 Td
(2966         return NULL;) 130.5333 Tj
-5.2213 -189.8672 Td
(2967     thr->p = allocproc\(\);) 156.64 Tj
-5.2213 -199.3606 Td
(2968     struct proc *np = thr->p;) 177.5253 Tj
-5.2213 -208.8539 Td
(2969     if \(!np\)) 88.7626 Tj
-5.2213 -218.3473 Td
(2970         return NULL;) 130.5333 Tj
-5.2213 -227.8407 Td
(2971     if\(\(np->kstack = kmalloc\(KSTACKSIZE\)\) == 0\){) 276.7306 Tj
-5.2213 -237.334 Td
(2972       np->state = UNUSED;) 156.64 Tj
-5.2213 -246.8274 Td
(2973       return NULL;) 120.0906 Tj
-5.2213 -256.3207 Td
(2974     }) 52.2133 Tj
-5.2213 -265.8141 Td
(2975     np->thr = thr;) 120.0906 Tj
-5.2213 -275.3075 Td
(2976     np->parent = initproc;) 161.8613 Tj
-5.2213 -284.8008 Td
(2977     np->sz = 0;) 104.4266 Tj
-5.2213 -294.2942 Td
(2978     np->chan = 0;) 114.8693 Tj
-5.2213 -303.7875 Td
(2979     np->killed = 0;) 125.312 Tj
-5.2213 -313.2809 Td
(2980     thr->data = data;) 135.7546 Tj
-5.2213 -322.7743 Td
(2981     memset\(&np->context, 0, sizeof\(np->context\)\);) 281.9519 Tj
-5.2213 -332.2676 Td
(2982     thr->timeouts.next = 0;) 167.0826 Tj
-5.2213 -341.761 Td
(2983     if \(name == 0\)) 120.0906 Tj
-5.2213 -351.2543 Td
(2984         safestrcpy\(np->name,"[kernel thread]",sizeof\(np-\
>name\)\);) 360.2719 Tj
-5.2213 -360.7477 Td
(2985     else) 67.8773 Tj
-5.2213 -370.2411 Td
(2986         safestrcpy\(np->name, name, sizeof\(np->name\)\);) 302.8373 Tj
-5.2213 -379.7344 Td
(2987     np->context.eip = \(uint\)thread_wrap;) 234.9599 Tj
-5.2213 -389.2278 Td
(2988     np->context.esp = \(uint\)np->kstack + KSTACKSIZE - 1;) 318.5013 Tj
-5.2213 -398.7211 Td
(2989     *\(void**\)\(np->context.esp+8\) = arg;) 229.7386 Tj
-5.2213 -408.2145 Td
(2990     *\(void**\)\(np->context.esp+4\) = proc;) 234.9599 Tj
-5.2213 -417.7079 Td
(2991     *\(void**\)\(np->context.esp\) = exit;) 224.5173 Tj
-5.2213 -427.2012 Td
(2992     np->cwd = namei\("/"\);) 156.64 Tj
-5.2213 -436.6946 Td
(2993     np->state = RUNNABLE;) 156.64 Tj
-5.2213 -446.1879 Td
(2994     return thr;) 104.4266 Tj
-5.2213 -455.6813 Td
(2995 }) 31.328 Tj
-5.2213 -465.1747 Td
(2996 ) 26.1067 Tj
-5.2213 -474.668 Td
(2997 ) 26.1067 Tj
-5.2213 -484.1614 Td
(2998 ) 26.1067 Tj
-5.2213 -493.6547 Td
(2999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 29) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 39 39
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/thread.c  Page 2) 193.1893 Tj
-5.2213 -28.4801 Td
(3000 void kproc_free\(kproc_t thread\)) 187.968 Tj
-5.2213 -37.9735 Td
(3001 {) 31.328 Tj
-5.2213 -47.4668 Td
(3002     struct proc *p = thread->p;) 187.968 Tj
-5.2213 -56.9602 Td
(3003     p->thr = 0;) 104.4266 Tj
-5.2213 -66.4535 Td
(3004     kmfree\(thread, sizeof\(struct thread\)\);) 245.4026 Tj
-5.2213 -75.9469 Td
(3005 }) 31.328 Tj
-5.2213 -85.4403 Td
(3006 ) 26.1067 Tj
-5.2213 -94.9336 Td
(3007 void thread_wrap\(void \(* thread\)\(void *arg\), void *ar\
g\)) 313.2799 Tj
-5.2213 -104.427 Td
(3008 {) 31.328 Tj
-5.2213 -113.9203 Td
(3009     release\(&proc_table_lock\);) 182.7466 Tj
-5.2213 -123.4137 Td
(3010     thread\(arg\);) 109.648 Tj
-5.2213 -132.9071 Td
(3011 }) 31.328 Tj
-5.2213 -142.4004 Td
(3012 ) 26.1067 Tj
-5.2213 -151.8938 Td
(3013 ) 26.1067 Tj
-5.2213 -161.3871 Td
(3014 ) 26.1067 Tj
-5.2213 -170.8805 Td
(3015 ) 26.1067 Tj
-5.2213 -180.3739 Td
(3016 ) 26.1067 Tj
-5.2213 -189.8672 Td
(3017 ) 26.1067 Tj
-5.2213 -199.3606 Td
(3018 ) 26.1067 Tj
-5.2213 -208.8539 Td
(3019 ) 26.1067 Tj
-5.2213 -218.3473 Td
(3020 ) 26.1067 Tj
-5.2213 -227.8407 Td
(3021 ) 26.1067 Tj
-5.2213 -237.334 Td
(3022 ) 26.1067 Tj
-5.2213 -246.8274 Td
(3023 ) 26.1067 Tj
-5.2213 -256.3207 Td
(3024 ) 26.1067 Tj
-5.2213 -265.8141 Td
(3025 ) 26.1067 Tj
-5.2213 -275.3075 Td
(3026 ) 26.1067 Tj
-5.2213 -284.8008 Td
(3027 ) 26.1067 Tj
-5.2213 -294.2942 Td
(3028 ) 26.1067 Tj
-5.2213 -303.7875 Td
(3029 ) 26.1067 Tj
-5.2213 -313.2809 Td
(3030 ) 26.1067 Tj
-5.2213 -322.7743 Td
(3031 ) 26.1067 Tj
-5.2213 -332.2676 Td
(3032 ) 26.1067 Tj
-5.2213 -341.761 Td
(3033 ) 26.1067 Tj
-5.2213 -351.2543 Td
(3034 ) 26.1067 Tj
-5.2213 -360.7477 Td
(3035 ) 26.1067 Tj
-5.2213 -370.2411 Td
(3036 ) 26.1067 Tj
-5.2213 -379.7344 Td
(3037 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3038 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3039 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3040 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3041 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3042 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3043 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3044 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3045 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3046 ) 26.1067 Tj
-5.2213 -474.668 Td
(3047 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 30) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/traps.h  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(3050 // x86 trap and interrupt constants.) 214.0746 Tj
-5.2213 -37.9735 Td
(3051 ) 26.1067 Tj
-5.2213 -47.4668 Td
(3052 // Processor-defined:) 135.7546 Tj
-5.2213 -56.9602 Td
(3053 #define T_DIVIDE         0      // divide error) 271.5093 Tj
-5.2213 -66.4535 Td
(3054 #define T_DEBUG          1      // debug exception) 287.1733 Tj
-5.2213 -75.9469 Td
(3055 #define T_NMI            2      // non-maskable interrupt) 323.7226 Tj
-5.2213 -85.4403 Td
(3056 #define T_BRKPT          3      // breakpoint) 261.0666 Tj
-5.2213 -94.9336 Td
(3057 #define T_OFLOW          4      // overflow) 250.6239 Tj
-5.2213 -104.427 Td
(3058 #define T_BOUND          5      // bounds check) 271.5093 Tj
-5.2213 -113.9203 Td
(3059 #define T_ILLOP          6      // illegal opcode) 281.9519 Tj
-5.2213 -123.4137 Td
(3060 #define T_DEVICE         7      // device not available) 313.2799 Tj
-5.2213 -132.9071 Td
(3061 #define T_DBLFLT         8      // double fault) 271.5093 Tj
-5.2213 -142.4004 Td
(3062 // #define T_COPROC      9      // reserved \(not used sin\
ce 486\)) 360.2719 Tj
-5.2213 -151.8938 Td
(3063 #define T_TSS           10      // invalid task switch seg\
ment) 349.8292 Tj
-5.2213 -161.3871 Td
(3064 #define T_SEGNP         11      // segment not present) 308.0586 Tj
-5.2213 -170.8805 Td
(3065 #define T_STACK         12      // stack exception) 287.1733 Tj
-5.2213 -180.3739 Td
(3066 #define T_GPFLT         13      // general protection faul\
t) 334.1652 Tj
-5.2213 -189.8672 Td
(3067 #define T_PGFLT         14      // page fault) 261.0666 Tj
-5.2213 -199.3606 Td
(3068 // #define T_RES        15      // reserved) 250.6239 Tj
-5.2213 -208.8539 Td
(3069 #define T_FPERR         16      // floating point error) 313.2799 Tj
-5.2213 -218.3473 Td
(3070 #define T_ALIGN         17      // aligment check) 281.9519 Tj
-5.2213 -227.8407 Td
(3071 #define T_MCHK          18      // machine check) 276.7306 Tj
-5.2213 -237.334 Td
(3072 #define T_SIMDERR       19      // SIMD floating point err\
or) 339.3866 Tj
-5.2213 -246.8274 Td
(3073 ) 26.1067 Tj
-5.2213 -256.3207 Td
(3074 // These are arbitrarily chosen, but with care not to over\
lap) 344.6079 Tj
-5.2213 -265.8141 Td
(3075 // processor defined exceptions or interrupt vectors.) 302.8373 Tj
-5.2213 -275.3075 Td
(3076 #define T_SYSCALL       48      // system call) 266.2879 Tj
-5.2213 -284.8008 Td
(3077 #define T_DEFAULT      500      // catchall) 250.6239 Tj
-5.2213 -294.2942 Td
(3078 ) 26.1067 Tj
-5.2213 -303.7875 Td
(3079 #define IRQ_OFFSET      32      // IRQ 0 corresponds to in\
t IRQ_OFFSET) 391.5999 Tj
-5.2213 -313.2809 Td
(3080 ) 26.1067 Tj
-5.2213 -322.7743 Td
(3081 #define IRQ_TIMER        0) 161.8613 Tj
-5.2213 -332.2676 Td
(3082 #define IRQ_KBD          1) 161.8613 Tj
-5.2213 -341.761 Td
(3083 #define IRQ_IDE         14) 161.8613 Tj
-5.2213 -351.2543 Td
(3084 #define IRQ_IDE_2       15) 161.8613 Tj
-5.2213 -360.7477 Td
(3085 #define IRQ_ERROR       19) 161.8613 Tj
-5.2213 -370.2411 Td
(3086 #define IRQ_SPURIOUS    31) 161.8613 Tj
-5.2213 -379.7344 Td
(3087 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3088 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3089 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3090 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3091 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3092 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3093 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3094 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3095 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3096 ) 26.1067 Tj
-5.2213 -474.668 Td
(3097 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3098 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3099 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 30) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 40 40
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/vectors.pl  Page 1) 203.6319 Tj
-5.2213 -28.4801 Td
(3100 #!/usr/bin/perl -w) 120.0906 Tj
-5.2213 -37.9735 Td
(3101 ) 26.1067 Tj
-5.2213 -47.4668 Td
(3102 # Generate vectors.S, the trap/interrupt entry points.) 308.0586 Tj
-5.2213 -56.9602 Td
(3103 # There has to be one entry point per interrupt number) 308.0586 Tj
-5.2213 -66.4535 Td
(3104 # since otherwise there's no way for trap\(\) to discover) 313.2799 Tj
-5.2213 -75.9469 Td
(3105 # the interrupt number.) 146.1973 Tj
-5.2213 -85.4403 Td
(3106 ) 26.1067 Tj
-5.2213 -94.9336 Td
(3107 print "# generated by vectors.pl - do not edit\\n";) 287.1733 Tj
-5.2213 -104.427 Td
(3108 print "# handlers\\n";) 135.7546 Tj
-5.2213 -113.9203 Td
(3109 print ".text\\n";) 109.648 Tj
-5.2213 -123.4137 Td
(3110 print ".globl alltraps\\n";) 161.8613 Tj
-5.2213 -132.9071 Td
(3111 for\(my $i = 0; $i < 256; $i++\){) 187.968 Tj
-5.2213 -142.4004 Td
(3112     print ".globl vector$i\\n";) 182.7466 Tj
-5.2213 -151.8938 Td
(3113     print "vector$i:\\n";) 151.4186 Tj
-5.2213 -161.3871 Td
(3114     if\(\($i < 8 || $i > 14\) && $i != 17\){) 234.9599 Tj
-5.2213 -170.8805 Td
(3115         print "  pushl \\$0\\n";) 182.7466 Tj
-5.2213 -180.3739 Td
(3116     }) 52.2133 Tj
-5.2213 -189.8672 Td
(3117     print "  pushl \\$$i\\n";) 167.0826 Tj
-5.2213 -199.3606 Td
(3118     print "  jmp alltraps\\n";) 177.5253 Tj
-5.2213 -208.8539 Td
(3119 }) 31.328 Tj
-5.2213 -218.3473 Td
(3120 ) 26.1067 Tj
-5.2213 -227.8407 Td
(3121 print "\\n# vector table\\n";) 167.0826 Tj
-5.2213 -237.334 Td
(3122 print ".data\\n";) 109.648 Tj
-5.2213 -246.8274 Td
(3123 print ".globl vectors\\n";) 156.64 Tj
-5.2213 -256.3207 Td
(3124 print "vectors:\\n";) 125.312 Tj
-5.2213 -265.8141 Td
(3125 for\(my $i = 0; $i < 256; $i++\){) 187.968 Tj
-5.2213 -275.3075 Td
(3126     print "  .long vector$i\\n";) 187.968 Tj
-5.2213 -284.8008 Td
(3127 }) 31.328 Tj
-5.2213 -294.2942 Td
(3128 ) 26.1067 Tj
-5.2213 -303.7875 Td
(3129 # sample output:) 109.648 Tj
-5.2213 -313.2809 Td
(3130 #   # handlers) 99.2053 Tj
-5.2213 -322.7743 Td
(3131 #   .text) 73.0986 Tj
-5.2213 -332.2676 Td
(3132 #   .globl alltraps) 125.312 Tj
-5.2213 -341.761 Td
(3133 #   .globl vector0) 120.0906 Tj
-5.2213 -351.2543 Td
(3134 #   vector0:) 88.7626 Tj
-5.2213 -360.7477 Td
(3135 #     pushl $0) 99.2053 Tj
-5.2213 -370.2411 Td
(3136 #     pushl $0) 99.2053 Tj
-5.2213 -379.7344 Td
(3137 #     jmp alltraps) 120.0906 Tj
-5.2213 -389.2278 Td
(3138 #   ...) 62.656 Tj
-5.2213 -398.7211 Td
(3139 #) 31.328 Tj
-5.2213 -408.2145 Td
(3140 #   # vector table) 120.0906 Tj
-5.2213 -417.7079 Td
(3141 #   .data) 73.0986 Tj
-5.2213 -427.2012 Td
(3142 #   .globl vectors) 120.0906 Tj
-5.2213 -436.6946 Td
(3143 #   vectors:) 88.7626 Tj
-5.2213 -446.1879 Td
(3144 #     .long vector0) 125.312 Tj
-5.2213 -455.6813 Td
(3145 #     .long vector1) 125.312 Tj
-5.2213 -465.1747 Td
(3146 #     .long vector2) 125.312 Tj
-5.2213 -474.668 Td
(3147 #   ...) 62.656 Tj
-5.2213 -484.1614 Td
(3148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 31) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/trapasm.S  Page 1) 198.4106 Tj
-5.2213 -28.4801 Td
(3150 .text) 52.2133 Tj
-5.2213 -37.9735 Td
(3151 ) 26.1067 Tj
-5.2213 -47.4668 Td
(3152 .set SEG_KDATA_SEL, 0x10   # selector for SEG_KDATA) 292.3946 Tj
-5.2213 -56.9602 Td
(3153 ) 26.1067 Tj
-5.2213 -66.4535 Td
(3154   # vectors.S sends all traps here.) 208.8533 Tj
-5.2213 -75.9469 Td
(3155 .globl alltraps) 104.4266 Tj
-5.2213 -85.4403 Td
(3156 alltraps:) 73.0986 Tj
-5.2213 -94.9336 Td
(3157   # Build trap frame.) 135.7546 Tj
-5.2213 -104.427 Td
(3158   pushl %ds) 83.5413 Tj
-5.2213 -113.9203 Td
(3159   pushl %es) 83.5413 Tj
-5.2213 -123.4137 Td
(3160   pushal) 67.8773 Tj
-5.2213 -132.9071 Td
(3161 ) 26.1067 Tj
-5.2213 -142.4004 Td
(3162   # Set up data segments.) 156.64 Tj
-5.2213 -151.8938 Td
(3163   movl $SEG_KDATA_SEL, %eax) 167.0826 Tj
-5.2213 -161.3871 Td
(3164   movw %ax,%ds) 99.2053 Tj
-5.2213 -170.8805 Td
(3165   movw %ax,%es) 99.2053 Tj
-5.2213 -180.3739 Td
(3166 ) 26.1067 Tj
-5.2213 -189.8672 Td
(3167   # Call trap\(tf\), where tf=%esp) 193.1893 Tj
-5.2213 -199.3606 Td
(3168   pushl %esp) 88.7626 Tj
-5.2213 -208.8539 Td
(3169   call trap) 83.5413 Tj
-5.2213 -218.3473 Td
(3170   addl $4, %esp) 104.4266 Tj
-5.2213 -227.8407 Td
(3171 ) 26.1067 Tj
-5.2213 -237.334 Td
(3172   # Return falls through to trapret...) 224.5173 Tj
-5.2213 -246.8274 Td
(3173 .globl trapret) 99.2053 Tj
-5.2213 -256.3207 Td
(3174 trapret:) 67.8773 Tj
-5.2213 -265.8141 Td
(3175   popal) 62.656 Tj
-5.2213 -275.3075 Td
(3176   popl %es) 78.32 Tj
-5.2213 -284.8008 Td
(3177   popl %ds) 78.32 Tj
-5.2213 -294.2942 Td
(3178   addl $0x8, %esp  # trapno and errcode) 229.7386 Tj
-5.2213 -303.7875 Td
(3179   iret) 57.4347 Tj
-5.2213 -313.2809 Td
(3180 ) 26.1067 Tj
-5.2213 -322.7743 Td
(3181   # A forked process switches to user mode by calling) 302.8373 Tj
-5.2213 -332.2676 Td
(3182   # forkret1\(tf\), where tf is the trap frame to use.) 297.6159 Tj
-5.2213 -341.761 Td
(3183 .globl forkret1) 104.4266 Tj
-5.2213 -351.2543 Td
(3184 forkret1:) 73.0986 Tj
-5.2213 -360.7477 Td
(3185   movl 4\(%esp\), %esp) 130.5333 Tj
-5.2213 -370.2411 Td
(3186   jmp trapret) 93.984 Tj
-5.2213 -379.7344 Td
(3187 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3188 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3189 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3190 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3191 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3192 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3193 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3194 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3195 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3196 ) 26.1067 Tj
-5.2213 -474.668 Td
(3197 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3198 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 31) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 41 41
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/trap.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(3200 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(3201 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(3202 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(3203 #include "mmu.h") 109.648 Tj
-5.2213 -66.4535 Td
(3204 #include "proc.h") 114.8693 Tj
-5.2213 -75.9469 Td
(3205 #include "x86.h") 109.648 Tj
-5.2213 -85.4403 Td
(3206 #include "traps.h") 120.0906 Tj
-5.2213 -94.9336 Td
(3207 #include "spinlock.h") 135.7546 Tj
-5.2213 -104.427 Td
(3208 #include "picirq.h") 125.312 Tj
-5.2213 -113.9203 Td
(3209 ) 26.1067 Tj
-5.2213 -123.4137 Td
(3210 // Interrupt descriptor table \(shared by all CPUs\).) 292.3946 Tj
-5.2213 -132.9071 Td
(3211 struct gatedesc idt[256];) 156.64 Tj
-5.2213 -142.4004 Td
(3212 extern uint vectors[];  // in vectors.S: array of 256 entr\
y pointers) 381.1572 Tj
-5.2213 -151.8938 Td
(3213 struct spinlock tickslock;) 161.8613 Tj
-5.2213 -161.3871 Td
(3214 int ticks;) 78.32 Tj
-5.2213 -170.8805 Td
(3215 ) 26.1067 Tj
-5.2213 -180.3739 Td
(3216 void) 46.992 Tj
-5.2213 -189.8672 Td
(3217 tvinit\(void\)) 88.7626 Tj
-5.2213 -199.3606 Td
(3218 {) 31.328 Tj
-5.2213 -208.8539 Td
(3219   int i;) 67.8773 Tj
-5.2213 -218.3473 Td
(3220 ) 26.1067 Tj
-5.2213 -227.8407 Td
(3221   for\(i = 0; i < 256; i++\)) 161.8613 Tj
-5.2213 -237.334 Td
(3222     SETGATE\(idt[i], 0, SEG_KCODE<<3, vectors[i], 0\);) 297.6159 Tj
-5.2213 -246.8274 Td
(3223   SETGATE\(idt[T_SYSCALL], 0, SEG_KCODE<<3, vectors[T_SYSC\
ALL], DPL_USER\);) 407.2639 Tj
-5.2213 -256.3207 Td
(3224 ) 26.1067 Tj
-5.2213 -265.8141 Td
(3225   initlock\(&tickslock, "time"\);) 187.968 Tj
-5.2213 -275.3075 Td
(3226 }) 31.328 Tj
-5.2213 -284.8008 Td
(3227 ) 26.1067 Tj
-5.2213 -294.2942 Td
(3228 void) 46.992 Tj
-5.2213 -303.7875 Td
(3229 idtinit\(void\)) 93.984 Tj
-5.2213 -313.2809 Td
(3230 {) 31.328 Tj
-5.2213 -322.7743 Td
(3231   lidt\(idt, sizeof\(idt\)\);) 156.64 Tj
-5.2213 -332.2676 Td
(3232 }) 31.328 Tj
-5.2213 -341.761 Td
(3233 ) 26.1067 Tj
-5.2213 -351.2543 Td
(3234 void) 46.992 Tj
-5.2213 -360.7477 Td
(3235 trap\(struct trapframe *tf\)) 161.8613 Tj
-5.2213 -370.2411 Td
(3236 {) 31.328 Tj
-5.2213 -379.7344 Td
(3237   if\(tf->trapno == T_SYSCALL\){) 182.7466 Tj
-5.2213 -389.2278 Td
(3238     if\(cp->killed\)) 120.0906 Tj
-5.2213 -398.7211 Td
(3239       exit\(\);) 93.984 Tj
-5.2213 -408.2145 Td
(3240     cp->tf = tf;) 109.648 Tj
-5.2213 -417.7079 Td
(3241     syscall\(\);) 99.2053 Tj
-5.2213 -427.2012 Td
(3242     if\(cp->killed\)) 120.0906 Tj
-5.2213 -436.6946 Td
(3243       exit\(\);) 93.984 Tj
-5.2213 -446.1879 Td
(3244     return;) 83.5413 Tj
-5.2213 -455.6813 Td
(3245   }) 41.7707 Tj
-5.2213 -465.1747 Td
(3246 ) 26.1067 Tj
-5.2213 -474.668 Td
(3247   // Increment nlock to make sure interrupts stay off) 302.8373 Tj
-5.2213 -484.1614 Td
(3248   // during interrupt handler.  Decrement before returning\
.) 334.1652 Tj
-5.2213 -493.6547 Td
(3249   cpus[cpu\(\)].nlock++;) 140.976 Tj
-5.2213 -522.1348 Td
(Sheet 32) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/trap.c  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(3250   switch\(tf->trapno\){) 135.7546 Tj
-5.2213 -37.9735 Td
(3251   case IRQ_OFFSET + IRQ_TIMER:) 182.7466 Tj
-5.2213 -47.4668 Td
(3252     if\(cpu\(\) == 0\){) 125.312 Tj
-5.2213 -56.9602 Td
(3253       acquire\(&tickslock\);) 161.8613 Tj
-5.2213 -66.4535 Td
(3254       ticks++;) 99.2053 Tj
-5.2213 -75.9469 Td
(3255       wakeup\(&ticks\);) 135.7546 Tj
-5.2213 -85.4403 Td
(3256       release\(&tickslock\);) 161.8613 Tj
-5.2213 -94.9336 Td
(3257     }) 52.2133 Tj
-5.2213 -104.427 Td
(3258     lapic_eoi\(\);) 109.648 Tj
-5.2213 -113.9203 Td
(3259     break;) 78.32 Tj
-5.2213 -123.4137 Td
(3260   case IRQ_OFFSET + IRQ_IDE:) 172.304 Tj
-5.2213 -132.9071 Td
(3261     ide_intr\(\);) 104.4266 Tj
-5.2213 -142.4004 Td
(3262     lapic_eoi\(\);) 109.648 Tj
-5.2213 -151.8938 Td
(3263     break;) 78.32 Tj
-5.2213 -161.3871 Td
(3264   case IRQ_OFFSET + IRQ_KBD:) 172.304 Tj
-5.2213 -170.8805 Td
(3265     kbd_intr\(\);) 104.4266 Tj
-5.2213 -180.3739 Td
(3266     lapic_eoi\(\);) 109.648 Tj
-5.2213 -189.8672 Td
(3267     break;) 78.32 Tj
-5.2213 -199.3606 Td
(3268   case IRQ_OFFSET + IRQ_SPURIOUS:) 198.4106 Tj
-5.2213 -208.8539 Td
(3269     cprintf\("spurious interrupt from cpu %d eip %x\\n", c\
pu\(\), tf->eip\);) 396.8212 Tj
-5.2213 -218.3473 Td
(3270     lapic_eoi\(\);) 109.648 Tj
-5.2213 -227.8407 Td
(3271     break;) 78.32 Tj
-5.2213 -237.334 Td
(3272 ) 26.1067 Tj
-5.2213 -246.8274 Td
(3273   default:) 78.32 Tj
-5.2213 -256.3207 Td
(3274 //    if \(tf->trapno <= 30\)) 167.0826 Tj
-5.2213 -265.8141 Td
(3275 //    {) 62.656 Tj
-5.2213 -275.3075 Td
(3276     if \(\(tf->trapno >= IRQ_OFFSET\) && \(tf->trapno <= I\
RQ_MAX\)\)) 349.8292 Tj
-5.2213 -284.8008 Td
(3277         if \(irq_handler[tf->trapno - IRQ_OFFSET]\)) 281.9519 Tj
-5.2213 -294.2942 Td
(3278         {) 73.0986 Tj
-5.2213 -303.7875 Td
(3279 //            cprintf\("IRQ %d goes to handler\\n", tf->tr\
apno\);) 349.8292 Tj
-5.2213 -313.2809 Td
(3280             irq_handler[tf->trapno - IRQ_OFFSET]\(tf\);) 302.8373 Tj
-5.2213 -322.7743 Td
(3281             lapic_eoi\(\);) 151.4186 Tj
-5.2213 -332.2676 Td
(3282             break;) 120.0906 Tj
-5.2213 -341.761 Td
(3283         }) 73.0986 Tj
-5.2213 -351.2543 Td
(3284     if\(cp == 0\){) 109.648 Tj
-5.2213 -360.7477 Td
(3285       // Otherwise it's our mistake.) 214.0746 Tj
-5.2213 -370.2411 Td
(3286       cprintf\("unexpected trap %d from cpu %d eip %x\\n",) 318.5013 Tj
-5.2213 -379.7344 Td
(3287               tf->trapno, cpu\(\), tf->eip\);) 245.4026 Tj
-5.2213 -389.2278 Td
(3288 //      panic\("trap"\);) 140.976 Tj
-5.2213 -398.7211 Td
(3289     }) 52.2133 Tj
-5.2213 -408.2145 Td
(3290     else) 67.8773 Tj
-5.2213 -417.7079 Td
(3291     {) 52.2133 Tj
-5.2213 -427.2012 Td
(3292         // Assume process divided by zero or dereferenced \
null, etc.) 381.1572 Tj
-5.2213 -436.6946 Td
(3293         cprintf\("pid %d %s: trap %d err %d") 250.6239 Tj
-5.2213 -446.1879 Td
(3294                 "on cpu %d eip %x -- kill proc\\n",) 287.1733 Tj
-5.2213 -455.6813 Td
(3295             cp->pid, cp->name, tf->trapno, tf->err, cpu\(\)\
, tf->eip\);) 381.1572 Tj
-5.2213 -465.1747 Td
(3296         cp->killed = 1;) 146.1973 Tj
-5.2213 -474.668 Td
(3297     }) 52.2133 Tj
-5.2213 -484.1614 Td
(3298 //    }) 62.656 Tj
-5.2213 -493.6547 Td
(3299   }) 41.7707 Tj
-5.2213 -522.1348 Td
(Sheet 32) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 42 42
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/trap.c  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(3300   cpus[cpu\(\)].nlock--;) 140.976 Tj
-5.2213 -37.9735 Td
(3301 ) 26.1067 Tj
-5.2213 -47.4668 Td
(3302   // Force process exit if it has been killed and is in us\
er space.) 375.9359 Tj
-5.2213 -56.9602 Td
(3303   // \(If it is still executing in the kernel, let it keep\
 running) 365.4932 Tj
-5.2213 -66.4535 Td
(3304   // until it gets to the regular system call return.\)) 308.0586 Tj
-5.2213 -75.9469 Td
(3305   if\(cp && cp->killed && \(tf->cs&3\) == DPL_USER\)) 276.7306 Tj
-5.2213 -85.4403 Td
(3306     exit\(\);) 83.5413 Tj
-5.2213 -94.9336 Td
(3307 ) 26.1067 Tj
-5.2213 -104.427 Td
(3308   // Force process to give up CPU on clock tick.) 276.7306 Tj
-5.2213 -113.9203 Td
(3309   // If interrupts were on while locks held, would need to\
 check nlock.) 396.8212 Tj
-5.2213 -123.4137 Td
(3310   if\(cp && cp->state == RUNNING && tf->trapno == IRQ_OFFS\
ET+IRQ_TIMER\)) 391.5999 Tj
-5.2213 -132.9071 Td
(3311     yield\(\);) 88.7626 Tj
-5.2213 -142.4004 Td
(3312 }) 31.328 Tj
-5.2213 -151.8938 Td
(3313 ) 26.1067 Tj
-5.2213 -161.3871 Td
(3314 ) 26.1067 Tj
-5.2213 -170.8805 Td
(3315 ) 26.1067 Tj
-5.2213 -180.3739 Td
(3316 ) 26.1067 Tj
-5.2213 -189.8672 Td
(3317 ) 26.1067 Tj
-5.2213 -199.3606 Td
(3318 ) 26.1067 Tj
-5.2213 -208.8539 Td
(3319 ) 26.1067 Tj
-5.2213 -218.3473 Td
(3320 ) 26.1067 Tj
-5.2213 -227.8407 Td
(3321 ) 26.1067 Tj
-5.2213 -237.334 Td
(3322 ) 26.1067 Tj
-5.2213 -246.8274 Td
(3323 ) 26.1067 Tj
-5.2213 -256.3207 Td
(3324 ) 26.1067 Tj
-5.2213 -265.8141 Td
(3325 ) 26.1067 Tj
-5.2213 -275.3075 Td
(3326 ) 26.1067 Tj
-5.2213 -284.8008 Td
(3327 ) 26.1067 Tj
-5.2213 -294.2942 Td
(3328 ) 26.1067 Tj
-5.2213 -303.7875 Td
(3329 ) 26.1067 Tj
-5.2213 -313.2809 Td
(3330 ) 26.1067 Tj
-5.2213 -322.7743 Td
(3331 ) 26.1067 Tj
-5.2213 -332.2676 Td
(3332 ) 26.1067 Tj
-5.2213 -341.761 Td
(3333 ) 26.1067 Tj
-5.2213 -351.2543 Td
(3334 ) 26.1067 Tj
-5.2213 -360.7477 Td
(3335 ) 26.1067 Tj
-5.2213 -370.2411 Td
(3336 ) 26.1067 Tj
-5.2213 -379.7344 Td
(3337 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3338 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3339 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3340 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3341 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3342 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3344 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3345 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3346 ) 26.1067 Tj
-5.2213 -474.668 Td
(3347 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3348 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3349 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 33) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/syscall.h  Page 1) 198.4106 Tj
-5.2213 -28.4801 Td
(3350 // System call numbers) 140.976 Tj
-5.2213 -37.9735 Td
(3351 #define SYS_fork    1) 135.7546 Tj
-5.2213 -47.4668 Td
(3352 #define SYS_exit    2) 135.7546 Tj
-5.2213 -56.9602 Td
(3353 #define SYS_wait    3) 135.7546 Tj
-5.2213 -66.4535 Td
(3354 #define SYS_pipe    4) 135.7546 Tj
-5.2213 -75.9469 Td
(3355 #define SYS_write   5) 135.7546 Tj
-5.2213 -85.4403 Td
(3356 #define SYS_read    6) 135.7546 Tj
-5.2213 -94.9336 Td
(3357 #define SYS_close   7) 135.7546 Tj
-5.2213 -104.427 Td
(3358 #define SYS_kill    8) 135.7546 Tj
-5.2213 -113.9203 Td
(3359 #define SYS_exec    9) 135.7546 Tj
-5.2213 -123.4137 Td
(3360 #define SYS_open   10) 135.7546 Tj
-5.2213 -132.9071 Td
(3361 #define SYS_mknod  11) 135.7546 Tj
-5.2213 -142.4004 Td
(3362 #define SYS_unlink 12) 135.7546 Tj
-5.2213 -151.8938 Td
(3363 #define SYS_fstat  13) 135.7546 Tj
-5.2213 -161.3871 Td
(3364 #define SYS_link   14) 135.7546 Tj
-5.2213 -170.8805 Td
(3365 #define SYS_mkdir  15) 135.7546 Tj
-5.2213 -180.3739 Td
(3366 #define SYS_chdir  16) 135.7546 Tj
-5.2213 -189.8672 Td
(3367 #define SYS_dup    17) 135.7546 Tj
-5.2213 -199.3606 Td
(3368 #define SYS_getpid 18) 135.7546 Tj
-5.2213 -208.8539 Td
(3369 #define SYS_sbrk   19) 135.7546 Tj
-5.2213 -218.3473 Td
(3370 #define SYS_sleep  20) 135.7546 Tj
-5.2213 -227.8407 Td
(3371 #define SYS_upmsec 21) 135.7546 Tj
-5.2213 -237.334 Td
(3372 #define SYS_socket 22) 135.7546 Tj
-5.2213 -246.8274 Td
(3373 #define SYS_bind   23) 135.7546 Tj
-5.2213 -256.3207 Td
(3374 #define SYS_listen 24) 135.7546 Tj
-5.2213 -265.8141 Td
(3375 #define SYS_accept 25) 135.7546 Tj
-5.2213 -275.3075 Td
(3376 #define SYS_recv   26) 135.7546 Tj
-5.2213 -284.8008 Td
(3377 #define SYS_recvfrom 27) 146.1973 Tj
-5.2213 -294.2942 Td
(3378 #define SYS_send    28) 140.976 Tj
-5.2213 -303.7875 Td
(3379 #define SYS_sendto  29) 140.976 Tj
-5.2213 -313.2809 Td
(3380 #define SYS_shutdown 30) 146.1973 Tj
-5.2213 -322.7743 Td
(3381 #define SYS_getsockopt 31) 156.64 Tj
-5.2213 -332.2676 Td
(3382 #define SYS_setsockopt 32) 156.64 Tj
-5.2213 -341.761 Td
(3383 #define SYS_sockclose 33) 151.4186 Tj
-5.2213 -351.2543 Td
(3384 #define SYS_connect 34) 140.976 Tj
-5.2213 -360.7477 Td
(3385 #define SYS_getpeername 35) 161.8613 Tj
-5.2213 -370.2411 Td
(3386 #define SYS_getsockname 36) 161.8613 Tj
-5.2213 -379.7344 Td
(3387 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3388 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3389 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3390 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3391 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3392 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3393 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3394 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3395 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3396 ) 26.1067 Tj
-5.2213 -474.668 Td
(3397 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 33) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 43 43
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/syscall.c  Page 1) 198.4106 Tj
-5.2213 -28.4801 Td
(3400 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(3401 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(3402 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(3403 #include "mmu.h") 109.648 Tj
-5.2213 -66.4535 Td
(3404 #include "proc.h") 114.8693 Tj
-5.2213 -75.9469 Td
(3405 #include "x86.h") 109.648 Tj
-5.2213 -85.4403 Td
(3406 #include "syscall.h") 130.5333 Tj
-5.2213 -94.9336 Td
(3407 ) 26.1067 Tj
-5.2213 -104.427 Td
(3408 // User code makes a system call with INT T_SYSCALL.) 297.6159 Tj
-5.2213 -113.9203 Td
(3409 // System call number in %eax.) 182.7466 Tj
-5.2213 -123.4137 Td
(3410 // Arguments on the stack, from the user call to the C) 308.0586 Tj
-5.2213 -132.9071 Td
(3411 // library system call function. The saved user %esp point\
s) 334.1652 Tj
-5.2213 -142.4004 Td
(3412 // to a saved program counter, and then the first argument\
.) 334.1652 Tj
-5.2213 -151.8938 Td
(3413 ) 26.1067 Tj
-5.2213 -161.3871 Td
(3414 // Fetch the int at addr from process p.) 234.9599 Tj
-5.2213 -170.8805 Td
(3415 int) 41.7707 Tj
-5.2213 -180.3739 Td
(3416 fetchint\(struct proc *p, uint addr, int *ip\)) 255.8453 Tj
-5.2213 -189.8672 Td
(3417 {) 31.328 Tj
-5.2213 -199.3606 Td
(3418   if\(addr >= p->sz || addr+4 > p->sz\)) 219.2959 Tj
-5.2213 -208.8539 Td
(3419     return -1;) 99.2053 Tj
-5.2213 -218.3473 Td
(3420   *ip = *\(int*\)\(p->mem + addr\);) 187.968 Tj
-5.2213 -227.8407 Td
(3421   return 0;) 83.5413 Tj
-5.2213 -237.334 Td
(3422 }) 31.328 Tj
-5.2213 -246.8274 Td
(3423 ) 26.1067 Tj
-5.2213 -256.3207 Td
(3424 // Fetch the nul-terminated string at addr from process p.) 328.9439 Tj
-5.2213 -265.8141 Td
(3425 // Doesn't actually copy the string - just sets *pp to poi\
nt at it.) 375.9359 Tj
-5.2213 -275.3075 Td
(3426 // Returns length of string, not including nul.) 271.5093 Tj
-5.2213 -284.8008 Td
(3427 int) 41.7707 Tj
-5.2213 -294.2942 Td
(3428 fetchstr\(struct proc *p, uint addr, char **pp\)) 266.2879 Tj
-5.2213 -303.7875 Td
(3429 {) 31.328 Tj
-5.2213 -313.2809 Td
(3430   char *s, *ep;) 104.4266 Tj
-5.2213 -322.7743 Td
(3431 ) 26.1067 Tj
-5.2213 -332.2676 Td
(3432   if\(addr >= p->sz\)) 125.312 Tj
-5.2213 -341.761 Td
(3433     return -1;) 99.2053 Tj
-5.2213 -351.2543 Td
(3434   *pp = p->mem + addr;) 140.976 Tj
-5.2213 -360.7477 Td
(3435   ep = p->mem + p->sz;) 140.976 Tj
-5.2213 -370.2411 Td
(3436   for\(s = *pp; s < ep; s++\)) 167.0826 Tj
-5.2213 -379.7344 Td
(3437     if\(*s == 0\)) 104.4266 Tj
-5.2213 -389.2278 Td
(3438       return s - *pp;) 135.7546 Tj
-5.2213 -398.7211 Td
(3439   return -1;) 88.7626 Tj
-5.2213 -408.2145 Td
(3440 }) 31.328 Tj
-5.2213 -417.7079 Td
(3441 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3442 // Fetch the nth 32-bit system call argument.) 261.0666 Tj
-5.2213 -436.6946 Td
(3443 int) 41.7707 Tj
-5.2213 -446.1879 Td
(3444 argint\(int n, int *ip\)) 140.976 Tj
-5.2213 -455.6813 Td
(3445 {) 31.328 Tj
-5.2213 -465.1747 Td
(3446   return fetchint\(cp, cp->tf->esp + 4 + 4*n, ip\);) 281.9519 Tj
-5.2213 -474.668 Td
(3447 }) 31.328 Tj
-5.2213 -484.1614 Td
(3448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 34) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/syscall.c  Page 2) 198.4106 Tj
-5.2213 -28.4801 Td
(3450 // Fetch the nth word-sized system call argument as a poin\
ter) 344.6079 Tj
-5.2213 -37.9735 Td
(3451 // to a block of memory of size n bytes.  Check that the p\
ointer) 360.2719 Tj
-5.2213 -47.4668 Td
(3452 // lies within the process address space.) 240.1813 Tj
-5.2213 -56.9602 Td
(3453 int) 41.7707 Tj
-5.2213 -66.4535 Td
(3454 argptr\(int n, char **pp, int size\)) 203.6319 Tj
-5.2213 -75.9469 Td
(3455 {) 31.328 Tj
-5.2213 -85.4403 Td
(3456   int i;) 67.8773 Tj
-5.2213 -94.9336 Td
(3457 ) 26.1067 Tj
-5.2213 -104.427 Td
(3458   if\(argint\(n, &i\) < 0\)) 146.1973 Tj
-5.2213 -113.9203 Td
(3459     return -1;) 99.2053 Tj
-5.2213 -123.4137 Td
(3460   if\(\(uint\)i >= cp->sz || \(uint\)i+size >= cp->sz\)) 281.9519 Tj
-5.2213 -132.9071 Td
(3461     return -1;) 99.2053 Tj
-5.2213 -142.4004 Td
(3462   *pp = cp->mem + i;) 130.5333 Tj
-5.2213 -151.8938 Td
(3463   return 0;) 83.5413 Tj
-5.2213 -161.3871 Td
(3464 }) 31.328 Tj
-5.2213 -170.8805 Td
(3465 ) 26.1067 Tj
-5.2213 -180.3739 Td
(3466 // Fetch the nth word-sized system call argument as a stri\
ng pointer.) 386.3786 Tj
-5.2213 -189.8672 Td
(3467 // Check that the pointer is valid and the string is nul-t\
erminated.) 381.1572 Tj
-5.2213 -199.3606 Td
(3468 // \(There is no shared writable memory, so the string can\
't change) 370.7146 Tj
-5.2213 -208.8539 Td
(3469 // between this check and being used by the kernel.\)) 297.6159 Tj
-5.2213 -218.3473 Td
(3470 int) 41.7707 Tj
-5.2213 -227.8407 Td
(3471 argstr\(int n, char **pp\)) 151.4186 Tj
-5.2213 -237.334 Td
(3472 {) 31.328 Tj
-5.2213 -246.8274 Td
(3473   int addr;) 83.5413 Tj
-5.2213 -256.3207 Td
(3474   if\(argint\(n, &addr\) < 0\)) 161.8613 Tj
-5.2213 -265.8141 Td
(3475     return -1;) 99.2053 Tj
-5.2213 -275.3075 Td
(3476   return fetchstr\(cp, addr, pp\);) 193.1893 Tj
-5.2213 -284.8008 Td
(3477 }) 31.328 Tj
-5.2213 -294.2942 Td
(3478 ) 26.1067 Tj
-5.2213 -303.7875 Td
(3479 extern int sys_chdir\(void\);) 167.0826 Tj
-5.2213 -313.2809 Td
(3480 extern int sys_close\(void\);) 167.0826 Tj
-5.2213 -322.7743 Td
(3481 extern int sys_dup\(void\);) 156.64 Tj
-5.2213 -332.2676 Td
(3482 extern int sys_exec\(void\);) 161.8613 Tj
-5.2213 -341.761 Td
(3483 extern int sys_exit\(void\);) 161.8613 Tj
-5.2213 -351.2543 Td
(3484 extern int sys_fork\(void\);) 161.8613 Tj
-5.2213 -360.7477 Td
(3485 extern int sys_fstat\(void\);) 167.0826 Tj
-5.2213 -370.2411 Td
(3486 extern int sys_getpid\(void\);) 172.304 Tj
-5.2213 -379.7344 Td
(3487 extern int sys_kill\(void\);) 161.8613 Tj
-5.2213 -389.2278 Td
(3488 extern int sys_link\(void\);) 161.8613 Tj
-5.2213 -398.7211 Td
(3489 extern int sys_mkdir\(void\);) 167.0826 Tj
-5.2213 -408.2145 Td
(3490 extern int sys_mknod\(void\);) 167.0826 Tj
-5.2213 -417.7079 Td
(3491 extern int sys_open\(void\);) 161.8613 Tj
-5.2213 -427.2012 Td
(3492 extern int sys_pipe\(void\);) 161.8613 Tj
-5.2213 -436.6946 Td
(3493 extern int sys_read\(void\);) 161.8613 Tj
-5.2213 -446.1879 Td
(3494 extern int sys_sbrk\(void\);) 161.8613 Tj
-5.2213 -455.6813 Td
(3495 extern int sys_sleep\(void\);) 167.0826 Tj
-5.2213 -465.1747 Td
(3496 extern int sys_unlink\(void\);) 172.304 Tj
-5.2213 -474.668 Td
(3497 extern int sys_wait\(void\);) 161.8613 Tj
-5.2213 -484.1614 Td
(3498 extern int sys_write\(void\);) 167.0826 Tj
-5.2213 -493.6547 Td
(3499 extern int sys_upmsec\(void\);) 172.304 Tj
-5.2213 -522.1348 Td
(Sheet 34) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 44 44
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/syscall.c  Page 3) 198.4106 Tj
-5.2213 -28.4801 Td
(3500 // BSD sockets) 99.2053 Tj
-5.2213 -37.9735 Td
(3501 extern int sys_accept\(void\);) 172.304 Tj
-5.2213 -47.4668 Td
(3502 extern int sys_bind\(void\);) 161.8613 Tj
-5.2213 -56.9602 Td
(3503 extern int sys_shutdown\(void\);) 182.7466 Tj
-5.2213 -66.4535 Td
(3504 extern int sys_getsockopt\(void\);) 193.1893 Tj
-5.2213 -75.9469 Td
(3505 extern int sys_setsockopt\(void\);) 193.1893 Tj
-5.2213 -85.4403 Td
(3506 extern int sys_sockclose\(void\);) 187.968 Tj
-5.2213 -94.9336 Td
(3507 extern int sys_connect\(void\);) 177.5253 Tj
-5.2213 -104.427 Td
(3508 extern int sys_listen\(void\);) 172.304 Tj
-5.2213 -113.9203 Td
(3509 extern int sys_recv\(void\);) 161.8613 Tj
-5.2213 -123.4137 Td
(3510 extern int sys_recvfrom\(void\);) 182.7466 Tj
-5.2213 -132.9071 Td
(3511 extern int sys_send\(void\);) 161.8613 Tj
-5.2213 -142.4004 Td
(3512 extern int sys_sendto\(void\);) 172.304 Tj
-5.2213 -151.8938 Td
(3513 extern int sys_socket\(void\);) 172.304 Tj
-5.2213 -161.3871 Td
(3514 extern int sys_getpeername \(void\);) 203.6319 Tj
-5.2213 -170.8805 Td
(3515 extern int sys_getsockname \(void\);) 203.6319 Tj
-5.2213 -180.3739 Td
(3516 //int lwip_read\(int s, void *mem, int len\);) 250.6239 Tj
-5.2213 -189.8672 Td
(3517 //int lwip_write\(int s, void *dataptr, int size\);) 281.9519 Tj
-5.2213 -199.3606 Td
(3518 //int lwip_select\(int maxfdp1, fd_set *readset, fd_set *w\
riteset, fd_set *exceptset,) 464.6985 Tj
-5.2213 -208.8539 Td
(3519 //                struct timeval *timeout\);) 250.6239 Tj
-5.2213 -218.3473 Td
(3520 //extern int sys_sockioctl\(void\);) 198.4106 Tj
-5.2213 -227.8407 Td
(3521 ) 26.1067 Tj
-5.2213 -237.334 Td
(3522 static int \(*syscalls[]\)\(void\) = {) 203.6319 Tj
-5.2213 -246.8274 Td
(3523 [SYS_chdir]   sys_chdir,) 151.4186 Tj
-5.2213 -256.3207 Td
(3524 [SYS_close]   sys_close,) 151.4186 Tj
-5.2213 -265.8141 Td
(3525 [SYS_dup]     sys_dup,) 140.976 Tj
-5.2213 -275.3075 Td
(3526 [SYS_exec]    sys_exec,) 146.1973 Tj
-5.2213 -284.8008 Td
(3527 [SYS_exit]    sys_exit,) 146.1973 Tj
-5.2213 -294.2942 Td
(3528 [SYS_fork]    sys_fork,) 146.1973 Tj
-5.2213 -303.7875 Td
(3529 [SYS_fstat]   sys_fstat,) 151.4186 Tj
-5.2213 -313.2809 Td
(3530 [SYS_getpid]  sys_getpid,) 156.64 Tj
-5.2213 -322.7743 Td
(3531 [SYS_kill]    sys_kill,) 146.1973 Tj
-5.2213 -332.2676 Td
(3532 [SYS_link]    sys_link,) 146.1973 Tj
-5.2213 -341.761 Td
(3533 [SYS_mkdir]   sys_mkdir,) 151.4186 Tj
-5.2213 -351.2543 Td
(3534 [SYS_mknod]   sys_mknod,) 151.4186 Tj
-5.2213 -360.7477 Td
(3535 [SYS_open]    sys_open,) 146.1973 Tj
-5.2213 -370.2411 Td
(3536 [SYS_pipe]    sys_pipe,) 146.1973 Tj
-5.2213 -379.7344 Td
(3537 [SYS_read]    sys_read,) 146.1973 Tj
-5.2213 -389.2278 Td
(3538 [SYS_sbrk]    sys_sbrk,) 146.1973 Tj
-5.2213 -398.7211 Td
(3539 [SYS_sleep]   sys_sleep,) 151.4186 Tj
-5.2213 -408.2145 Td
(3540 [SYS_unlink]  sys_unlink,) 156.64 Tj
-5.2213 -417.7079 Td
(3541 [SYS_wait]    sys_wait,) 146.1973 Tj
-5.2213 -427.2012 Td
(3542 [SYS_write]   sys_write,) 151.4186 Tj
-5.2213 -436.6946 Td
(3543 [SYS_upmsec]  sys_upmsec,) 156.64 Tj
-5.2213 -446.1879 Td
(3544 // BSD socket) 93.984 Tj
-5.2213 -455.6813 Td
(3545 [SYS_socket]  sys_socket,) 156.64 Tj
-5.2213 -465.1747 Td
(3546 [SYS_bind]    sys_bind,) 146.1973 Tj
-5.2213 -474.668 Td
(3547 [SYS_listen]  sys_listen,) 156.64 Tj
-5.2213 -484.1614 Td
(3548 [SYS_accept]  sys_accept,) 156.64 Tj
-5.2213 -493.6547 Td
(3549 [SYS_recv]    sys_recv,) 146.1973 Tj
-5.2213 -522.1348 Td
(Sheet 35) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/syscall.c  Page 4) 198.4106 Tj
-5.2213 -28.4801 Td
(3550 [SYS_recvfrom] sys_recvfrom,) 172.304 Tj
-5.2213 -37.9735 Td
(3551 [SYS_send]    sys_send,) 146.1973 Tj
-5.2213 -47.4668 Td
(3552 [SYS_sendto]  sys_sendto,) 156.64 Tj
-5.2213 -56.9602 Td
(3553 [SYS_shutdown] sys_shutdown,) 172.304 Tj
-5.2213 -66.4535 Td
(3554 [SYS_getsockopt] sys_getsockopt,) 193.1893 Tj
-5.2213 -75.9469 Td
(3555 [SYS_setsockopt] sys_setsockopt,) 193.1893 Tj
-5.2213 -85.4403 Td
(3556 [SYS_sockclose] sys_sockclose,) 182.7466 Tj
-5.2213 -94.9336 Td
(3557 [SYS_connect] sys_connect,) 161.8613 Tj
-5.2213 -104.427 Td
(3558 [SYS_getpeername] sys_getpeername,) 203.6319 Tj
-5.2213 -113.9203 Td
(3559 [SYS_getsockname] sys_getsockname,) 203.6319 Tj
-5.2213 -123.4137 Td
(3560 };) 36.5493 Tj
-5.2213 -132.9071 Td
(3561 ) 26.1067 Tj
-5.2213 -142.4004 Td
(3562 void) 46.992 Tj
-5.2213 -151.8938 Td
(3563 syscall\(void\)) 93.984 Tj
-5.2213 -161.3871 Td
(3564 {) 31.328 Tj
-5.2213 -170.8805 Td
(3565   int num;) 78.32 Tj
-5.2213 -180.3739 Td
(3566 ) 26.1067 Tj
-5.2213 -189.8672 Td
(3567   num = cp->tf->eax;) 130.5333 Tj
-5.2213 -199.3606 Td
(3568   if\(num >= 0 && num < NELEM\(syscalls\) && syscalls[num]\
\)) 318.5013 Tj
-5.2213 -208.8539 Td
(3569     cp->tf->eax = syscalls[num]\(\);) 203.6319 Tj
-5.2213 -218.3473 Td
(3570   else {) 67.8773 Tj
-5.2213 -227.8407 Td
(3571     cprintf\("%d %s: unknown sys call %d\\n",) 250.6239 Tj
-5.2213 -237.334 Td
(3572             cp->pid, cp->name, num\);) 214.0746 Tj
-5.2213 -246.8274 Td
(3573     cp->tf->eax = -1;) 135.7546 Tj
-5.2213 -256.3207 Td
(3574   }) 41.7707 Tj
-5.2213 -265.8141 Td
(3575 }) 31.328 Tj
-5.2213 -275.3075 Td
(3576 ) 26.1067 Tj
-5.2213 -284.8008 Td
(3577 ) 26.1067 Tj
-5.2213 -294.2942 Td
(3578 ) 26.1067 Tj
-5.2213 -303.7875 Td
(3579 ) 26.1067 Tj
-5.2213 -313.2809 Td
(3580 ) 26.1067 Tj
-5.2213 -322.7743 Td
(3581 ) 26.1067 Tj
-5.2213 -332.2676 Td
(3582 ) 26.1067 Tj
-5.2213 -341.761 Td
(3583 ) 26.1067 Tj
-5.2213 -351.2543 Td
(3584 ) 26.1067 Tj
-5.2213 -360.7477 Td
(3585 ) 26.1067 Tj
-5.2213 -370.2411 Td
(3586 ) 26.1067 Tj
-5.2213 -379.7344 Td
(3587 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3588 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3589 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3590 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3591 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3592 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3593 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3594 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3595 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3596 ) 26.1067 Tj
-5.2213 -474.668 Td
(3597 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3598 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3599 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 35) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 45 45
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysproc.c  Page 1) 198.4106 Tj
-5.2213 -28.4801 Td
(3600 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(3601 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(3602 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(3603 #include "mmu.h") 109.648 Tj
-5.2213 -66.4535 Td
(3604 #include "proc.h") 114.8693 Tj
-5.2213 -75.9469 Td
(3605 #include "lwip/include/lwip/sockets.h") 224.5173 Tj
-5.2213 -85.4403 Td
(3606 ) 26.1067 Tj
-5.2213 -94.9336 Td
(3607 int) 41.7707 Tj
-5.2213 -104.427 Td
(3608 sys_fork\(void\)) 99.2053 Tj
-5.2213 -113.9203 Td
(3609 {) 31.328 Tj
-5.2213 -123.4137 Td
(3610   struct proc *np;) 120.0906 Tj
-5.2213 -132.9071 Td
(3611 ) 26.1067 Tj
-5.2213 -142.4004 Td
(3612   if\(\(np = copyproc\(cp\)\) == 0\)) 182.7466 Tj
-5.2213 -151.8938 Td
(3613     return -1;) 99.2053 Tj
-5.2213 -161.3871 Td
(3614   np->state = RUNNABLE;) 146.1973 Tj
-5.2213 -170.8805 Td
(3615   return np->pid;) 114.8693 Tj
-5.2213 -180.3739 Td
(3616 }) 31.328 Tj
-5.2213 -189.8672 Td
(3617 ) 26.1067 Tj
-5.2213 -199.3606 Td
(3618 int) 41.7707 Tj
-5.2213 -208.8539 Td
(3619 sys_exit\(void\)) 99.2053 Tj
-5.2213 -218.3473 Td
(3620 {) 31.328 Tj
-5.2213 -227.8407 Td
(3621   exit\(\);) 73.0986 Tj
-5.2213 -237.334 Td
(3622   return 0;  // not reached) 167.0826 Tj
-5.2213 -246.8274 Td
(3623 }) 31.328 Tj
-5.2213 -256.3207 Td
(3624 ) 26.1067 Tj
-5.2213 -265.8141 Td
(3625 int) 41.7707 Tj
-5.2213 -275.3075 Td
(3626 sys_wait\(void\)) 99.2053 Tj
-5.2213 -284.8008 Td
(3627 {) 31.328 Tj
-5.2213 -294.2942 Td
(3628   return wait\(\);) 109.648 Tj
-5.2213 -303.7875 Td
(3629 }) 31.328 Tj
-5.2213 -313.2809 Td
(3630 ) 26.1067 Tj
-5.2213 -322.7743 Td
(3631 int) 41.7707 Tj
-5.2213 -332.2676 Td
(3632 sys_kill\(void\)) 99.2053 Tj
-5.2213 -341.761 Td
(3633 {) 31.328 Tj
-5.2213 -351.2543 Td
(3634   int pid;) 78.32 Tj
-5.2213 -360.7477 Td
(3635 ) 26.1067 Tj
-5.2213 -370.2411 Td
(3636   if\(argint\(0, &pid\) < 0\)) 156.64 Tj
-5.2213 -379.7344 Td
(3637     return -1;) 99.2053 Tj
-5.2213 -389.2278 Td
(3638   return kill\(pid\);) 125.312 Tj
-5.2213 -398.7211 Td
(3639 }) 31.328 Tj
-5.2213 -408.2145 Td
(3640 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3641 int) 41.7707 Tj
-5.2213 -427.2012 Td
(3642 sys_getpid\(void\)) 109.648 Tj
-5.2213 -436.6946 Td
(3643 {) 31.328 Tj
-5.2213 -446.1879 Td
(3644   return cp->pid;) 114.8693 Tj
-5.2213 -455.6813 Td
(3645 }) 31.328 Tj
-5.2213 -465.1747 Td
(3646 ) 26.1067 Tj
-5.2213 -474.668 Td
(3647 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3648 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3649 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 36) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysproc.c  Page 2) 198.4106 Tj
-5.2213 -28.4801 Td
(3650 int) 41.7707 Tj
-5.2213 -37.9735 Td
(3651 sys_sbrk\(void\)) 99.2053 Tj
-5.2213 -47.4668 Td
(3652 {) 31.328 Tj
-5.2213 -56.9602 Td
(3653   int addr;) 83.5413 Tj
-5.2213 -66.4535 Td
(3654   int n;) 67.8773 Tj
-5.2213 -75.9469 Td
(3655 ) 26.1067 Tj
-5.2213 -85.4403 Td
(3656   if\(argint\(0, &n\) < 0\)) 146.1973 Tj
-5.2213 -94.9336 Td
(3657     return -1;) 99.2053 Tj
-5.2213 -104.427 Td
(3658   if\(\(addr = growproc\(n\)\) < 0\)) 182.7466 Tj
-5.2213 -113.9203 Td
(3659     return -1;) 99.2053 Tj
-5.2213 -123.4137 Td
(3660   setupsegs\(cp\);) 109.648 Tj
-5.2213 -132.9071 Td
(3661   return addr;) 99.2053 Tj
-5.2213 -142.4004 Td
(3662 }) 31.328 Tj
-5.2213 -151.8938 Td
(3663 ) 26.1067 Tj
-5.2213 -161.3871 Td
(3664 int) 41.7707 Tj
-5.2213 -170.8805 Td
(3665 sys_sleep\(void\)) 104.4266 Tj
-5.2213 -180.3739 Td
(3666 {) 31.328 Tj
-5.2213 -189.8672 Td
(3667   int n, ticks0;) 109.648 Tj
-5.2213 -199.3606 Td
(3668 ) 26.1067 Tj
-5.2213 -208.8539 Td
(3669   if\(argint\(0, &n\) < 0\)) 146.1973 Tj
-5.2213 -218.3473 Td
(3670     return -1;) 99.2053 Tj
-5.2213 -227.8407 Td
(3671   acquire\(&tickslock\);) 140.976 Tj
-5.2213 -237.334 Td
(3672   ticks0 = ticks;) 114.8693 Tj
-5.2213 -246.8274 Td
(3673   while\(ticks - ticks0 < n\){) 172.304 Tj
-5.2213 -256.3207 Td
(3674     if\(cp->killed\){) 125.312 Tj
-5.2213 -265.8141 Td
(3675       release\(&tickslock\);) 161.8613 Tj
-5.2213 -275.3075 Td
(3676       return -1;) 109.648 Tj
-5.2213 -284.8008 Td
(3677     }) 52.2133 Tj
-5.2213 -294.2942 Td
(3678     sleep\(&ticks, &tickslock\);) 182.7466 Tj
-5.2213 -303.7875 Td
(3679   }) 41.7707 Tj
-5.2213 -313.2809 Td
(3680   release\(&tickslock\);) 140.976 Tj
-5.2213 -322.7743 Td
(3681   return 0;) 83.5413 Tj
-5.2213 -332.2676 Td
(3682 }) 31.328 Tj
-5.2213 -341.761 Td
(3683 ) 26.1067 Tj
-5.2213 -351.2543 Td
(3684 int) 41.7707 Tj
-5.2213 -360.7477 Td
(3685 sys_upmsec\(void\)) 109.648 Tj
-5.2213 -370.2411 Td
(3686 {) 31.328 Tj
-5.2213 -379.7344 Td
(3687     return millitime\(\);) 146.1973 Tj
-5.2213 -389.2278 Td
(3688 }) 31.328 Tj
-5.2213 -398.7211 Td
(3689 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3690 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3691 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3692 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3693 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3694 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3695 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3696 ) 26.1067 Tj
-5.2213 -474.668 Td
(3697 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3698 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3699 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 36) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 46 46
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysproc.c  Page 3) 198.4106 Tj
-5.2213 -28.4801 Td
(3700 int) 41.7707 Tj
-5.2213 -37.9735 Td
(3701 sys_accept\(void\)) 109.648 Tj
-5.2213 -47.4668 Td
(3702 {) 31.328 Tj
-5.2213 -56.9602 Td
(3703     int s;) 78.32 Tj
-5.2213 -66.4535 Td
(3704     struct sockaddr *addr;) 161.8613 Tj
-5.2213 -75.9469 Td
(3705     socklen_t *addrlen;) 146.1973 Tj
-5.2213 -85.4403 Td
(3706     if\(\(argint\(0, &s\)<0\) ||) 167.0826 Tj
-5.2213 -94.9336 Td
(3707             \(argptr\(1, &addr, sizeof\(struct sockaddr\)\)\
<0\) ||) 339.3866 Tj
-5.2213 -104.427 Td
(3708             \(argptr\(2, &addrlen, sizeof\(socklen_t\)\)<0\
\)\)) 313.2799 Tj
-5.2213 -113.9203 Td
(3709         return -1;) 120.0906 Tj
-5.2213 -123.4137 Td
(3710     return lwip_accept\(s, addr, addrlen\);) 240.1813 Tj
-5.2213 -132.9071 Td
(3711 }) 31.328 Tj
-5.2213 -142.4004 Td
(3712 ) 26.1067 Tj
-5.2213 -151.8938 Td
(3713 int) 41.7707 Tj
-5.2213 -161.3871 Td
(3714 sys_bind\(void\)) 99.2053 Tj
-5.2213 -170.8805 Td
(3715 {) 31.328 Tj
-5.2213 -180.3739 Td
(3716     int s;) 78.32 Tj
-5.2213 -189.8672 Td
(3717     struct sockaddr *name;) 161.8613 Tj
-5.2213 -199.3606 Td
(3718     socklen_t *namelen;) 146.1973 Tj
-5.2213 -208.8539 Td
(3719     if\(\(argint\(0, &s\)<0\) ||) 167.0826 Tj
-5.2213 -218.3473 Td
(3720             \(argptr\(1, &name, sizeof\(struct sockaddr\)\)\
<0\) ||) 339.3866 Tj
-5.2213 -227.8407 Td
(3721             \(argptr\(2, &namelen, sizeof\(socklen_t\)\)<0\
\)\)) 313.2799 Tj
-5.2213 -237.334 Td
(3722         return -1;) 120.0906 Tj
-5.2213 -246.8274 Td
(3723     return lwip_bind\(s, name, namelen\);) 229.7386 Tj
-5.2213 -256.3207 Td
(3724 }) 31.328 Tj
-5.2213 -265.8141 Td
(3725 ) 26.1067 Tj
-5.2213 -275.3075 Td
(3726 int) 41.7707 Tj
-5.2213 -284.8008 Td
(3727 sys_shutdown\(void\)) 120.0906 Tj
-5.2213 -294.2942 Td
(3728 {) 31.328 Tj
-5.2213 -303.7875 Td
(3729     int s;) 78.32 Tj
-5.2213 -313.2809 Td
(3730     int how;) 88.7626 Tj
-5.2213 -322.7743 Td
(3731     if \(\(argint\(0, &s\)<0\) || \(argint\(1, &how\) < 0\)\
\)) 292.3946 Tj
-5.2213 -332.2676 Td
(3732         return -1;) 120.0906 Tj
-5.2213 -341.761 Td
(3733     return lwip_shutdown\(s, how\);) 198.4106 Tj
-5.2213 -351.2543 Td
(3734 }) 31.328 Tj
-5.2213 -360.7477 Td
(3735 ) 26.1067 Tj
-5.2213 -370.2411 Td
(3736 ) 26.1067 Tj
-5.2213 -379.7344 Td
(3737 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3738 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3739 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3740 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3741 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3742 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3743 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3744 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3745 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3746 ) 26.1067 Tj
-5.2213 -474.668 Td
(3747 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3748 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3749 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 37) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysproc.c  Page 4) 198.4106 Tj
-5.2213 -28.4801 Td
(3750 int) 41.7707 Tj
-5.2213 -37.9735 Td
(3751 sys_getsockopt\(void\)) 130.5333 Tj
-5.2213 -47.4668 Td
(3752 {) 31.328 Tj
-5.2213 -56.9602 Td
(3753     int s;) 78.32 Tj
-5.2213 -66.4535 Td
(3754     int level;) 99.2053 Tj
-5.2213 -75.9469 Td
(3755     int optname;) 109.648 Tj
-5.2213 -85.4403 Td
(3756     void *optval;) 114.8693 Tj
-5.2213 -94.9336 Td
(3757     socklen_t *optlen;) 140.976 Tj
-5.2213 -104.427 Td
(3758     if \(\(argint\(0, &s\)<0\) ||) 172.304 Tj
-5.2213 -113.9203 Td
(3759         \(argint\(1, &level\)<0\) ||) 193.1893 Tj
-5.2213 -123.4137 Td
(3760         \(argint\(2, &optname\)<0\) ||) 203.6319 Tj
-5.2213 -132.9071 Td
(3761         \(argptr\(4, &optlen, sizeof\(socklen_t\)\)<0\) ||) 297.6159 Tj
-5.2213 -142.4004 Td
(3762         \(argptr\(3, &optval, 0\)<0\)\)) 203.6319 Tj
-5.2213 -151.8938 Td
(3763         return -1;) 120.0906 Tj
-5.2213 -161.3871 Td
(3764     return lwip_getsockopt\(s, level, optname, optval, opt\
len\);) 349.8292 Tj
-5.2213 -170.8805 Td
(3765 }) 31.328 Tj
-5.2213 -180.3739 Td
(3766 ) 26.1067 Tj
-5.2213 -189.8672 Td
(3767 int sys_setsockopt\(void\)) 151.4186 Tj
-5.2213 -199.3606 Td
(3768 {) 31.328 Tj
-5.2213 -208.8539 Td
(3769     int s;) 78.32 Tj
-5.2213 -218.3473 Td
(3770     int level;) 99.2053 Tj
-5.2213 -227.8407 Td
(3771     int optname;) 109.648 Tj
-5.2213 -237.334 Td
(3772     void *optval;) 114.8693 Tj
-5.2213 -246.8274 Td
(3773     socklen_t *optlen;) 140.976 Tj
-5.2213 -256.3207 Td
(3774     if \(\(argint\(0, &s\)<0\) ||) 172.304 Tj
-5.2213 -265.8141 Td
(3775         \(argint\(1, &level\)<0\) ||) 193.1893 Tj
-5.2213 -275.3075 Td
(3776         \(argint\(2, &optname\)<0\) ||) 203.6319 Tj
-5.2213 -284.8008 Td
(3777         \(argptr\(4, &optlen, sizeof\(socklen_t\)\)<0\) ||) 297.6159 Tj
-5.2213 -294.2942 Td
(3778         \(argptr\(3, &optval, *optlen\)<0\)\)) 234.9599 Tj
-5.2213 -303.7875 Td
(3779         return -1;) 120.0906 Tj
-5.2213 -313.2809 Td
(3780     return lwip_setsockopt\(s, level, optname, optval, opt\
len\);) 349.8292 Tj
-5.2213 -322.7743 Td
(3781 }) 31.328 Tj
-5.2213 -332.2676 Td
(3782 ) 26.1067 Tj
-5.2213 -341.761 Td
(3783 int sys_sockclose\(void\)) 146.1973 Tj
-5.2213 -351.2543 Td
(3784 {) 31.328 Tj
-5.2213 -360.7477 Td
(3785     int s;) 78.32 Tj
-5.2213 -370.2411 Td
(3786     if \(argint\(0, &s\) <0\)) 156.64 Tj
-5.2213 -379.7344 Td
(3787         return -1;) 120.0906 Tj
-5.2213 -389.2278 Td
(3788     return lwip_close\(s\);) 156.64 Tj
-5.2213 -398.7211 Td
(3789 }) 31.328 Tj
-5.2213 -408.2145 Td
(3790 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3791 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3792 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3793 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3794 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3795 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3796 ) 26.1067 Tj
-5.2213 -474.668 Td
(3797 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3798 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 37) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 47 47
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysproc.c  Page 5) 198.4106 Tj
-5.2213 -28.4801 Td
(3800 int sys_connect\(void\)) 135.7546 Tj
-5.2213 -37.9735 Td
(3801 {) 31.328 Tj
-5.2213 -47.4668 Td
(3802     int s;) 78.32 Tj
-5.2213 -56.9602 Td
(3803     struct sockaddr *name;) 161.8613 Tj
-5.2213 -66.4535 Td
(3804     socklen_t *namelen;) 146.1973 Tj
-5.2213 -75.9469 Td
(3805     if\(\(argint\(0, &s\)<0\) ||) 167.0826 Tj
-5.2213 -85.4403 Td
(3806             \(argptr\(1, &name, sizeof\(struct sockaddr\)\)\
<0\) ||) 339.3866 Tj
-5.2213 -94.9336 Td
(3807             \(argptr\(2, &namelen, sizeof\(socklen_t\)\)<0\
\)\)) 313.2799 Tj
-5.2213 -104.427 Td
(3808         return -1;) 120.0906 Tj
-5.2213 -113.9203 Td
(3809     return lwip_connect\(s, name, namelen\);) 245.4026 Tj
-5.2213 -123.4137 Td
(3810 }) 31.328 Tj
-5.2213 -132.9071 Td
(3811 ) 26.1067 Tj
-5.2213 -142.4004 Td
(3812 int sys_listen\(void\)) 130.5333 Tj
-5.2213 -151.8938 Td
(3813 {) 31.328 Tj
-5.2213 -161.3871 Td
(3814     int s;) 78.32 Tj
-5.2213 -170.8805 Td
(3815     int backlog;) 109.648 Tj
-5.2213 -180.3739 Td
(3816     if \(\(argint\(0, &s\)<0\) ||) 172.304 Tj
-5.2213 -189.8672 Td
(3817         \(argint\(1, &backlog\)<0\)\)) 193.1893 Tj
-5.2213 -199.3606 Td
(3818         return -1;) 120.0906 Tj
-5.2213 -208.8539 Td
(3819     return lwip_listen\(s, backlog\);) 208.8533 Tj
-5.2213 -218.3473 Td
(3820 }) 31.328 Tj
-5.2213 -227.8407 Td
(3821 ) 26.1067 Tj
-5.2213 -237.334 Td
(3822 int sys_recv\(void\)) 120.0906 Tj
-5.2213 -246.8274 Td
(3823 {) 31.328 Tj
-5.2213 -256.3207 Td
(3824     int s;) 78.32 Tj
-5.2213 -265.8141 Td
(3825     void *mem;) 99.2053 Tj
-5.2213 -275.3075 Td
(3826     int len;) 88.7626 Tj
-5.2213 -284.8008 Td
(3827     unsigned int flags;) 146.1973 Tj
-5.2213 -294.2942 Td
(3828     if \(\(argint\(0, &s\)<0\) ||) 172.304 Tj
-5.2213 -303.7875 Td
(3829         \(argint\(2, &len\)<0\) ||) 182.7466 Tj
-5.2213 -313.2809 Td
(3830         \(argptr\(1, &mem, len\)<0\) ||) 208.8533 Tj
-5.2213 -322.7743 Td
(3831         \(argint\(3, &flags\)<0\)\)) 182.7466 Tj
-5.2213 -332.2676 Td
(3832         return -1;) 120.0906 Tj
-5.2213 -341.761 Td
(3833     return lwip_recv\(s, mem, len, flags\);) 240.1813 Tj
-5.2213 -351.2543 Td
(3834 }) 31.328 Tj
-5.2213 -360.7477 Td
(3835 ) 26.1067 Tj
-5.2213 -370.2411 Td
(3836 ) 26.1067 Tj
-5.2213 -379.7344 Td
(3837 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3838 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3839 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3840 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3841 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3842 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3843 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3844 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3845 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3846 ) 26.1067 Tj
-5.2213 -474.668 Td
(3847 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3848 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3849 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 38) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysproc.c  Page 6) 198.4106 Tj
-5.2213 -28.4801 Td
(3850 int sys_recvfrom\(void\)) 140.976 Tj
-5.2213 -37.9735 Td
(3851 {) 31.328 Tj
-5.2213 -47.4668 Td
(3852     int s;) 78.32 Tj
-5.2213 -56.9602 Td
(3853     void *mem;) 99.2053 Tj
-5.2213 -66.4535 Td
(3854     int len;) 88.7626 Tj
-5.2213 -75.9469 Td
(3855     unsigned int flags;) 146.1973 Tj
-5.2213 -85.4403 Td
(3856     struct sockaddr *from;) 161.8613 Tj
-5.2213 -94.9336 Td
(3857     socklen_t *fromlen;) 146.1973 Tj
-5.2213 -104.427 Td
(3858     if \(\(argint\(0, &s\)<0\) ||) 172.304 Tj
-5.2213 -113.9203 Td
(3859         \(argint\(2, &len\)<0\) ||) 182.7466 Tj
-5.2213 -123.4137 Td
(3860         \(argptr\(1, &mem, len\)<0\) ||) 208.8533 Tj
-5.2213 -132.9071 Td
(3861         \(argint\(3, &flags\)<0\) ||) 193.1893 Tj
-5.2213 -142.4004 Td
(3862         \(argptr\(4, &from, 0\)<0\) ||) 203.6319 Tj
-5.2213 -151.8938 Td
(3863         \(argptr\(5, &fromlen, sizeof\(socklen_t\)\)<0\)\)) 292.3946 Tj
-5.2213 -161.3871 Td
(3864         return -1;) 120.0906 Tj
-5.2213 -170.8805 Td
(3865     return lwip_recvfrom\(s, mem, len, flags, from, fromle\
n\);) 339.3866 Tj
-5.2213 -180.3739 Td
(3866 }) 31.328 Tj
-5.2213 -189.8672 Td
(3867 ) 26.1067 Tj
-5.2213 -199.3606 Td
(3868 int sys_send\(void\)) 120.0906 Tj
-5.2213 -208.8539 Td
(3869 {) 31.328 Tj
-5.2213 -218.3473 Td
(3870     int s;) 78.32 Tj
-5.2213 -227.8407 Td
(3871     void *dataptr;) 120.0906 Tj
-5.2213 -237.334 Td
(3872     int size;) 93.984 Tj
-5.2213 -246.8274 Td
(3873     unsigned int flags;) 146.1973 Tj
-5.2213 -256.3207 Td
(3874     if \(\(argint\(0, &s\)<0\) ||) 172.304 Tj
-5.2213 -265.8141 Td
(3875         \(argint\(2, &size\)<0\) ||) 187.968 Tj
-5.2213 -275.3075 Td
(3876         \(argptr\(1, &dataptr, size\)<0\) ||) 234.9599 Tj
-5.2213 -284.8008 Td
(3877         \(argint\(3, &flags\)<0\)\)) 182.7466 Tj
-5.2213 -294.2942 Td
(3878         return -1;) 120.0906 Tj
-5.2213 -303.7875 Td
(3879     return lwip_send\(s, dataptr, size, flags\);) 266.2879 Tj
-5.2213 -313.2809 Td
(3880 }) 31.328 Tj
-5.2213 -322.7743 Td
(3881 ) 26.1067 Tj
-5.2213 -332.2676 Td
(3882 int sys_sendto\(void\)) 130.5333 Tj
-5.2213 -341.761 Td
(3883 {) 31.328 Tj
-5.2213 -351.2543 Td
(3884     int s;) 78.32 Tj
-5.2213 -360.7477 Td
(3885     void *dataptr;) 120.0906 Tj
-5.2213 -370.2411 Td
(3886     int size;) 93.984 Tj
-5.2213 -379.7344 Td
(3887     unsigned int flags;) 146.1973 Tj
-5.2213 -389.2278 Td
(3888     struct sockaddr *to;) 151.4186 Tj
-5.2213 -398.7211 Td
(3889     socklen_t *tolen;) 135.7546 Tj
-5.2213 -408.2145 Td
(3890     if \(\(argint\(0, &s\)<0\) ||) 172.304 Tj
-5.2213 -417.7079 Td
(3891         \(argint\(2, &size\)<0\) ||) 187.968 Tj
-5.2213 -427.2012 Td
(3892         \(argptr\(1, &dataptr, size\)<0\) ||) 234.9599 Tj
-5.2213 -436.6946 Td
(3893         \(argint\(3, &flags\)<0\) ||) 193.1893 Tj
-5.2213 -446.1879 Td
(3894         \(argptr\(5, &tolen, sizeof\(socklen_t\)\)<0\) ||) 292.3946 Tj
-5.2213 -455.6813 Td
(3895         \(argptr\(4, &to, *tolen\)<0\)\)) 208.8533 Tj
-5.2213 -465.1747 Td
(3896         return -1;) 120.0906 Tj
-5.2213 -474.668 Td
(3897     return lwip_send\(s, dataptr, size, flags\);) 266.2879 Tj
-5.2213 -484.1614 Td
(3898 }) 31.328 Tj
-5.2213 -493.6547 Td
(3899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 38) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 48 48
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysproc.c  Page 7) 198.4106 Tj
-5.2213 -28.4801 Td
(3900 int sys_socket\(void\)) 130.5333 Tj
-5.2213 -37.9735 Td
(3901 {) 31.328 Tj
-5.2213 -47.4668 Td
(3902     int domain;) 104.4266 Tj
-5.2213 -56.9602 Td
(3903     int type;) 93.984 Tj
-5.2213 -66.4535 Td
(3904     int protocol;) 114.8693 Tj
-5.2213 -75.9469 Td
(3905     if \(\(argint\(0, &domain\)<0\) ||) 198.4106 Tj
-5.2213 -85.4403 Td
(3906         \(argint\(1, &type\)<0\) ||) 187.968 Tj
-5.2213 -94.9336 Td
(3907         \(argint\(2, &protocol\)<0\)\)) 198.4106 Tj
-5.2213 -104.427 Td
(3908         return -1;) 120.0906 Tj
-5.2213 -113.9203 Td
(3909     return lwip_socket\(domain, type, protocol\);) 271.5093 Tj
-5.2213 -123.4137 Td
(3910 }) 31.328 Tj
-5.2213 -132.9071 Td
(3911 ) 26.1067 Tj
-5.2213 -142.4004 Td
(3912 int) 41.7707 Tj
-5.2213 -151.8938 Td
(3913 sys_getpeername\(void\)) 135.7546 Tj
-5.2213 -161.3871 Td
(3914 {) 31.328 Tj
-5.2213 -170.8805 Td
(3915     int s;) 78.32 Tj
-5.2213 -180.3739 Td
(3916     struct sockaddr *name;) 161.8613 Tj
-5.2213 -189.8672 Td
(3917     socklen_t *namelen;) 146.1973 Tj
-5.2213 -199.3606 Td
(3918     if\(\(argint\(0, &s\)<0\) ||) 167.0826 Tj
-5.2213 -208.8539 Td
(3919             \(argptr\(1, &name, sizeof\(struct sockaddr\)\)\
<0\) ||) 339.3866 Tj
-5.2213 -218.3473 Td
(3920             \(argptr\(2, &namelen, sizeof\(socklen_t\)\)<0\
\)\)) 313.2799 Tj
-5.2213 -227.8407 Td
(3921         return -1;) 120.0906 Tj
-5.2213 -237.334 Td
(3922     return lwip_getpeername\(s, name, namelen\);) 266.2879 Tj
-5.2213 -246.8274 Td
(3923 }) 31.328 Tj
-5.2213 -256.3207 Td
(3924 ) 26.1067 Tj
-5.2213 -265.8141 Td
(3925 int) 41.7707 Tj
-5.2213 -275.3075 Td
(3926 sys_getsockname\(void\)) 135.7546 Tj
-5.2213 -284.8008 Td
(3927 {) 31.328 Tj
-5.2213 -294.2942 Td
(3928     int s;) 78.32 Tj
-5.2213 -303.7875 Td
(3929     struct sockaddr *name;) 161.8613 Tj
-5.2213 -313.2809 Td
(3930     socklen_t *namelen;) 146.1973 Tj
-5.2213 -322.7743 Td
(3931     if\(\(argint\(0, &s\)<0\) ||) 167.0826 Tj
-5.2213 -332.2676 Td
(3932             \(argptr\(1, &name, sizeof\(struct sockaddr\)\)\
<0\) ||) 339.3866 Tj
-5.2213 -341.761 Td
(3933             \(argptr\(2, &namelen, sizeof\(socklen_t\)\)<0\
\)\)) 313.2799 Tj
-5.2213 -351.2543 Td
(3934         return -1;) 120.0906 Tj
-5.2213 -360.7477 Td
(3935     return lwip_getsockname\(s, name, namelen\);) 266.2879 Tj
-5.2213 -370.2411 Td
(3936 }) 31.328 Tj
-5.2213 -379.7344 Td
(3937 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3938 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3939 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3940 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3941 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3942 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3943 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3944 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3945 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3946 ) 26.1067 Tj
-5.2213 -474.668 Td
(3947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 39) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/buf.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(3950 struct buf {) 88.7626 Tj
-5.2213 -37.9735 Td
(3951   int flags;) 88.7626 Tj
-5.2213 -47.4668 Td
(3952   uint dev;) 83.5413 Tj
-5.2213 -56.9602 Td
(3953   uint sector;) 99.2053 Tj
-5.2213 -66.4535 Td
(3954   struct buf *prev; // LRU cache list) 219.2959 Tj
-5.2213 -75.9469 Td
(3955   struct buf *next;) 125.312 Tj
-5.2213 -85.4403 Td
(3956   struct buf *qnext; // disk queue) 203.6319 Tj
-5.2213 -94.9336 Td
(3957   uchar data[512];) 120.0906 Tj
-5.2213 -104.427 Td
(3958 };) 36.5493 Tj
-5.2213 -113.9203 Td
(3959 #define B_BUSY  0x1  // buffer is locked by some process) 318.5013 Tj
-5.2213 -123.4137 Td
(3960 #define B_VALID 0x2  // buffer has been read from disk) 308.0586 Tj
-5.2213 -132.9071 Td
(3961 #define B_DIRTY 0x4  // buffer needs to be written to disk) 328.9439 Tj
-5.2213 -142.4004 Td
(3962 ) 26.1067 Tj
-5.2213 -151.8938 Td
(3963 ) 26.1067 Tj
-5.2213 -161.3871 Td
(3964 ) 26.1067 Tj
-5.2213 -170.8805 Td
(3965 ) 26.1067 Tj
-5.2213 -180.3739 Td
(3966 ) 26.1067 Tj
-5.2213 -189.8672 Td
(3967 ) 26.1067 Tj
-5.2213 -199.3606 Td
(3968 ) 26.1067 Tj
-5.2213 -208.8539 Td
(3969 ) 26.1067 Tj
-5.2213 -218.3473 Td
(3970 ) 26.1067 Tj
-5.2213 -227.8407 Td
(3971 ) 26.1067 Tj
-5.2213 -237.334 Td
(3972 ) 26.1067 Tj
-5.2213 -246.8274 Td
(3973 ) 26.1067 Tj
-5.2213 -256.3207 Td
(3974 ) 26.1067 Tj
-5.2213 -265.8141 Td
(3975 ) 26.1067 Tj
-5.2213 -275.3075 Td
(3976 ) 26.1067 Tj
-5.2213 -284.8008 Td
(3977 ) 26.1067 Tj
-5.2213 -294.2942 Td
(3978 ) 26.1067 Tj
-5.2213 -303.7875 Td
(3979 ) 26.1067 Tj
-5.2213 -313.2809 Td
(3980 ) 26.1067 Tj
-5.2213 -322.7743 Td
(3981 ) 26.1067 Tj
-5.2213 -332.2676 Td
(3982 ) 26.1067 Tj
-5.2213 -341.761 Td
(3983 ) 26.1067 Tj
-5.2213 -351.2543 Td
(3984 ) 26.1067 Tj
-5.2213 -360.7477 Td
(3985 ) 26.1067 Tj
-5.2213 -370.2411 Td
(3986 ) 26.1067 Tj
-5.2213 -379.7344 Td
(3987 ) 26.1067 Tj
-5.2213 -389.2278 Td
(3988 ) 26.1067 Tj
-5.2213 -398.7211 Td
(3989 ) 26.1067 Tj
-5.2213 -408.2145 Td
(3990 ) 26.1067 Tj
-5.2213 -417.7079 Td
(3991 ) 26.1067 Tj
-5.2213 -427.2012 Td
(3992 ) 26.1067 Tj
-5.2213 -436.6946 Td
(3993 ) 26.1067 Tj
-5.2213 -446.1879 Td
(3994 ) 26.1067 Tj
-5.2213 -455.6813 Td
(3995 ) 26.1067 Tj
-5.2213 -465.1747 Td
(3996 ) 26.1067 Tj
-5.2213 -474.668 Td
(3997 ) 26.1067 Tj
-5.2213 -484.1614 Td
(3998 ) 26.1067 Tj
-5.2213 -493.6547 Td
(3999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 39) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 49 49
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/dev.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(4000 struct devsw {) 99.2053 Tj
-5.2213 -37.9735 Td
(4001   int \(*read\)\(struct inode*, char*, int\);) 240.1813 Tj
-5.2213 -47.4668 Td
(4002   int \(*write\)\(struct inode*, char*, int\);) 245.4026 Tj
-5.2213 -56.9602 Td
(4003 };) 36.5493 Tj
-5.2213 -66.4535 Td
(4004 ) 26.1067 Tj
-5.2213 -75.9469 Td
(4005 extern struct devsw devsw[];) 172.304 Tj
-5.2213 -85.4403 Td
(4006 ) 26.1067 Tj
-5.2213 -94.9336 Td
(4007 #define CONSOLE 1) 114.8693 Tj
-5.2213 -104.427 Td
(4008 ) 26.1067 Tj
-5.2213 -113.9203 Td
(4009 ) 26.1067 Tj
-5.2213 -123.4137 Td
(4010 ) 26.1067 Tj
-5.2213 -132.9071 Td
(4011 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4012 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4013 ) 26.1067 Tj
-5.2213 -161.3871 Td
(4014 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4015 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4016 ) 26.1067 Tj
-5.2213 -189.8672 Td
(4017 ) 26.1067 Tj
-5.2213 -199.3606 Td
(4018 ) 26.1067 Tj
-5.2213 -208.8539 Td
(4019 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4020 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4021 ) 26.1067 Tj
-5.2213 -237.334 Td
(4022 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4023 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4024 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4025 ) 26.1067 Tj
-5.2213 -275.3075 Td
(4026 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4027 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4028 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4029 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4030 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4031 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4032 ) 26.1067 Tj
-5.2213 -341.761 Td
(4033 ) 26.1067 Tj
-5.2213 -351.2543 Td
(4034 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4035 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4036 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4037 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4038 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4039 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4040 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4041 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4042 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4043 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4044 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4045 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4046 ) 26.1067 Tj
-5.2213 -474.668 Td
(4047 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 40) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fcntl.h  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(4050 #define O_RDONLY  0x000) 146.1973 Tj
-5.2213 -37.9735 Td
(4051 #define O_WRONLY  0x001) 146.1973 Tj
-5.2213 -47.4668 Td
(4052 #define O_RDWR    0x002) 146.1973 Tj
-5.2213 -56.9602 Td
(4053 #define O_CREATE  0x200) 146.1973 Tj
-5.2213 -66.4535 Td
(4054 ) 26.1067 Tj
-5.2213 -75.9469 Td
(4055 ) 26.1067 Tj
-5.2213 -85.4403 Td
(4056 ) 26.1067 Tj
-5.2213 -94.9336 Td
(4057 ) 26.1067 Tj
-5.2213 -104.427 Td
(4058 ) 26.1067 Tj
-5.2213 -113.9203 Td
(4059 ) 26.1067 Tj
-5.2213 -123.4137 Td
(4060 ) 26.1067 Tj
-5.2213 -132.9071 Td
(4061 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4062 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4063 ) 26.1067 Tj
-5.2213 -161.3871 Td
(4064 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4065 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4066 ) 26.1067 Tj
-5.2213 -189.8672 Td
(4067 ) 26.1067 Tj
-5.2213 -199.3606 Td
(4068 ) 26.1067 Tj
-5.2213 -208.8539 Td
(4069 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4070 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4071 ) 26.1067 Tj
-5.2213 -237.334 Td
(4072 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4073 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4074 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4075 ) 26.1067 Tj
-5.2213 -275.3075 Td
(4076 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4077 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4078 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4079 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4080 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4081 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4082 ) 26.1067 Tj
-5.2213 -341.761 Td
(4083 ) 26.1067 Tj
-5.2213 -351.2543 Td
(4084 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4085 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4086 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4087 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4088 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4089 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4090 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4091 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4092 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4093 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4094 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4095 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4096 ) 26.1067 Tj
-5.2213 -474.668 Td
(4097 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4098 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4099 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 40) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 50 50
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/stat.h  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(4100 struct stat {) 93.984 Tj
-5.2213 -37.9735 Td
(4101   int dev;     // Device number) 187.968 Tj
-5.2213 -47.4668 Td
(4102   uint ino;    // Inode number on device) 234.9599 Tj
-5.2213 -56.9602 Td
(4103   short type;  // Type of file) 182.7466 Tj
-5.2213 -66.4535 Td
(4104   short nlink; // Number of links to file) 240.1813 Tj
-5.2213 -75.9469 Td
(4105   uint size;   // Size of file in bytes) 229.7386 Tj
-5.2213 -85.4403 Td
(4106 };) 36.5493 Tj
-5.2213 -94.9336 Td
(4107 ) 26.1067 Tj
-5.2213 -104.427 Td
(4108 ) 26.1067 Tj
-5.2213 -113.9203 Td
(4109 ) 26.1067 Tj
-5.2213 -123.4137 Td
(4110 ) 26.1067 Tj
-5.2213 -132.9071 Td
(4111 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4112 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4113 ) 26.1067 Tj
-5.2213 -161.3871 Td
(4114 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4115 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4116 ) 26.1067 Tj
-5.2213 -189.8672 Td
(4117 ) 26.1067 Tj
-5.2213 -199.3606 Td
(4118 ) 26.1067 Tj
-5.2213 -208.8539 Td
(4119 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4120 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4121 ) 26.1067 Tj
-5.2213 -237.334 Td
(4122 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4123 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4124 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(4126 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4127 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4128 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4129 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4130 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4131 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4132 ) 26.1067 Tj
-5.2213 -341.761 Td
(4133 ) 26.1067 Tj
-5.2213 -351.2543 Td
(4134 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4135 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4136 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4137 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4138 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4139 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4140 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4141 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4142 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4143 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4144 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4146 ) 26.1067 Tj
-5.2213 -474.668 Td
(4147 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 41) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/file.h  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(4150 struct file {) 93.984 Tj
-5.2213 -37.9735 Td
(4151   enum { FD_CLOSED, FD_NONE, FD_PIPE, FD_INODE } type;) 308.0586 Tj
-5.2213 -47.4668 Td
(4152   int ref; // reference count) 177.5253 Tj
-5.2213 -56.9602 Td
(4153   char readable;) 109.648 Tj
-5.2213 -66.4535 Td
(4154   char writable;) 109.648 Tj
-5.2213 -75.9469 Td
(4155   struct pipe *pipe;) 130.5333 Tj
-5.2213 -85.4403 Td
(4156   struct inode *ip;) 125.312 Tj
-5.2213 -94.9336 Td
(4157   uint off;) 83.5413 Tj
-5.2213 -104.427 Td
(4158 };) 36.5493 Tj
-5.2213 -113.9203 Td
(4159 ) 26.1067 Tj
-5.2213 -123.4137 Td
(4160 ) 26.1067 Tj
-5.2213 -132.9071 Td
(4161 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4162 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4163 ) 26.1067 Tj
-5.2213 -161.3871 Td
(4164 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4165 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4166 ) 26.1067 Tj
-5.2213 -189.8672 Td
(4167 ) 26.1067 Tj
-5.2213 -199.3606 Td
(4168 ) 26.1067 Tj
-5.2213 -208.8539 Td
(4169 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4170 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4171 ) 26.1067 Tj
-5.2213 -237.334 Td
(4172 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4173 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4174 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4175 ) 26.1067 Tj
-5.2213 -275.3075 Td
(4176 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4177 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4178 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4179 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4180 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4181 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4182 ) 26.1067 Tj
-5.2213 -341.761 Td
(4183 ) 26.1067 Tj
-5.2213 -351.2543 Td
(4184 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4185 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4186 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4187 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4188 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4189 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4190 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4191 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4192 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4193 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4194 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4195 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4196 ) 26.1067 Tj
-5.2213 -474.668 Td
(4197 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4198 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 41) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 51 51
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.h  Page 1) 172.304 Tj
-5.2213 -28.4801 Td
(4200 // On-disk file system format.) 182.7466 Tj
-5.2213 -37.9735 Td
(4201 // Both the kernel and user programs use this header file.) 328.9439 Tj
-5.2213 -47.4668 Td
(4202 ) 26.1067 Tj
-5.2213 -56.9602 Td
(4203 // Block 0 is unused.) 135.7546 Tj
-5.2213 -66.4535 Td
(4204 // Block 1 is super block.) 161.8613 Tj
-5.2213 -75.9469 Td
(4205 // Inodes start at block 2.) 167.0826 Tj
-5.2213 -85.4403 Td
(4206 ) 26.1067 Tj
-5.2213 -94.9336 Td
(4207 #define BSIZE 512  // block size) 193.1893 Tj
-5.2213 -104.427 Td
(4208 ) 26.1067 Tj
-5.2213 -113.9203 Td
(4209 // File system super block) 161.8613 Tj
-5.2213 -123.4137 Td
(4210 struct superblock {) 125.312 Tj
-5.2213 -132.9071 Td
(4211   uint size;         // Size of file system image \(blocks\
\)) 328.9439 Tj
-5.2213 -142.4004 Td
(4212   uint nblocks;      // Number of data blocks) 261.0666 Tj
-5.2213 -151.8938 Td
(4213   uint ninodes;      // Number of inodes.) 240.1813 Tj
-5.2213 -161.3871 Td
(4214 };) 36.5493 Tj
-5.2213 -170.8805 Td
(4215 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4216 #define NADDRS \(NDIRECT+1\)) 161.8613 Tj
-5.2213 -189.8672 Td
(4217 #define NDIRECT 12) 120.0906 Tj
-5.2213 -199.3606 Td
(4218 #define INDIRECT 12) 125.312 Tj
-5.2213 -208.8539 Td
(4219 #define NINDIRECT \(BSIZE / sizeof\(uint\)\)) 234.9599 Tj
-5.2213 -218.3473 Td
(4220 #define MAXFILE \(NDIRECT  + NINDIRECT\)) 224.5173 Tj
-5.2213 -227.8407 Td
(4221 ) 26.1067 Tj
-5.2213 -237.334 Td
(4222 // On-disk inode structure) 161.8613 Tj
-5.2213 -246.8274 Td
(4223 struct dinode {) 104.4266 Tj
-5.2213 -256.3207 Td
(4224   short type;           // File type) 214.0746 Tj
-5.2213 -265.8141 Td
(4225   short major;          // Major device number \(T_DEV onl\
y\)) 334.1652 Tj
-5.2213 -275.3075 Td
(4226   short minor;          // Minor device number \(T_DEV onl\
y\)) 334.1652 Tj
-5.2213 -284.8008 Td
(4227   short nlink;          // Number of links to inode in fil\
e system) 370.7146 Tj
-5.2213 -294.2942 Td
(4228   uint size;            // Size of file \(bytes\)) 271.5093 Tj
-5.2213 -303.7875 Td
(4229   uint addrs[NADDRS];   // Data block addresses) 271.5093 Tj
-5.2213 -313.2809 Td
(4230 };) 36.5493 Tj
-5.2213 -322.7743 Td
(4231 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4232 #define T_DIR  1   // Directory) 187.968 Tj
-5.2213 -341.761 Td
(4233 #define T_FILE 2   // File) 161.8613 Tj
-5.2213 -351.2543 Td
(4234 #define T_DEV  3   // Special device) 214.0746 Tj
-5.2213 -360.7477 Td
(4235 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4236 // Inodes per block.) 130.5333 Tj
-5.2213 -379.7344 Td
(4237 #define IPB           \(BSIZE / sizeof\(struct dinode\)\)) 302.8373 Tj
-5.2213 -389.2278 Td
(4238 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4239 // Block containing inode i) 167.0826 Tj
-5.2213 -408.2145 Td
(4240 #define IBLOCK\(i\)     \(\(i\) / IPB + 2\)) 219.2959 Tj
-5.2213 -417.7079 Td
(4241 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4242 // Bitmap bits per block) 151.4186 Tj
-5.2213 -436.6946 Td
(4243 #define BPB           \(BSIZE*8\)) 187.968 Tj
-5.2213 -446.1879 Td
(4244 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4245 // Block containing bit for block b) 208.8533 Tj
-5.2213 -465.1747 Td
(4246 #define BBLOCK\(b, ninodes\) \(b/BPB + \(ninodes\)/IPB + 3\
\)) 308.0586 Tj
-5.2213 -474.668 Td
(4247 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4248 // Directory is a file containing a sequence of dirent str\
uctures.) 370.7146 Tj
-5.2213 -493.6547 Td
(4249 #define DIRSIZ 14) 114.8693 Tj
-5.2213 -522.1348 Td
(Sheet 42) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.h  Page 2) 172.304 Tj
-5.2213 -28.4801 Td
(4250 struct dirent {) 104.4266 Tj
-5.2213 -37.9735 Td
(4251   ushort inum;) 99.2053 Tj
-5.2213 -47.4668 Td
(4252   char name[DIRSIZ];) 130.5333 Tj
-5.2213 -56.9602 Td
(4253 };) 36.5493 Tj
-5.2213 -66.4535 Td
(4254 ) 26.1067 Tj
-5.2213 -75.9469 Td
(4255 ) 26.1067 Tj
-5.2213 -85.4403 Td
(4256 ) 26.1067 Tj
-5.2213 -94.9336 Td
(4257 ) 26.1067 Tj
-5.2213 -104.427 Td
(4258 ) 26.1067 Tj
-5.2213 -113.9203 Td
(4259 ) 26.1067 Tj
-5.2213 -123.4137 Td
(4260 ) 26.1067 Tj
-5.2213 -132.9071 Td
(4261 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4262 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4263 ) 26.1067 Tj
-5.2213 -161.3871 Td
(4264 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4265 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4266 ) 26.1067 Tj
-5.2213 -189.8672 Td
(4267 ) 26.1067 Tj
-5.2213 -199.3606 Td
(4268 ) 26.1067 Tj
-5.2213 -208.8539 Td
(4269 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4270 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4271 ) 26.1067 Tj
-5.2213 -237.334 Td
(4272 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4273 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4274 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4275 ) 26.1067 Tj
-5.2213 -275.3075 Td
(4276 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4277 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4278 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4279 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4280 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4281 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4282 ) 26.1067 Tj
-5.2213 -341.761 Td
(4283 ) 26.1067 Tj
-5.2213 -351.2543 Td
(4284 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4285 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4286 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4287 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4288 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4289 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4290 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4291 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4292 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4293 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4294 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4295 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4296 ) 26.1067 Tj
-5.2213 -474.668 Td
(4297 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4298 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4299 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 42) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 52 52
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fsvar.h  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(4300 // in-core file system types) 172.304 Tj
-5.2213 -37.9735 Td
(4301 ) 26.1067 Tj
-5.2213 -47.4668 Td
(4302 struct inode {) 99.2053 Tj
-5.2213 -56.9602 Td
(4303   uint dev;           // Device number) 224.5173 Tj
-5.2213 -66.4535 Td
(4304   uint inum;          // Inode number) 219.2959 Tj
-5.2213 -75.9469 Td
(4305   int ref;            // Reference count) 234.9599 Tj
-5.2213 -85.4403 Td
(4306   int flags;          // I_BUSY, I_VALID) 234.9599 Tj
-5.2213 -94.9336 Td
(4307 ) 26.1067 Tj
-5.2213 -104.427 Td
(4308   short type;         // copy of disk inode) 250.6239 Tj
-5.2213 -113.9203 Td
(4309   short major;) 99.2053 Tj
-5.2213 -123.4137 Td
(4310   short minor;) 99.2053 Tj
-5.2213 -132.9071 Td
(4311   short nlink;) 99.2053 Tj
-5.2213 -142.4004 Td
(4312   uint size;) 88.7626 Tj
-5.2213 -151.8938 Td
(4313   uint addrs[NADDRS];) 135.7546 Tj
-5.2213 -161.3871 Td
(4314 };) 36.5493 Tj
-5.2213 -170.8805 Td
(4315 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4316 #define I_BUSY 0x1) 120.0906 Tj
-5.2213 -189.8672 Td
(4317 #define I_VALID 0x2) 125.312 Tj
-5.2213 -199.3606 Td
(4318 ) 26.1067 Tj
-5.2213 -208.8539 Td
(4319 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4320 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4321 ) 26.1067 Tj
-5.2213 -237.334 Td
(4322 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4323 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4324 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4325 ) 26.1067 Tj
-5.2213 -275.3075 Td
(4326 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4327 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4328 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4329 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4330 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4331 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4332 ) 26.1067 Tj
-5.2213 -341.761 Td
(4333 ) 26.1067 Tj
-5.2213 -351.2543 Td
(4334 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4335 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4336 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4337 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4338 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4339 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4340 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4341 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4342 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4344 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4345 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4346 ) 26.1067 Tj
-5.2213 -474.668 Td
(4347 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4348 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4349 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 43) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/ide.c  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(4350 // Simple PIO-based \(non-DMA\) IDE driver code.) 266.2879 Tj
-5.2213 -37.9735 Td
(4351 ) 26.1067 Tj
-5.2213 -47.4668 Td
(4352 #include "types.h") 120.0906 Tj
-5.2213 -56.9602 Td
(4353 #include "defs.h") 114.8693 Tj
-5.2213 -66.4535 Td
(4354 #include "param.h") 120.0906 Tj
-5.2213 -75.9469 Td
(4355 #include "mmu.h") 109.648 Tj
-5.2213 -85.4403 Td
(4356 #include "proc.h") 114.8693 Tj
-5.2213 -94.9336 Td
(4357 #include "x86.h") 109.648 Tj
-5.2213 -104.427 Td
(4358 #include "traps.h") 120.0906 Tj
-5.2213 -113.9203 Td
(4359 #include "spinlock.h") 135.7546 Tj
-5.2213 -123.4137 Td
(4360 #include "buf.h") 109.648 Tj
-5.2213 -132.9071 Td
(4361 #include "picirq.h") 125.312 Tj
-5.2213 -142.4004 Td
(4362 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4363 #define IDE_BSY       0x80) 161.8613 Tj
-5.2213 -161.3871 Td
(4364 #define IDE_DRDY      0x40) 161.8613 Tj
-5.2213 -170.8805 Td
(4365 #define IDE_DF        0x20) 161.8613 Tj
-5.2213 -180.3739 Td
(4366 #define IDE_ERR       0x01) 161.8613 Tj
-5.2213 -189.8672 Td
(4367 ) 26.1067 Tj
-5.2213 -199.3606 Td
(4368 #define IDE_CMD_READ  0x20) 161.8613 Tj
-5.2213 -208.8539 Td
(4369 #define IDE_CMD_WRITE 0x30) 161.8613 Tj
-5.2213 -218.3473 Td
(4370 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4371 // ide_queue points to the buf now being read/written to t\
he disk.) 370.7146 Tj
-5.2213 -237.334 Td
(4372 // ide_queue->qnext points to the next buf to be processed\
.) 334.1652 Tj
-5.2213 -246.8274 Td
(4373 // You must hold ide_lock while manipulating queue.) 292.3946 Tj
-5.2213 -256.3207 Td
(4374 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4375 static struct spinlock ide_lock;) 193.1893 Tj
-5.2213 -275.3075 Td
(4376 static struct buf *ide_queue;) 177.5253 Tj
-5.2213 -284.8008 Td
(4377 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4378 static int disk_1_present;) 161.8613 Tj
-5.2213 -303.7875 Td
(4379 static void ide_start_request\(\);) 193.1893 Tj
-5.2213 -313.2809 Td
(4380 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4381 // Wait for IDE disk to become ready.) 219.2959 Tj
-5.2213 -332.2676 Td
(4382 static int) 78.32 Tj
-5.2213 -341.761 Td
(4383 ide_wait_ready\(int check_error\)) 187.968 Tj
-5.2213 -351.2543 Td
(4384 {) 31.328 Tj
-5.2213 -360.7477 Td
(4385   int r;) 67.8773 Tj
-5.2213 -370.2411 Td
(4386 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4387   while\(\(\(r = inb\(0x1f7\)\) & IDE_BSY\) || !\(r & IDE_\
DRDY\)\)) 318.5013 Tj
-5.2213 -389.2278 Td
(4388     ;) 52.2133 Tj
-5.2213 -398.7211 Td
(4389   if\(check_error && \(r & \(IDE_DF|IDE_ERR\)\) != 0\)) 276.7306 Tj
-5.2213 -408.2145 Td
(4390     return -1;) 99.2053 Tj
-5.2213 -417.7079 Td
(4391   return 0;) 83.5413 Tj
-5.2213 -427.2012 Td
(4392 }) 31.328 Tj
-5.2213 -436.6946 Td
(4393 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4394 void) 46.992 Tj
-5.2213 -455.6813 Td
(4395 dummy_ide_intr\(struct trapframe *tf\)) 214.0746 Tj
-5.2213 -465.1747 Td
(4396 {) 31.328 Tj
-5.2213 -474.668 Td
(4397 }) 31.328 Tj
-5.2213 -484.1614 Td
(4398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 43) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 53 53
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/ide.c  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(4400 void) 46.992 Tj
-5.2213 -37.9735 Td
(4401 ide_init\(void\)) 99.2053 Tj
-5.2213 -47.4668 Td
(4402 {) 31.328 Tj
-5.2213 -56.9602 Td
(4403   int i;) 67.8773 Tj
-5.2213 -66.4535 Td
(4404 ) 26.1067 Tj
-5.2213 -75.9469 Td
(4405   initlock\(&ide_lock, "ide"\);) 177.5253 Tj
-5.2213 -85.4403 Td
(4406   pic_enable\(IRQ_IDE\);) 140.976 Tj
-5.2213 -94.9336 Td
(4407   ioapic_enable\(IRQ_IDE, ncpu - 1\);) 208.8533 Tj
-5.2213 -104.427 Td
(4408   ide_wait_ready\(0\);) 130.5333 Tj
-5.2213 -113.9203 Td
(4409   reg_irq_handler\(IRQ_IDE_2, dummy_ide_intr\);) 261.0666 Tj
-5.2213 -123.4137 Td
(4410 ) 26.1067 Tj
-5.2213 -132.9071 Td
(4411   // Check if disk 1 is present) 187.968 Tj
-5.2213 -142.4004 Td
(4412   outb\(0x1f6, 0xe0 | \(1<<4\)\);) 177.5253 Tj
-5.2213 -151.8938 Td
(4413   for\(i=0; i<1000; i++\){) 151.4186 Tj
-5.2213 -161.3871 Td
(4414     if\(inb\(0x1f7\) != 0\){) 151.4186 Tj
-5.2213 -170.8805 Td
(4415       disk_1_present = 1;) 156.64 Tj
-5.2213 -180.3739 Td
(4416       break;) 88.7626 Tj
-5.2213 -189.8672 Td
(4417     }) 52.2133 Tj
-5.2213 -199.3606 Td
(4418   }) 41.7707 Tj
-5.2213 -208.8539 Td
(4419 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4420   // Switch back to disk 0.) 167.0826 Tj
-5.2213 -227.8407 Td
(4421   outb\(0x1f6, 0xe0 | \(0<<4\)\);) 177.5253 Tj
-5.2213 -237.334 Td
(4422   outb\(0x3f6, 0\);  // generate interrupt) 234.9599 Tj
-5.2213 -246.8274 Td
(4423 }) 31.328 Tj
-5.2213 -256.3207 Td
(4424 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4425 // Start the request for b.  Caller must hold ide_lock.) 313.2799 Tj
-5.2213 -275.3075 Td
(4426 static void) 83.5413 Tj
-5.2213 -284.8008 Td
(4427 ide_start_request\(struct buf *b\)) 193.1893 Tj
-5.2213 -294.2942 Td
(4428 {) 31.328 Tj
-5.2213 -303.7875 Td
(4429 //    cprintf\("XXX ide_start_request\\n"\);) 240.1813 Tj
-5.2213 -313.2809 Td
(4430   if\(b == 0\)) 88.7626 Tj
-5.2213 -322.7743 Td
(4431     panic\("ide_start_request"\);) 187.968 Tj
-5.2213 -332.2676 Td
(4432 ) 26.1067 Tj
-5.2213 -341.761 Td
(4433   ide_wait_ready\(0\);) 130.5333 Tj
-5.2213 -351.2543 Td
(4434   outb\(0x1f2, 1\);  // number of sectors) 229.7386 Tj
-5.2213 -360.7477 Td
(4435   outb\(0x1f3, b->sector & 0xff\);) 193.1893 Tj
-5.2213 -370.2411 Td
(4436   outb\(0x1f4, \(b->sector >> 8\) & 0xff\);) 229.7386 Tj
-5.2213 -379.7344 Td
(4437   outb\(0x1f5, \(b->sector >> 16\) & 0xff\);) 234.9599 Tj
-5.2213 -389.2278 Td
(4438   outb\(0x1f6, 0xe0 | \(\(b->dev&1\)<<4\) | \(\(b->sector>\
>24\)&0x0f\)\);) 355.0506 Tj
-5.2213 -398.7211 Td
(4439   if\(b->flags & B_DIRTY\){) 156.64 Tj
-5.2213 -408.2145 Td
(4440     outb\(0x1f7, IDE_CMD_WRITE\);) 187.968 Tj
-5.2213 -417.7079 Td
(4441     outsl\(0x1f0, b->data, 512/4\);) 198.4106 Tj
-5.2213 -427.2012 Td
(4442   } else {) 78.32 Tj
-5.2213 -436.6946 Td
(4443     outb\(0x1f7, IDE_CMD_READ\);) 182.7466 Tj
-5.2213 -446.1879 Td
(4444   }) 41.7707 Tj
-5.2213 -455.6813 Td
(4445 }) 31.328 Tj
-5.2213 -465.1747 Td
(4446 ) 26.1067 Tj
-5.2213 -474.668 Td
(4447 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 44) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/ide.c  Page 3) 177.5253 Tj
-5.2213 -28.4801 Td
(4450 // Interrupt handler.) 135.7546 Tj
-5.2213 -37.9735 Td
(4451 void) 46.992 Tj
-5.2213 -47.4668 Td
(4452 ide_intr\(void\)) 99.2053 Tj
-5.2213 -56.9602 Td
(4453 {) 31.328 Tj
-5.2213 -66.4535 Td
(4454   struct buf *b;) 109.648 Tj
-5.2213 -75.9469 Td
(4455 ) 26.1067 Tj
-5.2213 -85.4403 Td
(4456   acquire\(&ide_lock\);) 135.7546 Tj
-5.2213 -94.9336 Td
(4457   if\(\(b = ide_queue\) == 0\){) 167.0826 Tj
-5.2213 -104.427 Td
(4458     release\(&ide_lock\);) 146.1973 Tj
-5.2213 -113.9203 Td
(4459     return;) 83.5413 Tj
-5.2213 -123.4137 Td
(4460   }) 41.7707 Tj
-5.2213 -132.9071 Td
(4461 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4462   // Read data if needed.) 156.64 Tj
-5.2213 -151.8938 Td
(4463   if\(!\(b->flags & B_DIRTY\) && ide_wait_ready\(1\) >= 0\)) 302.8373 Tj
-5.2213 -161.3871 Td
(4464     insl\(0x1f0, b->data, 512/4\);) 193.1893 Tj
-5.2213 -170.8805 Td
(4465 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4466   // Wake process waiting for this buf.) 229.7386 Tj
-5.2213 -189.8672 Td
(4467   b->flags |= B_VALID;) 140.976 Tj
-5.2213 -199.3606 Td
(4468   b->flags &= ~B_DIRTY;) 146.1973 Tj
-5.2213 -208.8539 Td
(4469   wakeup\(b\);) 88.7626 Tj
-5.2213 -218.3473 Td
(4470 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4471   // Start disk on next buf in queue.) 219.2959 Tj
-5.2213 -237.334 Td
(4472   if\(\(ide_queue = b->qnext\) != 0\)) 198.4106 Tj
-5.2213 -246.8274 Td
(4473     ide_start_request\(ide_queue\);) 198.4106 Tj
-5.2213 -256.3207 Td
(4474 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4475   release\(&ide_lock\);) 135.7546 Tj
-5.2213 -275.3075 Td
(4476 }) 31.328 Tj
-5.2213 -284.8008 Td
(4477 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4478 // Sync buf with disk.) 140.976 Tj
-5.2213 -303.7875 Td
(4479 // If B_DIRTY is set, write buf to disk, clear B_DIRTY, se\
t B_VALID.) 381.1572 Tj
-5.2213 -313.2809 Td
(4480 // Else if B_VALID is not set, read buf from disk, set B_V\
ALID.) 355.0506 Tj
-5.2213 -322.7743 Td
(4481 void) 46.992 Tj
-5.2213 -332.2676 Td
(4482 ide_rw\(struct buf *b\)) 135.7546 Tj
-5.2213 -341.761 Td
(4483 {) 31.328 Tj
-5.2213 -351.2543 Td
(4484   struct buf **pp;) 120.0906 Tj
-5.2213 -360.7477 Td
(4485 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4486   if\(!\(b->flags & B_BUSY\)\)) 161.8613 Tj
-5.2213 -379.7344 Td
(4487     panic\("ide_rw: buf not busy"\);) 203.6319 Tj
-5.2213 -389.2278 Td
(4488   if\(\(b->flags & \(B_VALID|B_DIRTY\)\) == B_VALID\)) 271.5093 Tj
-5.2213 -398.7211 Td
(4489     panic\("ide_rw: nothing to do"\);) 208.8533 Tj
-5.2213 -408.2145 Td
(4490   if\(b->dev != 0 && !disk_1_present\)) 214.0746 Tj
-5.2213 -417.7079 Td
(4491     panic\("ide disk 1 not present"\);) 214.0746 Tj
-5.2213 -427.2012 Td
(4492 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4493   acquire\(&ide_lock\);) 135.7546 Tj
-5.2213 -446.1879 Td
(4494 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4495   // Append b to ide_queue.) 167.0826 Tj
-5.2213 -465.1747 Td
(4496   b->qnext = 0;) 104.4266 Tj
-5.2213 -474.668 Td
(4497   for\(pp=&ide_queue; *pp; pp=&\(*pp\)->qnext\)) 250.6239 Tj
-5.2213 -484.1614 Td
(4498     ;) 52.2133 Tj
-5.2213 -493.6547 Td
(4499   *pp = b;) 78.32 Tj
-5.2213 -522.1348 Td
(Sheet 44) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 54 54
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/ide.c  Page 4) 177.5253 Tj
-5.2213 -28.4801 Td
(4500   // Start disk if necessary.) 177.5253 Tj
-5.2213 -37.9735 Td
(4501   if\(ide_queue == b\)) 130.5333 Tj
-5.2213 -47.4668 Td
(4502     ide_start_request\(b\);) 156.64 Tj
-5.2213 -56.9602 Td
(4503 ) 26.1067 Tj
-5.2213 -66.4535 Td
(4504   // Wait for request to finish.) 193.1893 Tj
-5.2213 -75.9469 Td
(4505   // Assuming will not sleep too long: ignore cp->killed.) 323.7226 Tj
-5.2213 -85.4403 Td
(4506   while\(\(b->flags & \(B_VALID|B_DIRTY\)\) != B_VALID\)) 287.1733 Tj
-5.2213 -94.9336 Td
(4507   {) 41.7707 Tj
-5.2213 -104.427 Td
(4508     sleep\(b, &ide_lock\);) 151.4186 Tj
-5.2213 -113.9203 Td
(4509   }) 41.7707 Tj
-5.2213 -123.4137 Td
(4510 //  cprintf\("XXX ide_rw: finished\\n"\);) 224.5173 Tj
-5.2213 -132.9071 Td
(4511 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4512   release\(&ide_lock\);) 135.7546 Tj
-5.2213 -151.8938 Td
(4513 }) 31.328 Tj
-5.2213 -161.3871 Td
(4514 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4515 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4516 ) 26.1067 Tj
-5.2213 -189.8672 Td
(4517 ) 26.1067 Tj
-5.2213 -199.3606 Td
(4518 ) 26.1067 Tj
-5.2213 -208.8539 Td
(4519 ) 26.1067 Tj
-5.2213 -218.3473 Td
(4520 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4521 ) 26.1067 Tj
-5.2213 -237.334 Td
(4522 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4523 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4524 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4525 ) 26.1067 Tj
-5.2213 -275.3075 Td
(4526 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4527 ) 26.1067 Tj
-5.2213 -294.2942 Td
(4528 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4529 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4530 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4531 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4532 ) 26.1067 Tj
-5.2213 -341.761 Td
(4533 ) 26.1067 Tj
-5.2213 -351.2543 Td
(4534 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4535 ) 26.1067 Tj
-5.2213 -370.2411 Td
(4536 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4537 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4538 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4539 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4540 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4541 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4542 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4543 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4544 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4545 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4546 ) 26.1067 Tj
-5.2213 -474.668 Td
(4547 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4548 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4549 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 45) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bio.c  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(4550 // Buffer cache.) 109.648 Tj
-5.2213 -37.9735 Td
(4551 //) 36.5493 Tj
-5.2213 -47.4668 Td
(4552 // The buffer cache is a linked list of buf structures hol\
ding) 349.8292 Tj
-5.2213 -56.9602 Td
(4553 // cached copies of disk block contents.  Caching disk blo\
cks) 344.6079 Tj
-5.2213 -66.4535 Td
(4554 // in memory reduces the number of disk reads and also pro\
vides) 355.0506 Tj
-5.2213 -75.9469 Td
(4555 // a synchronization point for disk blocks used by multipl\
e processes.) 391.5999 Tj
-5.2213 -85.4403 Td
(4556 //) 36.5493 Tj
-5.2213 -94.9336 Td
(4557 // Interface:) 93.984 Tj
-5.2213 -104.427 Td
(4558 // * To get a buffer for a particular disk block, call bre\
ad.) 344.6079 Tj
-5.2213 -113.9203 Td
(4559 // * After changing buffer data, call bwrite to flush it t\
o disk.) 365.4932 Tj
-5.2213 -123.4137 Td
(4560 // * When done with the buffer, call brelse.) 255.8453 Tj
-5.2213 -132.9071 Td
(4561 // * Do not use the buffer after calling brelse.) 276.7306 Tj
-5.2213 -142.4004 Td
(4562 // * Only one process at a time can use a buffer,) 281.9519 Tj
-5.2213 -151.8938 Td
(4563 //     so do not keep them longer than necessary.) 281.9519 Tj
-5.2213 -161.3871 Td
(4564 //) 36.5493 Tj
-5.2213 -170.8805 Td
(4565 // The implementation uses three state flags internally:) 318.5013 Tj
-5.2213 -180.3739 Td
(4566 // * B_BUSY: the block has been returned from bread) 292.3946 Tj
-5.2213 -189.8672 Td
(4567 //     and has not been passed back to brelse.) 266.2879 Tj
-5.2213 -199.3606 Td
(4568 // * B_VALID: the buffer data has been initialized) 287.1733 Tj
-5.2213 -208.8539 Td
(4569 //     with the associated disk block contents.) 271.5093 Tj
-5.2213 -218.3473 Td
(4570 // * B_DIRTY: the buffer data has been modified) 271.5093 Tj
-5.2213 -227.8407 Td
(4571 //     and needs to be written to disk.) 229.7386 Tj
-5.2213 -237.334 Td
(4572 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4573 #include "types.h") 120.0906 Tj
-5.2213 -256.3207 Td
(4574 #include "defs.h") 114.8693 Tj
-5.2213 -265.8141 Td
(4575 #include "param.h") 120.0906 Tj
-5.2213 -275.3075 Td
(4576 #include "spinlock.h") 135.7546 Tj
-5.2213 -284.8008 Td
(4577 #include "buf.h") 109.648 Tj
-5.2213 -294.2942 Td
(4578 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4579 struct buf buf[NBUF];) 135.7546 Tj
-5.2213 -313.2809 Td
(4580 struct spinlock buf_table_lock;) 187.968 Tj
-5.2213 -322.7743 Td
(4581 ) 26.1067 Tj
-5.2213 -332.2676 Td
(4582 // Linked list of all buffers, through prev/next.) 281.9519 Tj
-5.2213 -341.761 Td
(4583 // bufhead->next is most recently used.) 229.7386 Tj
-5.2213 -351.2543 Td
(4584 // bufhead->tail is least recently used.) 234.9599 Tj
-5.2213 -360.7477 Td
(4585 struct buf bufhead;) 125.312 Tj
-5.2213 -370.2411 Td
(4586 ) 26.1067 Tj
-5.2213 -379.7344 Td
(4587 void) 46.992 Tj
-5.2213 -389.2278 Td
(4588 binit\(void\)) 83.5413 Tj
-5.2213 -398.7211 Td
(4589 {) 31.328 Tj
-5.2213 -408.2145 Td
(4590   struct buf *b;) 109.648 Tj
-5.2213 -417.7079 Td
(4591 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4592   initlock\(&buf_table_lock, "buf_table"\);) 240.1813 Tj
-5.2213 -436.6946 Td
(4593 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4594   // Create linked list of buffers) 203.6319 Tj
-5.2213 -455.6813 Td
(4595   bufhead.prev = &bufhead;) 161.8613 Tj
-5.2213 -465.1747 Td
(4596   bufhead.next = &bufhead;) 161.8613 Tj
-5.2213 -474.668 Td
(4597   for\(b = buf; b < buf+NBUF; b++\){) 203.6319 Tj
-5.2213 -484.1614 Td
(4598     b->next = bufhead.next;) 167.0826 Tj
-5.2213 -493.6547 Td
(4599     b->prev = &bufhead;) 146.1973 Tj
-5.2213 -522.1348 Td
(Sheet 45) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 55 55
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bio.c  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(4600     bufhead.next->prev = b;) 167.0826 Tj
-5.2213 -37.9735 Td
(4601     bufhead.next = b;) 135.7546 Tj
-5.2213 -47.4668 Td
(4602   }) 41.7707 Tj
-5.2213 -56.9602 Td
(4603 }) 31.328 Tj
-5.2213 -66.4535 Td
(4604 ) 26.1067 Tj
-5.2213 -75.9469 Td
(4605 // Look through buffer cache for sector on device dev.) 308.0586 Tj
-5.2213 -85.4403 Td
(4606 // If not found, allocate fresh block.) 224.5173 Tj
-5.2213 -94.9336 Td
(4607 // In either case, return locked buffer.) 234.9599 Tj
-5.2213 -104.427 Td
(4608 static struct buf*) 120.0906 Tj
-5.2213 -113.9203 Td
(4609 bget\(uint dev, uint sector\)) 167.0826 Tj
-5.2213 -123.4137 Td
(4610 {) 31.328 Tj
-5.2213 -132.9071 Td
(4611   struct buf *b;) 109.648 Tj
-5.2213 -142.4004 Td
(4612 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4613   acquire\(&buf_table_lock\);) 167.0826 Tj
-5.2213 -161.3871 Td
(4614 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4615  loop:) 57.4347 Tj
-5.2213 -180.3739 Td
(4616   // Try for cached block.) 161.8613 Tj
-5.2213 -189.8672 Td
(4617   for\(b = bufhead.next; b != &bufhead; b = b->next\){) 297.6159 Tj
-5.2213 -199.3606 Td
(4618     if\(\(b->flags & \(B_BUSY|B_VALID\)\) &&) 229.7386 Tj
-5.2213 -208.8539 Td
(4619        b->dev == dev && b->sector == sector\){) 261.0666 Tj
-5.2213 -218.3473 Td
(4620       if\(b->flags & B_BUSY\){) 172.304 Tj
-5.2213 -227.8407 Td
(4621         sleep\(buf, &buf_table_lock\);) 214.0746 Tj
-5.2213 -237.334 Td
(4622         goto loop;) 120.0906 Tj
-5.2213 -246.8274 Td
(4623       }) 62.656 Tj
-5.2213 -256.3207 Td
(4624       b->flags |= B_BUSY;) 156.64 Tj
-5.2213 -265.8141 Td
(4625       release\(&buf_table_lock\);) 187.968 Tj
-5.2213 -275.3075 Td
(4626       return b;) 104.4266 Tj
-5.2213 -284.8008 Td
(4627     }) 52.2133 Tj
-5.2213 -294.2942 Td
(4628   }) 41.7707 Tj
-5.2213 -303.7875 Td
(4629 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4630   // Allocate fresh block.) 161.8613 Tj
-5.2213 -322.7743 Td
(4631   for\(b = bufhead.prev; b != &bufhead; b = b->prev\){) 297.6159 Tj
-5.2213 -332.2676 Td
(4632     if\(\(b->flags & B_BUSY\) == 0\){) 198.4106 Tj
-5.2213 -341.761 Td
(4633       b->flags = B_BUSY;) 151.4186 Tj
-5.2213 -351.2543 Td
(4634       b->dev = dev;) 125.312 Tj
-5.2213 -360.7477 Td
(4635       b->sector = sector;) 156.64 Tj
-5.2213 -370.2411 Td
(4636       release\(&buf_table_lock\);) 187.968 Tj
-5.2213 -379.7344 Td
(4637       return b;) 104.4266 Tj
-5.2213 -389.2278 Td
(4638     }) 52.2133 Tj
-5.2213 -398.7211 Td
(4639   }) 41.7707 Tj
-5.2213 -408.2145 Td
(4640   panic\("bget: no buffers"\);) 172.304 Tj
-5.2213 -417.7079 Td
(4641 }) 31.328 Tj
-5.2213 -427.2012 Td
(4642 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4643 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4644 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4645 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4646 ) 26.1067 Tj
-5.2213 -474.668 Td
(4647 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4648 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4649 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 46) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/bio.c  Page 3) 177.5253 Tj
-5.2213 -28.4801 Td
(4650 // Return a B_BUSY buf with the contents of the indicated \
disk sector.) 391.5999 Tj
-5.2213 -37.9735 Td
(4651 struct buf*) 83.5413 Tj
-5.2213 -47.4668 Td
(4652 bread\(uint dev, uint sector\)) 172.304 Tj
-5.2213 -56.9602 Td
(4653 {) 31.328 Tj
-5.2213 -66.4535 Td
(4654   struct buf *b;) 109.648 Tj
-5.2213 -75.9469 Td
(4655 ) 26.1067 Tj
-5.2213 -85.4403 Td
(4656   b = bget\(dev, sector\);) 151.4186 Tj
-5.2213 -94.9336 Td
(4657   if\(!\(b->flags & B_VALID\)\)) 167.0826 Tj
-5.2213 -104.427 Td
(4658     ide_rw\(b\);) 99.2053 Tj
-5.2213 -113.9203 Td
(4659   return b;) 83.5413 Tj
-5.2213 -123.4137 Td
(4660 }) 31.328 Tj
-5.2213 -132.9071 Td
(4661 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4662 // Write buf's contents to disk.  Must be locked.) 281.9519 Tj
-5.2213 -151.8938 Td
(4663 void) 46.992 Tj
-5.2213 -161.3871 Td
(4664 bwrite\(struct buf *b\)) 135.7546 Tj
-5.2213 -170.8805 Td
(4665 {) 31.328 Tj
-5.2213 -180.3739 Td
(4666   if\(\(b->flags & B_BUSY\) == 0\)) 182.7466 Tj
-5.2213 -189.8672 Td
(4667     panic\("bwrite"\);) 130.5333 Tj
-5.2213 -199.3606 Td
(4668   b->flags |= B_DIRTY;) 140.976 Tj
-5.2213 -208.8539 Td
(4669   ide_rw\(b\);) 88.7626 Tj
-5.2213 -218.3473 Td
(4670 }) 31.328 Tj
-5.2213 -227.8407 Td
(4671 ) 26.1067 Tj
-5.2213 -237.334 Td
(4672 // Release the buffer buf.) 161.8613 Tj
-5.2213 -246.8274 Td
(4673 void) 46.992 Tj
-5.2213 -256.3207 Td
(4674 brelse\(struct buf *b\)) 135.7546 Tj
-5.2213 -265.8141 Td
(4675 {) 31.328 Tj
-5.2213 -275.3075 Td
(4676   if\(\(b->flags & B_BUSY\) == 0\)) 182.7466 Tj
-5.2213 -284.8008 Td
(4677     panic\("brelse"\);) 130.5333 Tj
-5.2213 -294.2942 Td
(4678 ) 26.1067 Tj
-5.2213 -303.7875 Td
(4679   acquire\(&buf_table_lock\);) 167.0826 Tj
-5.2213 -313.2809 Td
(4680 ) 26.1067 Tj
-5.2213 -322.7743 Td
(4681   b->next->prev = b->prev;) 161.8613 Tj
-5.2213 -332.2676 Td
(4682   b->prev->next = b->next;) 161.8613 Tj
-5.2213 -341.761 Td
(4683   b->next = bufhead.next;) 156.64 Tj
-5.2213 -351.2543 Td
(4684   b->prev = &bufhead;) 135.7546 Tj
-5.2213 -360.7477 Td
(4685   bufhead.next->prev = b;) 156.64 Tj
-5.2213 -370.2411 Td
(4686   bufhead.next = b;) 125.312 Tj
-5.2213 -379.7344 Td
(4687 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4688   b->flags &= ~B_BUSY;) 140.976 Tj
-5.2213 -398.7211 Td
(4689   wakeup\(buf\);) 99.2053 Tj
-5.2213 -408.2145 Td
(4690 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4691   release\(&buf_table_lock\);) 167.0826 Tj
-5.2213 -427.2012 Td
(4692 }) 31.328 Tj
-5.2213 -436.6946 Td
(4693 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4694 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4695 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4696 ) 26.1067 Tj
-5.2213 -474.668 Td
(4697 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4698 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4699 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 46) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 56 56
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 1) 172.304 Tj
-5.2213 -28.4801 Td
(4700 // File system implementation.  Four layers:) 255.8453 Tj
-5.2213 -37.9735 Td
(4701 //   + Blocks: allocator for raw disk blocks.) 261.0666 Tj
-5.2213 -47.4668 Td
(4702 //   + Files: inode allocator, reading, writing, metadata.) 328.9439 Tj
-5.2213 -56.9602 Td
(4703 //   + Directories: inode with special contents \(list of \
other inodes!\)) 396.8212 Tj
-5.2213 -66.4535 Td
(4704 //   + Names: paths like /usr/rtm/xv6/fs.c for convenient \
naming.) 365.4932 Tj
-5.2213 -75.9469 Td
(4705 //) 36.5493 Tj
-5.2213 -85.4403 Td
(4706 // Disk layout is: superblock, inodes, block in-use bitmap\
, data blocks.) 402.0426 Tj
-5.2213 -94.9336 Td
(4707 //) 36.5493 Tj
-5.2213 -104.427 Td
(4708 // This file contains the low-level file system manipulati\
on) 339.3866 Tj
-5.2213 -113.9203 Td
(4709 // routines.  The \(higher-level\) system call implementat\
ions) 339.3866 Tj
-5.2213 -123.4137 Td
(4710 // are in sysfile.c.) 130.5333 Tj
-5.2213 -132.9071 Td
(4711 ) 26.1067 Tj
-5.2213 -142.4004 Td
(4712 #include "types.h") 120.0906 Tj
-5.2213 -151.8938 Td
(4713 #include "defs.h") 114.8693 Tj
-5.2213 -161.3871 Td
(4714 #include "param.h") 120.0906 Tj
-5.2213 -170.8805 Td
(4715 #include "stat.h") 114.8693 Tj
-5.2213 -180.3739 Td
(4716 #include "mmu.h") 109.648 Tj
-5.2213 -189.8672 Td
(4717 #include "proc.h") 114.8693 Tj
-5.2213 -199.3606 Td
(4718 #include "spinlock.h") 135.7546 Tj
-5.2213 -208.8539 Td
(4719 #include "buf.h") 109.648 Tj
-5.2213 -218.3473 Td
(4720 #include "fs.h") 104.4266 Tj
-5.2213 -227.8407 Td
(4721 #include "fsvar.h") 120.0906 Tj
-5.2213 -237.334 Td
(4722 #include "dev.h") 109.648 Tj
-5.2213 -246.8274 Td
(4723 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4724 #define min\(a, b\) \(\(a\) < \(b\) ? \(a\) : \(b\)\)) 240.1813 Tj
-5.2213 -265.8141 Td
(4725 static void itrunc\(struct inode*\);) 203.6319 Tj
-5.2213 -275.3075 Td
(4726 ) 26.1067 Tj
-5.2213 -284.8008 Td
(4727 // Read the super block.) 151.4186 Tj
-5.2213 -294.2942 Td
(4728 static void) 83.5413 Tj
-5.2213 -303.7875 Td
(4729 readsb\(int dev, struct superblock *sb\)) 224.5173 Tj
-5.2213 -313.2809 Td
(4730 {) 31.328 Tj
-5.2213 -322.7743 Td
(4731   struct buf *bp;) 114.8693 Tj
-5.2213 -332.2676 Td
(4732 ) 26.1067 Tj
-5.2213 -341.761 Td
(4733 //  cprintf\("XXX %s\\n",__func__\);) 198.4106 Tj
-5.2213 -351.2543 Td
(4734   bp = bread\(dev, 1\);) 135.7546 Tj
-5.2213 -360.7477 Td
(4735   memmove\(sb, bp->data, sizeof\(*sb\)\);) 219.2959 Tj
-5.2213 -370.2411 Td
(4736   brelse\(bp\);) 93.984 Tj
-5.2213 -379.7344 Td
(4737 }) 31.328 Tj
-5.2213 -389.2278 Td
(4738 ) 26.1067 Tj
-5.2213 -398.7211 Td
(4739 ) 26.1067 Tj
-5.2213 -408.2145 Td
(4740 ) 26.1067 Tj
-5.2213 -417.7079 Td
(4741 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4742 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4743 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4744 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4745 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4746 ) 26.1067 Tj
-5.2213 -474.668 Td
(4747 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4748 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4749 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 47) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 2) 172.304 Tj
-5.2213 -28.4801 Td
(4750 // Zero a block.) 109.648 Tj
-5.2213 -37.9735 Td
(4751 static void) 83.5413 Tj
-5.2213 -47.4668 Td
(4752 bzero\(int dev, int bno\)) 146.1973 Tj
-5.2213 -56.9602 Td
(4753 {) 31.328 Tj
-5.2213 -66.4535 Td
(4754   struct buf *bp;) 114.8693 Tj
-5.2213 -75.9469 Td
(4755 ) 26.1067 Tj
-5.2213 -85.4403 Td
(4756 //  cprintf\("XXX %s\\n",__func__\);) 198.4106 Tj
-5.2213 -94.9336 Td
(4757   bp = bread\(dev, bno\);) 146.1973 Tj
-5.2213 -104.427 Td
(4758   memset\(bp->data, 0, BSIZE\);) 177.5253 Tj
-5.2213 -113.9203 Td
(4759   bwrite\(bp\);) 93.984 Tj
-5.2213 -123.4137 Td
(4760   brelse\(bp\);) 93.984 Tj
-5.2213 -132.9071 Td
(4761 }) 31.328 Tj
-5.2213 -142.4004 Td
(4762 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4763 // Blocks.) 78.32 Tj
-5.2213 -161.3871 Td
(4764 ) 26.1067 Tj
-5.2213 -170.8805 Td
(4765 // Allocate a disk block.) 156.64 Tj
-5.2213 -180.3739 Td
(4766 static uint) 83.5413 Tj
-5.2213 -189.8672 Td
(4767 balloc\(uint dev\)) 109.648 Tj
-5.2213 -199.3606 Td
(4768 {) 31.328 Tj
-5.2213 -208.8539 Td
(4769   int b, bi, m;) 104.4266 Tj
-5.2213 -218.3473 Td
(4770   struct buf *bp;) 114.8693 Tj
-5.2213 -227.8407 Td
(4771   struct superblock sb;) 146.1973 Tj
-5.2213 -237.334 Td
(4772 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4773 //  cprintf\("XXX %s\\n",__func__\);) 198.4106 Tj
-5.2213 -256.3207 Td
(4774   bp = 0;) 73.0986 Tj
-5.2213 -265.8141 Td
(4775   readsb\(dev, &sb\);) 125.312 Tj
-5.2213 -275.3075 Td
(4776   for\(b = 0; b < sb.size; b += BPB\){) 214.0746 Tj
-5.2213 -284.8008 Td
(4777     bp = bread\(dev, BBLOCK\(b, sb.ninodes\)\);) 250.6239 Tj
-5.2213 -294.2942 Td
(4778     for\(bi = 0; bi < BPB; bi++\){) 193.1893 Tj
-5.2213 -303.7875 Td
(4779       m = 1 << \(bi % 8\);) 151.4186 Tj
-5.2213 -313.2809 Td
(4780       if\(\(bp->data[bi/8] & m\) == 0\){  // Is block free\
?) 313.2799 Tj
-5.2213 -322.7743 Td
(4781         bp->data[bi/8] |= m;  // Mark block in use on disk\
.) 334.1652 Tj
-5.2213 -332.2676 Td
(4782         bwrite\(bp\);) 125.312 Tj
-5.2213 -341.761 Td
(4783         brelse\(bp\);) 125.312 Tj
-5.2213 -351.2543 Td
(4784         return b + bi;) 140.976 Tj
-5.2213 -360.7477 Td
(4785       }) 62.656 Tj
-5.2213 -370.2411 Td
(4786     }) 52.2133 Tj
-5.2213 -379.7344 Td
(4787     brelse\(bp\);) 104.4266 Tj
-5.2213 -389.2278 Td
(4788   }) 41.7707 Tj
-5.2213 -398.7211 Td
(4789   panic\("balloc: out of blocks"\);) 198.4106 Tj
-5.2213 -408.2145 Td
(4790 }) 31.328 Tj
-5.2213 -417.7079 Td
(4791 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4792 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4793 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4794 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4795 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4796 ) 26.1067 Tj
-5.2213 -474.668 Td
(4797 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4798 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 47) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 57 57
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 3) 172.304 Tj
-5.2213 -28.4801 Td
(4800 // Free a disk block.) 135.7546 Tj
-5.2213 -37.9735 Td
(4801 static void) 83.5413 Tj
-5.2213 -47.4668 Td
(4802 bfree\(int dev, uint b\)) 140.976 Tj
-5.2213 -56.9602 Td
(4803 {) 31.328 Tj
-5.2213 -66.4535 Td
(4804   struct buf *bp;) 114.8693 Tj
-5.2213 -75.9469 Td
(4805   struct superblock sb;) 146.1973 Tj
-5.2213 -85.4403 Td
(4806   int bi, m;) 88.7626 Tj
-5.2213 -94.9336 Td
(4807 ) 26.1067 Tj
-5.2213 -104.427 Td
(4808   bzero\(dev, b\);) 109.648 Tj
-5.2213 -113.9203 Td
(4809 ) 26.1067 Tj
-5.2213 -123.4137 Td
(4810 //  cprintf\("XXX %s\\n",__func__\);) 198.4106 Tj
-5.2213 -132.9071 Td
(4811   readsb\(dev, &sb\);) 125.312 Tj
-5.2213 -142.4004 Td
(4812   bp = bread\(dev, BBLOCK\(b, sb.ninodes\)\);) 240.1813 Tj
-5.2213 -151.8938 Td
(4813   bi = b % BPB;) 104.4266 Tj
-5.2213 -161.3871 Td
(4814   m = 1 << \(bi % 8\);) 130.5333 Tj
-5.2213 -170.8805 Td
(4815   if\(\(bp->data[bi/8] & m\) == 0\)) 187.968 Tj
-5.2213 -180.3739 Td
(4816     panic\("freeing free block"\);) 193.1893 Tj
-5.2213 -189.8672 Td
(4817   bp->data[bi/8] &= ~m;  // Mark block free on disk.) 297.6159 Tj
-5.2213 -199.3606 Td
(4818   bwrite\(bp\);) 93.984 Tj
-5.2213 -208.8539 Td
(4819   brelse\(bp\);) 93.984 Tj
-5.2213 -218.3473 Td
(4820 }) 31.328 Tj
-5.2213 -227.8407 Td
(4821 ) 26.1067 Tj
-5.2213 -237.334 Td
(4822 // Inodes.) 78.32 Tj
-5.2213 -246.8274 Td
(4823 //) 36.5493 Tj
-5.2213 -256.3207 Td
(4824 // An inode is a single, unnamed file in the file system.) 323.7226 Tj
-5.2213 -265.8141 Td
(4825 // The inode disk structure holds metadata \(the type, dev\
ice numbers,) 386.3786 Tj
-5.2213 -275.3075 Td
(4826 // and data size\) along with a list of blocks where the a\
ssociated) 370.7146 Tj
-5.2213 -284.8008 Td
(4827 // data can be found.) 135.7546 Tj
-5.2213 -294.2942 Td
(4828 //) 36.5493 Tj
-5.2213 -303.7875 Td
(4829 // The inodes are laid out sequentially on disk immediatel\
y after) 365.4932 Tj
-5.2213 -313.2809 Td
(4830 // the superblock.  The kernel keeps a cache of the in-use) 328.9439 Tj
-5.2213 -322.7743 Td
(4831 // on-disk structures to provide a place for synchronizing\
 access) 365.4932 Tj
-5.2213 -332.2676 Td
(4832 // to inodes shared between multiple processes.) 271.5093 Tj
-5.2213 -341.761 Td
(4833 //) 36.5493 Tj
-5.2213 -351.2543 Td
(4834 // ip->ref counts the number of pointer references to this\
 cached) 365.4932 Tj
-5.2213 -360.7477 Td
(4835 // inode; references are typically kept in struct file and\
 in cp->cwd.) 391.5999 Tj
-5.2213 -370.2411 Td
(4836 // When ip->ref falls to zero, the inode is no longer cach\
ed.) 344.6079 Tj
-5.2213 -379.7344 Td
(4837 // It is an error to use an inode without holding a refere\
nce to it.) 381.1572 Tj
-5.2213 -389.2278 Td
(4838 //) 36.5493 Tj
-5.2213 -398.7211 Td
(4839 // Processes are only allowed to read and write inode) 302.8373 Tj
-5.2213 -408.2145 Td
(4840 // metadata and contents when holding the inode's lock,) 313.2799 Tj
-5.2213 -417.7079 Td
(4841 // represented by the I_BUSY flag in the in-memory copy.) 318.5013 Tj
-5.2213 -427.2012 Td
(4842 // Because inode locks are held during disk accesses,) 302.8373 Tj
-5.2213 -436.6946 Td
(4843 // they are implemented using a flag rather than with) 302.8373 Tj
-5.2213 -446.1879 Td
(4844 // spin locks.  Callers are responsible for locking) 292.3946 Tj
-5.2213 -455.6813 Td
(4845 // inodes before passing them to routines in this file; le\
aving) 355.0506 Tj
-5.2213 -465.1747 Td
(4846 // this responsibility with the caller makes it possible f\
or them) 365.4932 Tj
-5.2213 -474.668 Td
(4847 // to create arbitrarily-sized atomic operations.) 281.9519 Tj
-5.2213 -484.1614 Td
(4848 //) 36.5493 Tj
-5.2213 -493.6547 Td
(4849 // To give maximum control over locking to the callers,) 313.2799 Tj
-5.2213 -522.1348 Td
(Sheet 48) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 4) 172.304 Tj
-5.2213 -28.4801 Td
(4850 // the routines in this file that return inode pointers) 313.2799 Tj
-5.2213 -37.9735 Td
(4851 // return pointers to *unlocked* inodes.  It is the caller\
s') 339.3866 Tj
-5.2213 -47.4668 Td
(4852 // responsibility to lock them before using them.  A non-z\
ero) 344.6079 Tj
-5.2213 -56.9602 Td
(4853 // ip->ref keeps these unlocked inodes in the cache.) 297.6159 Tj
-5.2213 -66.4535 Td
(4854 ) 26.1067 Tj
-5.2213 -75.9469 Td
(4855 struct {) 67.8773 Tj
-5.2213 -85.4403 Td
(4856   struct spinlock lock;) 146.1973 Tj
-5.2213 -94.9336 Td
(4857   struct inode inode[NINODE];) 177.5253 Tj
-5.2213 -104.427 Td
(4858 } icache;) 73.0986 Tj
-5.2213 -113.9203 Td
(4859 ) 26.1067 Tj
-5.2213 -123.4137 Td
(4860 void) 46.992 Tj
-5.2213 -132.9071 Td
(4861 iinit\(void\)) 83.5413 Tj
-5.2213 -142.4004 Td
(4862 {) 31.328 Tj
-5.2213 -151.8938 Td
(4863   initlock\(&icache.lock, "icache.lock"\);) 234.9599 Tj
-5.2213 -161.3871 Td
(4864 }) 31.328 Tj
-5.2213 -170.8805 Td
(4865 ) 26.1067 Tj
-5.2213 -180.3739 Td
(4866 // Find the inode with number inum on device dev) 276.7306 Tj
-5.2213 -189.8672 Td
(4867 // and return the in-memory copy.) 198.4106 Tj
-5.2213 -199.3606 Td
(4868 static struct inode*) 130.5333 Tj
-5.2213 -208.8539 Td
(4869 iget\(uint dev, uint inum\)) 156.64 Tj
-5.2213 -218.3473 Td
(4870 {) 31.328 Tj
-5.2213 -227.8407 Td
(4871   struct inode *ip, *empty;) 167.0826 Tj
-5.2213 -237.334 Td
(4872 ) 26.1067 Tj
-5.2213 -246.8274 Td
(4873   acquire\(&icache.lock\);) 151.4186 Tj
-5.2213 -256.3207 Td
(4874 ) 26.1067 Tj
-5.2213 -265.8141 Td
(4875   // Try for cached inode.) 161.8613 Tj
-5.2213 -275.3075 Td
(4876   empty = 0;) 88.7626 Tj
-5.2213 -284.8008 Td
(4877   for\(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; \
ip++\){) 355.0506 Tj
-5.2213 -294.2942 Td
(4878     if\(ip->ref > 0 && ip->dev == dev && ip->inum == inum\)\
{) 328.9439 Tj
-5.2213 -303.7875 Td
(4879       ip->ref++;) 109.648 Tj
-5.2213 -313.2809 Td
(4880       release\(&icache.lock\);) 172.304 Tj
-5.2213 -322.7743 Td
(4881 //      cprintf\("XXX iget: found in cache\\n"\);) 266.2879 Tj
-5.2213 -332.2676 Td
(4882       return ip;) 109.648 Tj
-5.2213 -341.761 Td
(4883     }) 52.2133 Tj
-5.2213 -351.2543 Td
(4884     if\(empty == 0 && ip->ref == 0\)    // Remember empty \
slot.) 344.6079 Tj
-5.2213 -360.7477 Td
(4885       empty = ip;) 114.8693 Tj
-5.2213 -370.2411 Td
(4886   }) 41.7707 Tj
-5.2213 -379.7344 Td
(4887 ) 26.1067 Tj
-5.2213 -389.2278 Td
(4888   // Allocate fresh inode.) 161.8613 Tj
-5.2213 -398.7211 Td
(4889   if\(empty == 0\)) 109.648 Tj
-5.2213 -408.2145 Td
(4890     panic\("iget: no inodes"\);) 177.5253 Tj
-5.2213 -417.7079 Td
(4891 ) 26.1067 Tj
-5.2213 -427.2012 Td
(4892 //  cprintf\("XXX iget: allocating new\\n"\);) 245.4026 Tj
-5.2213 -436.6946 Td
(4893   ip = empty;) 93.984 Tj
-5.2213 -446.1879 Td
(4894   ip->dev = dev;) 109.648 Tj
-5.2213 -455.6813 Td
(4895   ip->inum = inum;) 120.0906 Tj
-5.2213 -465.1747 Td
(4896   ip->ref = 1;) 99.2053 Tj
-5.2213 -474.668 Td
(4897   ip->flags = 0;) 109.648 Tj
-5.2213 -484.1614 Td
(4898   release\(&icache.lock\);) 151.4186 Tj
-5.2213 -493.6547 Td
(4899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 48) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 58 58
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 5) 172.304 Tj
-5.2213 -28.4801 Td
(4900   return ip;) 88.7626 Tj
-5.2213 -37.9735 Td
(4901 }) 31.328 Tj
-5.2213 -47.4668 Td
(4902 ) 26.1067 Tj
-5.2213 -56.9602 Td
(4903 // Increment reference count for ip.) 214.0746 Tj
-5.2213 -66.4535 Td
(4904 // Returns ip to enable ip = idup\(ip1\) idiom.) 261.0666 Tj
-5.2213 -75.9469 Td
(4905 struct inode*) 93.984 Tj
-5.2213 -85.4403 Td
(4906 idup\(struct inode *ip\)) 140.976 Tj
-5.2213 -94.9336 Td
(4907 {) 31.328 Tj
-5.2213 -104.427 Td
(4908   acquire\(&icache.lock\);) 151.4186 Tj
-5.2213 -113.9203 Td
(4909   ip->ref++;) 88.7626 Tj
-5.2213 -123.4137 Td
(4910   release\(&icache.lock\);) 151.4186 Tj
-5.2213 -132.9071 Td
(4911   return ip;) 88.7626 Tj
-5.2213 -142.4004 Td
(4912 }) 31.328 Tj
-5.2213 -151.8938 Td
(4913 ) 26.1067 Tj
-5.2213 -161.3871 Td
(4914 // Lock the given inode.) 151.4186 Tj
-5.2213 -170.8805 Td
(4915 void) 46.992 Tj
-5.2213 -180.3739 Td
(4916 ilock\(struct inode *ip\)) 146.1973 Tj
-5.2213 -189.8672 Td
(4917 {) 31.328 Tj
-5.2213 -199.3606 Td
(4918   struct buf *bp;) 114.8693 Tj
-5.2213 -208.8539 Td
(4919   struct dinode *dip;) 135.7546 Tj
-5.2213 -218.3473 Td
(4920 ) 26.1067 Tj
-5.2213 -227.8407 Td
(4921   if\(ip == 0 || ip->ref < 1\)) 172.304 Tj
-5.2213 -237.334 Td
(4922     panic\("ilock"\);) 125.312 Tj
-5.2213 -246.8274 Td
(4923 ) 26.1067 Tj
-5.2213 -256.3207 Td
(4924   acquire\(&icache.lock\);) 151.4186 Tj
-5.2213 -265.8141 Td
(4925   while\(ip->flags & I_BUSY\)) 167.0826 Tj
-5.2213 -275.3075 Td
(4926     sleep\(ip, &icache.lock\);) 172.304 Tj
-5.2213 -284.8008 Td
(4927   ip->flags |= I_BUSY;) 140.976 Tj
-5.2213 -294.2942 Td
(4928   release\(&icache.lock\);) 151.4186 Tj
-5.2213 -303.7875 Td
(4929 ) 26.1067 Tj
-5.2213 -313.2809 Td
(4930   if\(!\(ip->flags & I_VALID\)\){) 177.5253 Tj
-5.2213 -322.7743 Td
(4931     bp = bread\(ip->dev, IBLOCK\(ip->inum\)\);) 245.4026 Tj
-5.2213 -332.2676 Td
(4932 //  cprintf\("XXX %s:after bread \\n",__func__\);) 266.2879 Tj
-5.2213 -341.761 Td
(4933     dip = \(struct dinode*\)bp->data + ip->inum%IPB;) 287.1733 Tj
-5.2213 -351.2543 Td
(4934     ip->type = dip->type;) 156.64 Tj
-5.2213 -360.7477 Td
(4935     ip->major = dip->major;) 167.0826 Tj
-5.2213 -370.2411 Td
(4936     ip->minor = dip->minor;) 167.0826 Tj
-5.2213 -379.7344 Td
(4937     ip->nlink = dip->nlink;) 167.0826 Tj
-5.2213 -389.2278 Td
(4938     ip->size = dip->size;) 156.64 Tj
-5.2213 -398.7211 Td
(4939     memmove\(ip->addrs, dip->addrs, sizeof\(ip->addrs\)\);) 308.0586 Tj
-5.2213 -408.2145 Td
(4940     brelse\(bp\);) 104.4266 Tj
-5.2213 -417.7079 Td
(4941     ip->flags |= I_VALID;) 156.64 Tj
-5.2213 -427.2012 Td
(4942     if\(ip->type == 0\)) 135.7546 Tj
-5.2213 -436.6946 Td
(4943       panic\("ilock: no type"\);) 182.7466 Tj
-5.2213 -446.1879 Td
(4944   }) 41.7707 Tj
-5.2213 -455.6813 Td
(4945 }) 31.328 Tj
-5.2213 -465.1747 Td
(4946 ) 26.1067 Tj
-5.2213 -474.668 Td
(4947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 49) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 6) 172.304 Tj
-5.2213 -28.4801 Td
(4950 // Unlock the given inode.) 161.8613 Tj
-5.2213 -37.9735 Td
(4951 void) 46.992 Tj
-5.2213 -47.4668 Td
(4952 iunlock\(struct inode *ip\)) 156.64 Tj
-5.2213 -56.9602 Td
(4953 {) 31.328 Tj
-5.2213 -66.4535 Td
(4954   if\(ip == 0 || !\(ip->flags & I_BUSY\) || ip->ref < 1\)) 302.8373 Tj
-5.2213 -75.9469 Td
(4955     panic\("iunlock"\);) 135.7546 Tj
-5.2213 -85.4403 Td
(4956 ) 26.1067 Tj
-5.2213 -94.9336 Td
(4957   acquire\(&icache.lock\);) 151.4186 Tj
-5.2213 -104.427 Td
(4958   ip->flags &= ~I_BUSY;) 146.1973 Tj
-5.2213 -113.9203 Td
(4959   wakeup\(ip\);) 93.984 Tj
-5.2213 -123.4137 Td
(4960   release\(&icache.lock\);) 151.4186 Tj
-5.2213 -132.9071 Td
(4961 }) 31.328 Tj
-5.2213 -142.4004 Td
(4962 ) 26.1067 Tj
-5.2213 -151.8938 Td
(4963 // Caller holds reference to unlocked ip.  Drop reference.) 328.9439 Tj
-5.2213 -161.3871 Td
(4964 void) 46.992 Tj
-5.2213 -170.8805 Td
(4965 iput\(struct inode *ip\)) 140.976 Tj
-5.2213 -180.3739 Td
(4966 {) 31.328 Tj
-5.2213 -189.8672 Td
(4967   acquire\(&icache.lock\);) 151.4186 Tj
-5.2213 -199.3606 Td
(4968   if\(ip->ref == 1 && \(ip->flags & I_VALID\) && ip->nlink\
 == 0\){) 349.8292 Tj
-5.2213 -208.8539 Td
(4969     // inode is no longer used: truncate and free inode.) 318.5013 Tj
-5.2213 -218.3473 Td
(4970     if\(ip->flags & I_BUSY\)) 161.8613 Tj
-5.2213 -227.8407 Td
(4971       panic\("iput busy"\);) 156.64 Tj
-5.2213 -237.334 Td
(4972     ip->flags |= I_BUSY;) 151.4186 Tj
-5.2213 -246.8274 Td
(4973     release\(&icache.lock\);) 161.8613 Tj
-5.2213 -256.3207 Td
(4974     itrunc\(ip\);) 104.4266 Tj
-5.2213 -265.8141 Td
(4975     ip->type = 0;) 114.8693 Tj
-5.2213 -275.3075 Td
(4976     iupdate\(ip\);) 109.648 Tj
-5.2213 -284.8008 Td
(4977     acquire\(&icache.lock\);) 161.8613 Tj
-5.2213 -294.2942 Td
(4978     ip->flags &= ~I_BUSY;) 156.64 Tj
-5.2213 -303.7875 Td
(4979     wakeup\(ip\);) 104.4266 Tj
-5.2213 -313.2809 Td
(4980   }) 41.7707 Tj
-5.2213 -322.7743 Td
(4981   ip->ref--;) 88.7626 Tj
-5.2213 -332.2676 Td
(4982   release\(&icache.lock\);) 151.4186 Tj
-5.2213 -341.761 Td
(4983 }) 31.328 Tj
-5.2213 -351.2543 Td
(4984 ) 26.1067 Tj
-5.2213 -360.7477 Td
(4985 // Common idiom: unlock, then put.) 203.6319 Tj
-5.2213 -370.2411 Td
(4986 void) 46.992 Tj
-5.2213 -379.7344 Td
(4987 iunlockput\(struct inode *ip\)) 172.304 Tj
-5.2213 -389.2278 Td
(4988 {) 31.328 Tj
-5.2213 -398.7211 Td
(4989   iunlock\(ip\);) 99.2053 Tj
-5.2213 -408.2145 Td
(4990   iput\(ip\);) 83.5413 Tj
-5.2213 -417.7079 Td
(4991 }) 31.328 Tj
-5.2213 -427.2012 Td
(4992 ) 26.1067 Tj
-5.2213 -436.6946 Td
(4993 ) 26.1067 Tj
-5.2213 -446.1879 Td
(4994 ) 26.1067 Tj
-5.2213 -455.6813 Td
(4995 ) 26.1067 Tj
-5.2213 -465.1747 Td
(4996 ) 26.1067 Tj
-5.2213 -474.668 Td
(4997 ) 26.1067 Tj
-5.2213 -484.1614 Td
(4998 ) 26.1067 Tj
-5.2213 -493.6547 Td
(4999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 49) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 59 59
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 7) 172.304 Tj
-5.2213 -28.4801 Td
(5000 // Allocate a new inode with the given type on device dev.) 328.9439 Tj
-5.2213 -37.9735 Td
(5001 struct inode*) 93.984 Tj
-5.2213 -47.4668 Td
(5002 ialloc\(uint dev, short type\)) 172.304 Tj
-5.2213 -56.9602 Td
(5003 {) 31.328 Tj
-5.2213 -66.4535 Td
(5004   int inum;) 83.5413 Tj
-5.2213 -75.9469 Td
(5005   struct buf *bp;) 114.8693 Tj
-5.2213 -85.4403 Td
(5006   struct dinode *dip;) 135.7546 Tj
-5.2213 -94.9336 Td
(5007   struct superblock sb;) 146.1973 Tj
-5.2213 -104.427 Td
(5008 ) 26.1067 Tj
-5.2213 -113.9203 Td
(5009 //  cprintf\("XXX %s\\n",__func__\);) 198.4106 Tj
-5.2213 -123.4137 Td
(5010   readsb\(dev, &sb\);) 125.312 Tj
-5.2213 -132.9071 Td
(5011   for\(inum = 1; inum < sb.ninodes; inum++\){  // loop ove\
r inode blocks) 391.5999 Tj
-5.2213 -142.4004 Td
(5012     bp = bread\(dev, IBLOCK\(inum\)\);) 203.6319 Tj
-5.2213 -151.8938 Td
(5013     dip = \(struct dinode*\)bp->data + inum%IPB;) 266.2879 Tj
-5.2213 -161.3871 Td
(5014     if\(dip->type == 0\){  // a free inode) 234.9599 Tj
-5.2213 -170.8805 Td
(5015       memset\(dip, 0, sizeof\(*dip\)\);) 208.8533 Tj
-5.2213 -180.3739 Td
(5016       dip->type = type;) 146.1973 Tj
-5.2213 -189.8672 Td
(5017       bwrite\(bp\);   // mark it allocated on the disk) 297.6159 Tj
-5.2213 -199.3606 Td
(5018       brelse\(bp\);) 114.8693 Tj
-5.2213 -208.8539 Td
(5019       return iget\(dev, inum\);) 177.5253 Tj
-5.2213 -218.3473 Td
(5020     }) 52.2133 Tj
-5.2213 -227.8407 Td
(5021     brelse\(bp\);) 104.4266 Tj
-5.2213 -237.334 Td
(5022   }) 41.7707 Tj
-5.2213 -246.8274 Td
(5023   panic\("ialloc: no inodes"\);) 177.5253 Tj
-5.2213 -256.3207 Td
(5024 }) 31.328 Tj
-5.2213 -265.8141 Td
(5025 ) 26.1067 Tj
-5.2213 -275.3075 Td
(5026 // Copy inode, which has changed, from memory to disk.) 308.0586 Tj
-5.2213 -284.8008 Td
(5027 void) 46.992 Tj
-5.2213 -294.2942 Td
(5028 iupdate\(struct inode *ip\)) 156.64 Tj
-5.2213 -303.7875 Td
(5029 {) 31.328 Tj
-5.2213 -313.2809 Td
(5030   struct buf *bp;) 114.8693 Tj
-5.2213 -322.7743 Td
(5031   struct dinode *dip;) 135.7546 Tj
-5.2213 -332.2676 Td
(5032 ) 26.1067 Tj
-5.2213 -341.761 Td
(5033   bp = bread\(ip->dev, IBLOCK\(ip->inum\)\);) 234.9599 Tj
-5.2213 -351.2543 Td
(5034   dip = \(struct dinode*\)bp->data + ip->inum%IPB;) 276.7306 Tj
-5.2213 -360.7477 Td
(5035   dip->type = ip->type;) 146.1973 Tj
-5.2213 -370.2411 Td
(5036   dip->major = ip->major;) 156.64 Tj
-5.2213 -379.7344 Td
(5037   dip->minor = ip->minor;) 156.64 Tj
-5.2213 -389.2278 Td
(5038   dip->nlink = ip->nlink;) 156.64 Tj
-5.2213 -398.7211 Td
(5039   dip->size = ip->size;) 146.1973 Tj
-5.2213 -408.2145 Td
(5040   memmove\(dip->addrs, ip->addrs, sizeof\(ip->addrs\)\);) 297.6159 Tj
-5.2213 -417.7079 Td
(5041   bwrite\(bp\);) 93.984 Tj
-5.2213 -427.2012 Td
(5042   brelse\(bp\);) 93.984 Tj
-5.2213 -436.6946 Td
(5043 }) 31.328 Tj
-5.2213 -446.1879 Td
(5044 ) 26.1067 Tj
-5.2213 -455.6813 Td
(5045 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5046 ) 26.1067 Tj
-5.2213 -474.668 Td
(5047 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 50) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 8) 172.304 Tj
-5.2213 -28.4801 Td
(5050 // Inode contents) 114.8693 Tj
-5.2213 -37.9735 Td
(5051 //) 36.5493 Tj
-5.2213 -47.4668 Td
(5052 // The contents \(data\) associated with each inode is sto\
red) 334.1652 Tj
-5.2213 -56.9602 Td
(5053 // in a sequence of blocks on the disk.  The first NDIRECT\
 blocks) 365.4932 Tj
-5.2213 -66.4535 Td
(5054 // are listed in ip->addrs[].  The next NINDIRECT blocks a\
re) 339.3866 Tj
-5.2213 -75.9469 Td
(5055 // listed in the block ip->addrs[INDIRECT].) 250.6239 Tj
-5.2213 -85.4403 Td
(5056 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5057 // Return the disk block address of the nth block in inode\
 ip.) 349.8292 Tj
-5.2213 -104.427 Td
(5058 // If there is no such block, alloc controls whether one i\
s allocated.) 391.5999 Tj
-5.2213 -113.9203 Td
(5059 static uint) 83.5413 Tj
-5.2213 -123.4137 Td
(5060 bmap\(struct inode *ip, uint bn, int alloc\)) 245.4026 Tj
-5.2213 -132.9071 Td
(5061 {) 31.328 Tj
-5.2213 -142.4004 Td
(5062   uint addr, *a;) 109.648 Tj
-5.2213 -151.8938 Td
(5063   struct buf *bp;) 114.8693 Tj
-5.2213 -161.3871 Td
(5064 ) 26.1067 Tj
-5.2213 -170.8805 Td
(5065   if\(bn < NDIRECT\){) 125.312 Tj
-5.2213 -180.3739 Td
(5066     if\(\(addr = ip->addrs[bn]\) == 0\){) 214.0746 Tj
-5.2213 -189.8672 Td
(5067       if\(!alloc\)) 109.648 Tj
-5.2213 -199.3606 Td
(5068         return -1;) 120.0906 Tj
-5.2213 -208.8539 Td
(5069       ip->addrs[bn] = addr = balloc\(ip->dev\);) 261.0666 Tj
-5.2213 -218.3473 Td
(5070     }) 52.2133 Tj
-5.2213 -227.8407 Td
(5071     return addr;) 109.648 Tj
-5.2213 -237.334 Td
(5072   }) 41.7707 Tj
-5.2213 -246.8274 Td
(5073   bn -= NDIRECT;) 109.648 Tj
-5.2213 -256.3207 Td
(5074 ) 26.1067 Tj
-5.2213 -265.8141 Td
(5075   if\(bn < NINDIRECT\){) 135.7546 Tj
-5.2213 -275.3075 Td
(5076     // Load indirect block, allocating if necessary.) 297.6159 Tj
-5.2213 -284.8008 Td
(5077     if\(\(addr = ip->addrs[INDIRECT]\) == 0\){) 245.4026 Tj
-5.2213 -294.2942 Td
(5078       if\(!alloc\)) 109.648 Tj
-5.2213 -303.7875 Td
(5079         return -1;) 120.0906 Tj
-5.2213 -313.2809 Td
(5080       ip->addrs[INDIRECT] = addr = balloc\(ip->dev\);) 292.3946 Tj
-5.2213 -322.7743 Td
(5081     }) 52.2133 Tj
-5.2213 -332.2676 Td
(5082     bp = bread\(ip->dev, addr\);) 182.7466 Tj
-5.2213 -341.761 Td
(5083     a = \(uint*\)bp->data;) 151.4186 Tj
-5.2213 -351.2543 Td
(5084 ) 26.1067 Tj
-5.2213 -360.7477 Td
(5085     if\(\(addr = a[bn]\) == 0\){) 172.304 Tj
-5.2213 -370.2411 Td
(5086       if\(!alloc\){) 114.8693 Tj
-5.2213 -379.7344 Td
(5087         brelse\(bp\);) 125.312 Tj
-5.2213 -389.2278 Td
(5088         return -1;) 120.0906 Tj
-5.2213 -398.7211 Td
(5089       }) 62.656 Tj
-5.2213 -408.2145 Td
(5090       a[bn] = addr = balloc\(ip->dev\);) 219.2959 Tj
-5.2213 -417.7079 Td
(5091       bwrite\(bp\);) 114.8693 Tj
-5.2213 -427.2012 Td
(5092     }) 52.2133 Tj
-5.2213 -436.6946 Td
(5093     brelse\(bp\);) 104.4266 Tj
-5.2213 -446.1879 Td
(5094     return addr;) 109.648 Tj
-5.2213 -455.6813 Td
(5095   }) 41.7707 Tj
-5.2213 -465.1747 Td
(5096 ) 26.1067 Tj
-5.2213 -474.668 Td
(5097   panic\("bmap: out of range"\);) 182.7466 Tj
-5.2213 -484.1614 Td
(5098 }) 31.328 Tj
-5.2213 -493.6547 Td
(5099 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 50) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 60 60
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 9) 172.304 Tj
-5.2213 -28.4801 Td
(5100 // Truncate inode \(discard contents\).) 219.2959 Tj
-5.2213 -37.9735 Td
(5101 static void) 83.5413 Tj
-5.2213 -47.4668 Td
(5102 itrunc\(struct inode *ip\)) 151.4186 Tj
-5.2213 -56.9602 Td
(5103 {) 31.328 Tj
-5.2213 -66.4535 Td
(5104   int i, j;) 83.5413 Tj
-5.2213 -75.9469 Td
(5105   struct buf *bp;) 114.8693 Tj
-5.2213 -85.4403 Td
(5106   uint *a;) 78.32 Tj
-5.2213 -94.9336 Td
(5107 ) 26.1067 Tj
-5.2213 -104.427 Td
(5108   for\(i = 0; i < NDIRECT; i++\){) 187.968 Tj
-5.2213 -113.9203 Td
(5109     if\(ip->addrs[i]\){) 135.7546 Tj
-5.2213 -123.4137 Td
(5110       bfree\(ip->dev, ip->addrs[i]\);) 208.8533 Tj
-5.2213 -132.9071 Td
(5111       ip->addrs[i] = 0;) 146.1973 Tj
-5.2213 -142.4004 Td
(5112     }) 52.2133 Tj
-5.2213 -151.8938 Td
(5113   }) 41.7707 Tj
-5.2213 -161.3871 Td
(5114 ) 26.1067 Tj
-5.2213 -170.8805 Td
(5115   if\(ip->addrs[INDIRECT]\){) 161.8613 Tj
-5.2213 -180.3739 Td
(5116     bp = bread\(ip->dev, ip->addrs[INDIRECT]\);) 261.0666 Tj
-5.2213 -189.8672 Td
(5117     a = \(uint*\)bp->data;) 151.4186 Tj
-5.2213 -199.3606 Td
(5118     for\(j = 0; j < NINDIRECT; j++\){) 208.8533 Tj
-5.2213 -208.8539 Td
(5119       if\(a[j]\)) 99.2053 Tj
-5.2213 -218.3473 Td
(5120         bfree\(ip->dev, a[j]\);) 177.5253 Tj
-5.2213 -227.8407 Td
(5121     }) 52.2133 Tj
-5.2213 -237.334 Td
(5122     brelse\(bp\);) 104.4266 Tj
-5.2213 -246.8274 Td
(5123     ip->addrs[INDIRECT] = 0;) 172.304 Tj
-5.2213 -256.3207 Td
(5124   }) 41.7707 Tj
-5.2213 -265.8141 Td
(5125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(5126   ip->size = 0;) 104.4266 Tj
-5.2213 -284.8008 Td
(5127   iupdate\(ip\);) 99.2053 Tj
-5.2213 -294.2942 Td
(5128 }) 31.328 Tj
-5.2213 -303.7875 Td
(5129 ) 26.1067 Tj
-5.2213 -313.2809 Td
(5130 // Copy stat information from inode.) 214.0746 Tj
-5.2213 -322.7743 Td
(5131 void) 46.992 Tj
-5.2213 -332.2676 Td
(5132 stati\(struct inode *ip, struct stat *st\)) 234.9599 Tj
-5.2213 -341.761 Td
(5133 {) 31.328 Tj
-5.2213 -351.2543 Td
(5134   st->dev = ip->dev;) 130.5333 Tj
-5.2213 -360.7477 Td
(5135   st->ino = ip->inum;) 135.7546 Tj
-5.2213 -370.2411 Td
(5136   st->type = ip->type;) 140.976 Tj
-5.2213 -379.7344 Td
(5137   st->nlink = ip->nlink;) 151.4186 Tj
-5.2213 -389.2278 Td
(5138   st->size = ip->size;) 140.976 Tj
-5.2213 -398.7211 Td
(5139 }) 31.328 Tj
-5.2213 -408.2145 Td
(5140 ) 26.1067 Tj
-5.2213 -417.7079 Td
(5141 ) 26.1067 Tj
-5.2213 -427.2012 Td
(5142 ) 26.1067 Tj
-5.2213 -436.6946 Td
(5143 ) 26.1067 Tj
-5.2213 -446.1879 Td
(5144 ) 26.1067 Tj
-5.2213 -455.6813 Td
(5145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5146 ) 26.1067 Tj
-5.2213 -474.668 Td
(5147 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 51) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 10) 177.5253 Tj
-5.2213 -28.4801 Td
(5150 // Read data from inode.) 151.4186 Tj
-5.2213 -37.9735 Td
(5151 int) 41.7707 Tj
-5.2213 -47.4668 Td
(5152 readi\(struct inode *ip, char *dst, uint off, uint n\)) 297.6159 Tj
-5.2213 -56.9602 Td
(5153 {) 31.328 Tj
-5.2213 -66.4535 Td
(5154   uint tot, m;) 99.2053 Tj
-5.2213 -75.9469 Td
(5155   struct buf *bp;) 114.8693 Tj
-5.2213 -85.4403 Td
(5156 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5157 //  cprintf\("XXX readi %d.%d\\n", ip->dev, ip->inum\);) 297.6159 Tj
-5.2213 -104.427 Td
(5158   if\(ip->type == T_DEV\){) 151.4186 Tj
-5.2213 -113.9203 Td
(5159     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->m\
ajor].read\)) 381.1572 Tj
-5.2213 -123.4137 Td
(5160       return -1;) 109.648 Tj
-5.2213 -132.9071 Td
(5161     return devsw[ip->major].read\(ip, dst, n\);) 261.0666 Tj
-5.2213 -142.4004 Td
(5162   }) 41.7707 Tj
-5.2213 -151.8938 Td
(5163 ) 26.1067 Tj
-5.2213 -161.3871 Td
(5164   if\(off > ip->size || off + n < off\)) 219.2959 Tj
-5.2213 -170.8805 Td
(5165     return -1;) 99.2053 Tj
-5.2213 -180.3739 Td
(5166   if\(off + n > ip->size\)) 151.4186 Tj
-5.2213 -189.8672 Td
(5167     n = ip->size - off;) 146.1973 Tj
-5.2213 -199.3606 Td
(5168 ) 26.1067 Tj
-5.2213 -208.8539 Td
(5169   for\(tot=0; tot<n; tot+=m, off+=m, dst+=m\){) 255.8453 Tj
-5.2213 -218.3473 Td
(5170     bp = bread\(ip->dev, bmap\(ip, off/BSIZE, 0\)\);) 276.7306 Tj
-5.2213 -227.8407 Td
(5171     m = min\(n - tot, BSIZE - off%BSIZE\);) 234.9599 Tj
-5.2213 -237.334 Td
(5172     memmove\(dst, bp->data + off%BSIZE, m\);) 245.4026 Tj
-5.2213 -246.8274 Td
(5173     brelse\(bp\);) 104.4266 Tj
-5.2213 -256.3207 Td
(5174   }) 41.7707 Tj
-5.2213 -265.8141 Td
(5175   return n;) 83.5413 Tj
-5.2213 -275.3075 Td
(5176 }) 31.328 Tj
-5.2213 -284.8008 Td
(5177 ) 26.1067 Tj
-5.2213 -294.2942 Td
(5178 // Write data to inode.) 146.1973 Tj
-5.2213 -303.7875 Td
(5179 int) 41.7707 Tj
-5.2213 -313.2809 Td
(5180 writei\(struct inode *ip, char *src, uint off, uint n\)) 302.8373 Tj
-5.2213 -322.7743 Td
(5181 {) 31.328 Tj
-5.2213 -332.2676 Td
(5182   uint tot, m;) 99.2053 Tj
-5.2213 -341.761 Td
(5183   struct buf *bp;) 114.8693 Tj
-5.2213 -351.2543 Td
(5184 ) 26.1067 Tj
-5.2213 -360.7477 Td
(5185   if\(ip->type == T_DEV\){) 151.4186 Tj
-5.2213 -370.2411 Td
(5186     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->m\
ajor].write\)) 386.3786 Tj
-5.2213 -379.7344 Td
(5187       return -1;) 109.648 Tj
-5.2213 -389.2278 Td
(5188     return devsw[ip->major].write\(ip, src, n\);) 266.2879 Tj
-5.2213 -398.7211 Td
(5189   }) 41.7707 Tj
-5.2213 -408.2145 Td
(5190 ) 26.1067 Tj
-5.2213 -417.7079 Td
(5191   if\(off + n < off\)) 125.312 Tj
-5.2213 -427.2012 Td
(5192     return -1;) 99.2053 Tj
-5.2213 -436.6946 Td
(5193   if\(off + n > MAXFILE*BSIZE\)) 177.5253 Tj
-5.2213 -446.1879 Td
(5194     n = MAXFILE*BSIZE - off;) 172.304 Tj
-5.2213 -455.6813 Td
(5195 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5196 ) 26.1067 Tj
-5.2213 -474.668 Td
(5197 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5198 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 51) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 61 61
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 11) 177.5253 Tj
-5.2213 -28.4801 Td
(5200   for\(tot=0; tot<n; tot+=m, off+=m, src+=m\){) 255.8453 Tj
-5.2213 -37.9735 Td
(5201     bp = bread\(ip->dev, bmap\(ip, off/BSIZE, 1\)\);) 276.7306 Tj
-5.2213 -47.4668 Td
(5202     m = min\(n - tot, BSIZE - off%BSIZE\);) 234.9599 Tj
-5.2213 -56.9602 Td
(5203     memmove\(bp->data + off%BSIZE, src, m\);) 245.4026 Tj
-5.2213 -66.4535 Td
(5204     bwrite\(bp\);) 104.4266 Tj
-5.2213 -75.9469 Td
(5205     brelse\(bp\);) 104.4266 Tj
-5.2213 -85.4403 Td
(5206   }) 41.7707 Tj
-5.2213 -94.9336 Td
(5207 ) 26.1067 Tj
-5.2213 -104.427 Td
(5208   if\(n > 0 && off > ip->size\){) 182.7466 Tj
-5.2213 -113.9203 Td
(5209     ip->size = off;) 125.312 Tj
-5.2213 -123.4137 Td
(5210     iupdate\(ip\);) 109.648 Tj
-5.2213 -132.9071 Td
(5211   }) 41.7707 Tj
-5.2213 -142.4004 Td
(5212   return n;) 83.5413 Tj
-5.2213 -151.8938 Td
(5213 }) 31.328 Tj
-5.2213 -161.3871 Td
(5214 ) 26.1067 Tj
-5.2213 -170.8805 Td
(5215 // Directories) 99.2053 Tj
-5.2213 -180.3739 Td
(5216 ) 26.1067 Tj
-5.2213 -189.8672 Td
(5217 int) 41.7707 Tj
-5.2213 -199.3606 Td
(5218 namecmp\(const char *s, const char *t\)) 219.2959 Tj
-5.2213 -208.8539 Td
(5219 {) 31.328 Tj
-5.2213 -218.3473 Td
(5220   return strncmp\(s, t, DIRSIZ\);) 187.968 Tj
-5.2213 -227.8407 Td
(5221 }) 31.328 Tj
-5.2213 -237.334 Td
(5222 ) 26.1067 Tj
-5.2213 -246.8274 Td
(5223 // Look for a directory entry in a directory.) 261.0666 Tj
-5.2213 -256.3207 Td
(5224 // If found, set *poff to byte offset of entry.) 271.5093 Tj
-5.2213 -265.8141 Td
(5225 // Caller must have already locked dp.) 224.5173 Tj
-5.2213 -275.3075 Td
(5226 struct inode*) 93.984 Tj
-5.2213 -284.8008 Td
(5227 dirlookup\(struct inode *dp, char *name, uint *poff\)) 292.3946 Tj
-5.2213 -294.2942 Td
(5228 {) 31.328 Tj
-5.2213 -303.7875 Td
(5229   uint off, inum;) 114.8693 Tj
-5.2213 -313.2809 Td
(5230   struct buf *bp;) 114.8693 Tj
-5.2213 -322.7743 Td
(5231   struct dirent *de;) 130.5333 Tj
-5.2213 -332.2676 Td
(5232 ) 26.1067 Tj
-5.2213 -341.761 Td
(5233   if\(dp->type != T_DIR\)) 146.1973 Tj
-5.2213 -351.2543 Td
(5234     panic\("dirlookup not DIR"\);) 187.968 Tj
-5.2213 -360.7477 Td
(5235 ) 26.1067 Tj
-5.2213 -370.2411 Td
(5236   for\(off = 0; off < dp->size; off += BSIZE\){) 261.0666 Tj
-5.2213 -379.7344 Td
(5237     bp = bread\(dp->dev, bmap\(dp, off / BSIZE, 0\)\);) 287.1733 Tj
-5.2213 -389.2278 Td
(5238     for\(de = \(struct dirent*\)bp->data;) 224.5173 Tj
-5.2213 -398.7211 Td
(5239         de < \(struct dirent*\)\(bp->data + BSIZE\);) 276.7306 Tj
-5.2213 -408.2145 Td
(5240         de++\){) 99.2053 Tj
-5.2213 -417.7079 Td
(5241       if\(de->inum == 0\)) 146.1973 Tj
-5.2213 -427.2012 Td
(5242         continue;) 114.8693 Tj
-5.2213 -436.6946 Td
(5243       if\(namecmp\(name, de->name\) == 0\){) 229.7386 Tj
-5.2213 -446.1879 Td
(5244         // entry matches path element) 219.2959 Tj
-5.2213 -455.6813 Td
(5245         if\(poff\)) 109.648 Tj
-5.2213 -465.1747 Td
(5246           *poff = off + \(uchar*\)de - bp->data;) 266.2879 Tj
-5.2213 -474.668 Td
(5247         inum = de->inum;) 151.4186 Tj
-5.2213 -484.1614 Td
(5248         brelse\(bp\);) 125.312 Tj
-5.2213 -493.6547 Td
(5249         return iget\(dp->dev, inum\);) 208.8533 Tj
-5.2213 -522.1348 Td
(Sheet 52) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 12) 177.5253 Tj
-5.2213 -28.4801 Td
(5250       }) 62.656 Tj
-5.2213 -37.9735 Td
(5251     }) 52.2133 Tj
-5.2213 -47.4668 Td
(5252     brelse\(bp\);) 104.4266 Tj
-5.2213 -56.9602 Td
(5253   }) 41.7707 Tj
-5.2213 -66.4535 Td
(5254   return 0;) 83.5413 Tj
-5.2213 -75.9469 Td
(5255 }) 31.328 Tj
-5.2213 -85.4403 Td
(5256 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5257 // Write a new directory entry \(name, ino\) into the dire\
ctory dp.) 365.4932 Tj
-5.2213 -104.427 Td
(5258 int) 41.7707 Tj
-5.2213 -113.9203 Td
(5259 dirlink\(struct inode *dp, char *name, uint ino\)) 271.5093 Tj
-5.2213 -123.4137 Td
(5260 {) 31.328 Tj
-5.2213 -132.9071 Td
(5261   int off;) 78.32 Tj
-5.2213 -142.4004 Td
(5262   struct dirent de;) 125.312 Tj
-5.2213 -151.8938 Td
(5263   struct inode *ip;) 125.312 Tj
-5.2213 -161.3871 Td
(5264 ) 26.1067 Tj
-5.2213 -170.8805 Td
(5265   // Check that name is not present.) 214.0746 Tj
-5.2213 -180.3739 Td
(5266   if\(\(ip = dirlookup\(dp, name, 0\)\) != 0\){) 240.1813 Tj
-5.2213 -189.8672 Td
(5267     iput\(ip\);) 93.984 Tj
-5.2213 -199.3606 Td
(5268     return -1;) 99.2053 Tj
-5.2213 -208.8539 Td
(5269   }) 41.7707 Tj
-5.2213 -218.3473 Td
(5270 ) 26.1067 Tj
-5.2213 -227.8407 Td
(5271   // Look for an empty dirent.) 182.7466 Tj
-5.2213 -237.334 Td
(5272   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) 287.1733 Tj
-5.2213 -246.8274 Td
(5273     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != si\
zeof\(de\)\)) 339.3866 Tj
-5.2213 -256.3207 Td
(5274       panic\("dirlink read"\);) 172.304 Tj
-5.2213 -265.8141 Td
(5275     if\(de.inum == 0\)) 130.5333 Tj
-5.2213 -275.3075 Td
(5276       break;) 88.7626 Tj
-5.2213 -284.8008 Td
(5277   }) 41.7707 Tj
-5.2213 -294.2942 Td
(5278 ) 26.1067 Tj
-5.2213 -303.7875 Td
(5279   strncpy\(de.name, name, DIRSIZ\);) 198.4106 Tj
-5.2213 -313.2809 Td
(5280   de.inum = ino;) 109.648 Tj
-5.2213 -322.7743 Td
(5281   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != siz\
eof\(de\)\)) 334.1652 Tj
-5.2213 -332.2676 Td
(5282     panic\("dirlink"\);) 135.7546 Tj
-5.2213 -341.761 Td
(5283 ) 26.1067 Tj
-5.2213 -351.2543 Td
(5284   return 0;) 83.5413 Tj
-5.2213 -360.7477 Td
(5285 }) 31.328 Tj
-5.2213 -370.2411 Td
(5286 ) 26.1067 Tj
-5.2213 -379.7344 Td
(5287 ) 26.1067 Tj
-5.2213 -389.2278 Td
(5288 ) 26.1067 Tj
-5.2213 -398.7211 Td
(5289 ) 26.1067 Tj
-5.2213 -408.2145 Td
(5290 ) 26.1067 Tj
-5.2213 -417.7079 Td
(5291 ) 26.1067 Tj
-5.2213 -427.2012 Td
(5292 ) 26.1067 Tj
-5.2213 -436.6946 Td
(5293 ) 26.1067 Tj
-5.2213 -446.1879 Td
(5294 ) 26.1067 Tj
-5.2213 -455.6813 Td
(5295 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5296 ) 26.1067 Tj
-5.2213 -474.668 Td
(5297 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5298 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5299 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 52) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 62 62
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 13) 177.5253 Tj
-5.2213 -28.4801 Td
(5300 // Paths) 67.8773 Tj
-5.2213 -37.9735 Td
(5301 ) 26.1067 Tj
-5.2213 -47.4668 Td
(5302 // Copy the next path element from path into name.) 287.1733 Tj
-5.2213 -56.9602 Td
(5303 // Return a pointer to the element following the copied on\
e.) 339.3866 Tj
-5.2213 -66.4535 Td
(5304 // The returned path has no leading slashes,) 255.8453 Tj
-5.2213 -75.9469 Td
(5305 // so the caller can check *path=='\\0' to see if the name\
 is the last one.) 412.4852 Tj
-5.2213 -85.4403 Td
(5306 // If no name to remove, return 0.) 203.6319 Tj
-5.2213 -94.9336 Td
(5307 //) 36.5493 Tj
-5.2213 -104.427 Td
(5308 // Examples:) 88.7626 Tj
-5.2213 -113.9203 Td
(5309 //   skipelem\("a/bb/c", name\) = "bb/c", setting name = "\
a") 328.9439 Tj
-5.2213 -123.4137 Td
(5310 //   skipelem\("///a//bb", name\) = "bb", setting name = "\
a") 328.9439 Tj
-5.2213 -132.9071 Td
(5311 //   skipelem\("", name\) = skipelem\("////", name\) = 0) 297.6159 Tj
-5.2213 -142.4004 Td
(5312 //) 36.5493 Tj
-5.2213 -151.8938 Td
(5313 static char*) 88.7626 Tj
-5.2213 -161.3871 Td
(5314 skipelem\(char *path, char *name\)) 193.1893 Tj
-5.2213 -170.8805 Td
(5315 {) 31.328 Tj
-5.2213 -180.3739 Td
(5316   char *s;) 78.32 Tj
-5.2213 -189.8672 Td
(5317   int len;) 78.32 Tj
-5.2213 -199.3606 Td
(5318 ) 26.1067 Tj
-5.2213 -208.8539 Td
(5319   while\(*path == '/'\)) 135.7546 Tj
-5.2213 -218.3473 Td
(5320     path++;) 83.5413 Tj
-5.2213 -227.8407 Td
(5321   if\(*path == 0\)) 109.648 Tj
-5.2213 -237.334 Td
(5322     return 0;) 93.984 Tj
-5.2213 -246.8274 Td
(5323   s = path;) 83.5413 Tj
-5.2213 -256.3207 Td
(5324   while\(*path != '/' && *path != 0\)) 208.8533 Tj
-5.2213 -265.8141 Td
(5325     path++;) 83.5413 Tj
-5.2213 -275.3075 Td
(5326   len = path - s;) 114.8693 Tj
-5.2213 -284.8008 Td
(5327   if\(len >= DIRSIZ\)) 125.312 Tj
-5.2213 -294.2942 Td
(5328     memmove\(name, s, DIRSIZ\);) 177.5253 Tj
-5.2213 -303.7875 Td
(5329   else {) 67.8773 Tj
-5.2213 -313.2809 Td
(5330     memmove\(name, s, len\);) 161.8613 Tj
-5.2213 -322.7743 Td
(5331     name[len] = 0;) 120.0906 Tj
-5.2213 -332.2676 Td
(5332   }) 41.7707 Tj
-5.2213 -341.761 Td
(5333   while\(*path == '/'\)) 135.7546 Tj
-5.2213 -351.2543 Td
(5334     path++;) 83.5413 Tj
-5.2213 -360.7477 Td
(5335   return path;) 99.2053 Tj
-5.2213 -370.2411 Td
(5336 }) 31.328 Tj
-5.2213 -379.7344 Td
(5337 ) 26.1067 Tj
-5.2213 -389.2278 Td
(5338 ) 26.1067 Tj
-5.2213 -398.7211 Td
(5339 ) 26.1067 Tj
-5.2213 -408.2145 Td
(5340 ) 26.1067 Tj
-5.2213 -417.7079 Td
(5341 ) 26.1067 Tj
-5.2213 -427.2012 Td
(5342 ) 26.1067 Tj
-5.2213 -436.6946 Td
(5343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(5344 ) 26.1067 Tj
-5.2213 -455.6813 Td
(5345 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5346 ) 26.1067 Tj
-5.2213 -474.668 Td
(5347 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5348 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5349 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 53) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 14) 177.5253 Tj
-5.2213 -28.4801 Td
(5350 // Look up and return the inode for a path name.) 276.7306 Tj
-5.2213 -37.9735 Td
(5351 // If parent != 0, return the inode for the parent and cop\
y the final) 386.3786 Tj
-5.2213 -47.4668 Td
(5352 // path element into name, which must have room for DIRSIZ\
 bytes.) 365.4932 Tj
-5.2213 -56.9602 Td
(5353 static struct inode*) 130.5333 Tj
-5.2213 -66.4535 Td
(5354 _namei\(char *path, int parent, char *name\)) 245.4026 Tj
-5.2213 -75.9469 Td
(5355 {) 31.328 Tj
-5.2213 -85.4403 Td
(5356   struct inode *ip, *next;) 161.8613 Tj
-5.2213 -94.9336 Td
(5357 ) 26.1067 Tj
-5.2213 -104.427 Td
(5358 //  cprintf\("XXX _namei %s\\n", path\);) 219.2959 Tj
-5.2213 -113.9203 Td
(5359   if\(*path == '/'\)) 120.0906 Tj
-5.2213 -123.4137 Td
(5360     ip = iget\(ROOTDEV, 1\);) 161.8613 Tj
-5.2213 -132.9071 Td
(5361   else) 57.4347 Tj
-5.2213 -142.4004 Td
(5362     ip = idup\(cp->cwd\);) 146.1973 Tj
-5.2213 -151.8938 Td
(5363 ) 26.1067 Tj
-5.2213 -161.3871 Td
(5364   while\(\(path = skipelem\(path, name\)\) != 0\){) 255.8453 Tj
-5.2213 -170.8805 Td
(5365 //    cprintf\("XXX ready to ilock\\n"\);) 224.5173 Tj
-5.2213 -180.3739 Td
(5366     ilock\(ip\);) 99.2053 Tj
-5.2213 -189.8672 Td
(5367 //    cprintf\("XXX here %d\\n", ip->type\);) 240.1813 Tj
-5.2213 -199.3606 Td
(5368     if\(ip->type != T_DIR\){) 161.8613 Tj
-5.2213 -208.8539 Td
(5369       iunlockput\(ip\);) 135.7546 Tj
-5.2213 -218.3473 Td
(5370       return 0;) 104.4266 Tj
-5.2213 -227.8407 Td
(5371     }) 52.2133 Tj
-5.2213 -237.334 Td
(5372     if\(parent && *path == '\\0'\){) 193.1893 Tj
-5.2213 -246.8274 Td
(5373       // Stop one level early.) 182.7466 Tj
-5.2213 -256.3207 Td
(5374       iunlock\(ip\);) 120.0906 Tj
-5.2213 -265.8141 Td
(5375       return ip;) 109.648 Tj
-5.2213 -275.3075 Td
(5376     }) 52.2133 Tj
-5.2213 -284.8008 Td
(5377     if\(\(next = dirlookup\(ip, name, 0\)\) == 0\){) 261.0666 Tj
-5.2213 -294.2942 Td
(5378       iunlockput\(ip\);) 135.7546 Tj
-5.2213 -303.7875 Td
(5379       return 0;) 104.4266 Tj
-5.2213 -313.2809 Td
(5380     }) 52.2133 Tj
-5.2213 -322.7743 Td
(5381     iunlockput\(ip\);) 125.312 Tj
-5.2213 -332.2676 Td
(5382     ip = next;) 99.2053 Tj
-5.2213 -341.761 Td
(5383   }) 41.7707 Tj
-5.2213 -351.2543 Td
(5384   if\(parent\){) 93.984 Tj
-5.2213 -360.7477 Td
(5385     iput\(ip\);) 93.984 Tj
-5.2213 -370.2411 Td
(5386     return 0;) 93.984 Tj
-5.2213 -379.7344 Td
(5387   }) 41.7707 Tj
-5.2213 -389.2278 Td
(5388   return ip;) 88.7626 Tj
-5.2213 -398.7211 Td
(5389 }) 31.328 Tj
-5.2213 -408.2145 Td
(5390 ) 26.1067 Tj
-5.2213 -417.7079 Td
(5391 struct inode*) 93.984 Tj
-5.2213 -427.2012 Td
(5392 namei\(char *path\)) 114.8693 Tj
-5.2213 -436.6946 Td
(5393 {) 31.328 Tj
-5.2213 -446.1879 Td
(5394   char name[DIRSIZ];) 130.5333 Tj
-5.2213 -455.6813 Td
(5395   return _namei\(path, 0, name\);) 187.968 Tj
-5.2213 -465.1747 Td
(5396 }) 31.328 Tj
-5.2213 -474.668 Td
(5397 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 53) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 63 63
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/fs.c  Page 15) 177.5253 Tj
-5.2213 -28.4801 Td
(5400 struct inode*) 93.984 Tj
-5.2213 -37.9735 Td
(5401 nameiparent\(char *path, char *name\)) 208.8533 Tj
-5.2213 -47.4668 Td
(5402 {) 31.328 Tj
-5.2213 -56.9602 Td
(5403   return _namei\(path, 1, name\);) 187.968 Tj
-5.2213 -66.4535 Td
(5404 }) 31.328 Tj
-5.2213 -75.9469 Td
(5405 ) 26.1067 Tj
-5.2213 -85.4403 Td
(5406 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5407 ) 26.1067 Tj
-5.2213 -104.427 Td
(5408 ) 26.1067 Tj
-5.2213 -113.9203 Td
(5409 ) 26.1067 Tj
-5.2213 -123.4137 Td
(5410 ) 26.1067 Tj
-5.2213 -132.9071 Td
(5411 ) 26.1067 Tj
-5.2213 -142.4004 Td
(5412 ) 26.1067 Tj
-5.2213 -151.8938 Td
(5413 ) 26.1067 Tj
-5.2213 -161.3871 Td
(5414 ) 26.1067 Tj
-5.2213 -170.8805 Td
(5415 ) 26.1067 Tj
-5.2213 -180.3739 Td
(5416 ) 26.1067 Tj
-5.2213 -189.8672 Td
(5417 ) 26.1067 Tj
-5.2213 -199.3606 Td
(5418 ) 26.1067 Tj
-5.2213 -208.8539 Td
(5419 ) 26.1067 Tj
-5.2213 -218.3473 Td
(5420 ) 26.1067 Tj
-5.2213 -227.8407 Td
(5421 ) 26.1067 Tj
-5.2213 -237.334 Td
(5422 ) 26.1067 Tj
-5.2213 -246.8274 Td
(5423 ) 26.1067 Tj
-5.2213 -256.3207 Td
(5424 ) 26.1067 Tj
-5.2213 -265.8141 Td
(5425 ) 26.1067 Tj
-5.2213 -275.3075 Td
(5426 ) 26.1067 Tj
-5.2213 -284.8008 Td
(5427 ) 26.1067 Tj
-5.2213 -294.2942 Td
(5428 ) 26.1067 Tj
-5.2213 -303.7875 Td
(5429 ) 26.1067 Tj
-5.2213 -313.2809 Td
(5430 ) 26.1067 Tj
-5.2213 -322.7743 Td
(5431 ) 26.1067 Tj
-5.2213 -332.2676 Td
(5432 ) 26.1067 Tj
-5.2213 -341.761 Td
(5433 ) 26.1067 Tj
-5.2213 -351.2543 Td
(5434 ) 26.1067 Tj
-5.2213 -360.7477 Td
(5435 ) 26.1067 Tj
-5.2213 -370.2411 Td
(5436 ) 26.1067 Tj
-5.2213 -379.7344 Td
(5437 ) 26.1067 Tj
-5.2213 -389.2278 Td
(5438 ) 26.1067 Tj
-5.2213 -398.7211 Td
(5439 ) 26.1067 Tj
-5.2213 -408.2145 Td
(5440 ) 26.1067 Tj
-5.2213 -417.7079 Td
(5441 ) 26.1067 Tj
-5.2213 -427.2012 Td
(5442 ) 26.1067 Tj
-5.2213 -436.6946 Td
(5443 ) 26.1067 Tj
-5.2213 -446.1879 Td
(5444 ) 26.1067 Tj
-5.2213 -455.6813 Td
(5445 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5446 ) 26.1067 Tj
-5.2213 -474.668 Td
(5447 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 54) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/file.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(5450 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(5451 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(5452 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(5453 #include "file.h") 114.8693 Tj
-5.2213 -66.4535 Td
(5454 #include "spinlock.h") 135.7546 Tj
-5.2213 -75.9469 Td
(5455 #include "dev.h") 109.648 Tj
-5.2213 -85.4403 Td
(5456 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5457 struct devsw devsw[NDEV];) 156.64 Tj
-5.2213 -104.427 Td
(5458 struct spinlock file_table_lock;) 193.1893 Tj
-5.2213 -113.9203 Td
(5459 struct file file[NFILE];) 151.4186 Tj
-5.2213 -123.4137 Td
(5460 ) 26.1067 Tj
-5.2213 -132.9071 Td
(5461 void) 46.992 Tj
-5.2213 -142.4004 Td
(5462 fileinit\(void\)) 99.2053 Tj
-5.2213 -151.8938 Td
(5463 {) 31.328 Tj
-5.2213 -161.3871 Td
(5464   initlock\(&file_table_lock, "file_table"\);) 250.6239 Tj
-5.2213 -170.8805 Td
(5465 }) 31.328 Tj
-5.2213 -180.3739 Td
(5466 ) 26.1067 Tj
-5.2213 -189.8672 Td
(5467 // Allocate a file structure.) 177.5253 Tj
-5.2213 -199.3606 Td
(5468 struct file*) 88.7626 Tj
-5.2213 -208.8539 Td
(5469 filealloc\(void\)) 104.4266 Tj
-5.2213 -218.3473 Td
(5470 {) 31.328 Tj
-5.2213 -227.8407 Td
(5471   int i;) 67.8773 Tj
-5.2213 -237.334 Td
(5472 ) 26.1067 Tj
-5.2213 -246.8274 Td
(5473   acquire\(&file_table_lock\);) 172.304 Tj
-5.2213 -256.3207 Td
(5474   for\(i = 0; i < NFILE; i++\){) 177.5253 Tj
-5.2213 -265.8141 Td
(5475     if\(file[i].type == FD_CLOSED\){) 203.6319 Tj
-5.2213 -275.3075 Td
(5476       file[i].type = FD_NONE;) 177.5253 Tj
-5.2213 -284.8008 Td
(5477       file[i].ref = 1;) 140.976 Tj
-5.2213 -294.2942 Td
(5478       release\(&file_table_lock\);) 193.1893 Tj
-5.2213 -303.7875 Td
(5479       return file + i;) 140.976 Tj
-5.2213 -313.2809 Td
(5480     }) 52.2133 Tj
-5.2213 -322.7743 Td
(5481   }) 41.7707 Tj
-5.2213 -332.2676 Td
(5482   release\(&file_table_lock\);) 172.304 Tj
-5.2213 -341.761 Td
(5483   return 0;) 83.5413 Tj
-5.2213 -351.2543 Td
(5484 }) 31.328 Tj
-5.2213 -360.7477 Td
(5485 ) 26.1067 Tj
-5.2213 -370.2411 Td
(5486 // Increment ref count for file f.) 203.6319 Tj
-5.2213 -379.7344 Td
(5487 struct file*) 88.7626 Tj
-5.2213 -389.2278 Td
(5488 filedup\(struct file *f\)) 146.1973 Tj
-5.2213 -398.7211 Td
(5489 {) 31.328 Tj
-5.2213 -408.2145 Td
(5490   acquire\(&file_table_lock\);) 172.304 Tj
-5.2213 -417.7079 Td
(5491   if\(f->ref < 1 || f->type == FD_CLOSED\)) 234.9599 Tj
-5.2213 -427.2012 Td
(5492     panic\("filedup"\);) 135.7546 Tj
-5.2213 -436.6946 Td
(5493   f->ref++;) 83.5413 Tj
-5.2213 -446.1879 Td
(5494   release\(&file_table_lock\);) 172.304 Tj
-5.2213 -455.6813 Td
(5495   return f;) 83.5413 Tj
-5.2213 -465.1747 Td
(5496 }) 31.328 Tj
-5.2213 -474.668 Td
(5497 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5498 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5499 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 54) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 64 64
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/file.c  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(5500 // Close file f.  \(Decrement ref count, close when reache\
s 0.\)) 349.8292 Tj
-5.2213 -37.9735 Td
(5501 void) 46.992 Tj
-5.2213 -47.4668 Td
(5502 fileclose\(struct file *f\)) 156.64 Tj
-5.2213 -56.9602 Td
(5503 {) 31.328 Tj
-5.2213 -66.4535 Td
(5504   struct file ff;) 114.8693 Tj
-5.2213 -75.9469 Td
(5505 ) 26.1067 Tj
-5.2213 -85.4403 Td
(5506   acquire\(&file_table_lock\);) 172.304 Tj
-5.2213 -94.9336 Td
(5507   if\(f->ref < 1 || f->type == FD_CLOSED\)) 234.9599 Tj
-5.2213 -104.427 Td
(5508   {) 41.7707 Tj
-5.2213 -113.9203 Td
(5509       cprintf\("ref: %d type: %d\\n", f->ref, f->type\);) 302.8373 Tj
-5.2213 -123.4137 Td
(5510       panic\("fileclose: file closed"\);) 224.5173 Tj
-5.2213 -132.9071 Td
(5511   }) 41.7707 Tj
-5.2213 -142.4004 Td
(5512   if\(--f->ref > 0\){) 125.312 Tj
-5.2213 -151.8938 Td
(5513     release\(&file_table_lock\);) 182.7466 Tj
-5.2213 -161.3871 Td
(5514     return;) 83.5413 Tj
-5.2213 -170.8805 Td
(5515   }) 41.7707 Tj
-5.2213 -180.3739 Td
(5516   ff = *f;) 78.32 Tj
-5.2213 -189.8672 Td
(5517   f->ref = 0;) 93.984 Tj
-5.2213 -199.3606 Td
(5518   f->type = FD_CLOSED;) 140.976 Tj
-5.2213 -208.8539 Td
(5519   release\(&file_table_lock\);) 172.304 Tj
-5.2213 -218.3473 Td
(5520 ) 26.1067 Tj
-5.2213 -227.8407 Td
(5521   if\(ff.type == FD_PIPE\)) 151.4186 Tj
-5.2213 -237.334 Td
(5522     pipeclose\(ff.pipe, ff.writable\);) 214.0746 Tj
-5.2213 -246.8274 Td
(5523   else if\(ff.type == FD_INODE\)) 182.7466 Tj
-5.2213 -256.3207 Td
(5524     iput\(ff.ip\);) 109.648 Tj
-5.2213 -265.8141 Td
(5525   else) 57.4347 Tj
-5.2213 -275.3075 Td
(5526   {) 41.7707 Tj
-5.2213 -284.8008 Td
(5527       cprintf\("type: %d\\n"\);) 172.304 Tj
-5.2213 -294.2942 Td
(5528       panic\("fileclose: file type error"\);) 245.4026 Tj
-5.2213 -303.7875 Td
(5529   }) 41.7707 Tj
-5.2213 -313.2809 Td
(5530 }) 31.328 Tj
-5.2213 -322.7743 Td
(5531 ) 26.1067 Tj
-5.2213 -332.2676 Td
(5532 // Get metadata about file f.) 177.5253 Tj
-5.2213 -341.761 Td
(5533 int) 41.7707 Tj
-5.2213 -351.2543 Td
(5534 filestat\(struct file *f, struct stat *st\)) 240.1813 Tj
-5.2213 -360.7477 Td
(5535 {) 31.328 Tj
-5.2213 -370.2411 Td
(5536   if\(f->type == FD_INODE\){) 161.8613 Tj
-5.2213 -379.7344 Td
(5537     ilock\(f->ip\);) 114.8693 Tj
-5.2213 -389.2278 Td
(5538     stati\(f->ip, st\);) 135.7546 Tj
-5.2213 -398.7211 Td
(5539     iunlock\(f->ip\);) 125.312 Tj
-5.2213 -408.2145 Td
(5540     return 0;) 93.984 Tj
-5.2213 -417.7079 Td
(5541   }) 41.7707 Tj
-5.2213 -427.2012 Td
(5542   return -1;) 88.7626 Tj
-5.2213 -436.6946 Td
(5543 }) 31.328 Tj
-5.2213 -446.1879 Td
(5544 ) 26.1067 Tj
-5.2213 -455.6813 Td
(5545 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5546 ) 26.1067 Tj
-5.2213 -474.668 Td
(5547 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5548 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5549 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 55) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/file.c  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(5550 // Read from file f.  Addr is kernel address.) 261.0666 Tj
-5.2213 -37.9735 Td
(5551 int) 41.7707 Tj
-5.2213 -47.4668 Td
(5552 fileread\(struct file *f, char *addr, int n\)) 250.6239 Tj
-5.2213 -56.9602 Td
(5553 {) 31.328 Tj
-5.2213 -66.4535 Td
(5554   int r;) 67.8773 Tj
-5.2213 -75.9469 Td
(5555 ) 26.1067 Tj
-5.2213 -85.4403 Td
(5556   if\(f->readable == 0\)) 140.976 Tj
-5.2213 -94.9336 Td
(5557     return -1;) 99.2053 Tj
-5.2213 -104.427 Td
(5558   if\(f->type == FD_PIPE\)) 151.4186 Tj
-5.2213 -113.9203 Td
(5559     return piperead\(f->pipe, addr, n\);) 224.5173 Tj
-5.2213 -123.4137 Td
(5560   if\(f->type == FD_INODE\){) 161.8613 Tj
-5.2213 -132.9071 Td
(5561     ilock\(f->ip\);) 114.8693 Tj
-5.2213 -142.4004 Td
(5562     if\(\(r = readi\(f->ip, addr, f->off, n\)\) > 0\)) 271.5093 Tj
-5.2213 -151.8938 Td
(5563       f->off += r;) 120.0906 Tj
-5.2213 -161.3871 Td
(5564     iunlock\(f->ip\);) 125.312 Tj
-5.2213 -170.8805 Td
(5565     return r;) 93.984 Tj
-5.2213 -180.3739 Td
(5566   }) 41.7707 Tj
-5.2213 -189.8672 Td
(5567   panic\("fileread"\);) 130.5333 Tj
-5.2213 -199.3606 Td
(5568 }) 31.328 Tj
-5.2213 -208.8539 Td
(5569 ) 26.1067 Tj
-5.2213 -218.3473 Td
(5570 // Write to file f.  Addr is kernel address.) 255.8453 Tj
-5.2213 -227.8407 Td
(5571 int) 41.7707 Tj
-5.2213 -237.334 Td
(5572 filewrite\(struct file *f, char *addr, int n\)) 255.8453 Tj
-5.2213 -246.8274 Td
(5573 {) 31.328 Tj
-5.2213 -256.3207 Td
(5574   int r;) 67.8773 Tj
-5.2213 -265.8141 Td
(5575 ) 26.1067 Tj
-5.2213 -275.3075 Td
(5576   if\(f->writable == 0\)) 140.976 Tj
-5.2213 -284.8008 Td
(5577     return -1;) 99.2053 Tj
-5.2213 -294.2942 Td
(5578   if\(f->type == FD_PIPE\)) 151.4186 Tj
-5.2213 -303.7875 Td
(5579     return pipewrite\(f->pipe, addr, n\);) 229.7386 Tj
-5.2213 -313.2809 Td
(5580   if\(f->type == FD_INODE\){) 161.8613 Tj
-5.2213 -322.7743 Td
(5581     ilock\(f->ip\);) 114.8693 Tj
-5.2213 -332.2676 Td
(5582     if\(\(r = writei\(f->ip, addr, f->off, n\)\) > 0\)) 276.7306 Tj
-5.2213 -341.761 Td
(5583       f->off += r;) 120.0906 Tj
-5.2213 -351.2543 Td
(5584     iunlock\(f->ip\);) 125.312 Tj
-5.2213 -360.7477 Td
(5585     return r;) 93.984 Tj
-5.2213 -370.2411 Td
(5586   }) 41.7707 Tj
-5.2213 -379.7344 Td
(5587   panic\("filewrite"\);) 135.7546 Tj
-5.2213 -389.2278 Td
(5588 }) 31.328 Tj
-5.2213 -398.7211 Td
(5589 ) 26.1067 Tj
-5.2213 -408.2145 Td
(5590 ) 26.1067 Tj
-5.2213 -417.7079 Td
(5591 ) 26.1067 Tj
-5.2213 -427.2012 Td
(5592 ) 26.1067 Tj
-5.2213 -436.6946 Td
(5593 ) 26.1067 Tj
-5.2213 -446.1879 Td
(5594 ) 26.1067 Tj
-5.2213 -455.6813 Td
(5595 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5596 ) 26.1067 Tj
-5.2213 -474.668 Td
(5597 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5598 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5599 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 55) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 65 65
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 1) 198.4106 Tj
-5.2213 -28.4801 Td
(5600 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(5601 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(5602 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(5603 #include "stat.h") 114.8693 Tj
-5.2213 -66.4535 Td
(5604 #include "mmu.h") 109.648 Tj
-5.2213 -75.9469 Td
(5605 #include "proc.h") 114.8693 Tj
-5.2213 -85.4403 Td
(5606 #include "fs.h") 104.4266 Tj
-5.2213 -94.9336 Td
(5607 #include "fsvar.h") 120.0906 Tj
-5.2213 -104.427 Td
(5608 #include "file.h") 114.8693 Tj
-5.2213 -113.9203 Td
(5609 #include "fcntl.h") 120.0906 Tj
-5.2213 -123.4137 Td
(5610 ) 26.1067 Tj
-5.2213 -132.9071 Td
(5611 // Fetch the nth word-sized system call argument as a file\
 descriptor) 386.3786 Tj
-5.2213 -142.4004 Td
(5612 // and return both the descriptor and the corresponding st\
ruct file.) 381.1572 Tj
-5.2213 -151.8938 Td
(5613 static int) 78.32 Tj
-5.2213 -161.3871 Td
(5614 argfd\(int n, int *pfd, struct file **pf\)) 234.9599 Tj
-5.2213 -170.8805 Td
(5615 {) 31.328 Tj
-5.2213 -180.3739 Td
(5616   int fd;) 73.0986 Tj
-5.2213 -189.8672 Td
(5617   struct file *f;) 114.8693 Tj
-5.2213 -199.3606 Td
(5618 ) 26.1067 Tj
-5.2213 -208.8539 Td
(5619   if\(argint\(n, &fd\) < 0\)) 151.4186 Tj
-5.2213 -218.3473 Td
(5620     return -1;) 99.2053 Tj
-5.2213 -227.8407 Td
(5621   if\(fd < 0 || fd >= NOFILE || \(f=cp->ofile[fd]\) == 0\)) 308.0586 Tj
-5.2213 -237.334 Td
(5622     return -1;) 99.2053 Tj
-5.2213 -246.8274 Td
(5623   if\(pfd\)) 73.0986 Tj
-5.2213 -256.3207 Td
(5624     *pfd = fd;) 99.2053 Tj
-5.2213 -265.8141 Td
(5625   if\(pf\)) 67.8773 Tj
-5.2213 -275.3075 Td
(5626     *pf = f;) 88.7626 Tj
-5.2213 -284.8008 Td
(5627   return 0;) 83.5413 Tj
-5.2213 -294.2942 Td
(5628 }) 31.328 Tj
-5.2213 -303.7875 Td
(5629 ) 26.1067 Tj
-5.2213 -313.2809 Td
(5630 // Allocate a file descriptor for the given file.) 281.9519 Tj
-5.2213 -322.7743 Td
(5631 // Takes over file reference from caller on success.) 297.6159 Tj
-5.2213 -332.2676 Td
(5632 static int) 78.32 Tj
-5.2213 -341.761 Td
(5633 fdalloc\(struct file *f\)) 146.1973 Tj
-5.2213 -351.2543 Td
(5634 {) 31.328 Tj
-5.2213 -360.7477 Td
(5635   int fd;) 73.0986 Tj
-5.2213 -370.2411 Td
(5636 ) 26.1067 Tj
-5.2213 -379.7344 Td
(5637   for\(fd = 0; fd < NOFILE; fd++\){) 198.4106 Tj
-5.2213 -389.2278 Td
(5638     if\(cp->ofile[fd] == 0\){) 167.0826 Tj
-5.2213 -398.7211 Td
(5639       cp->ofile[fd] = f;) 151.4186 Tj
-5.2213 -408.2145 Td
(5640       return fd;) 109.648 Tj
-5.2213 -417.7079 Td
(5641     }) 52.2133 Tj
-5.2213 -427.2012 Td
(5642   }) 41.7707 Tj
-5.2213 -436.6946 Td
(5643   return -1;) 88.7626 Tj
-5.2213 -446.1879 Td
(5644 }) 31.328 Tj
-5.2213 -455.6813 Td
(5645 ) 26.1067 Tj
-5.2213 -465.1747 Td
(5646 ) 26.1067 Tj
-5.2213 -474.668 Td
(5647 ) 26.1067 Tj
-5.2213 -484.1614 Td
(5648 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5649 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 56) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 2) 198.4106 Tj
-5.2213 -28.4801 Td
(5650 int) 41.7707 Tj
-5.2213 -37.9735 Td
(5651 sys_read\(void\)) 99.2053 Tj
-5.2213 -47.4668 Td
(5652 {) 31.328 Tj
-5.2213 -56.9602 Td
(5653   struct file *f;) 114.8693 Tj
-5.2213 -66.4535 Td
(5654   int n;) 67.8773 Tj
-5.2213 -75.9469 Td
(5655   char *cp;) 83.5413 Tj
-5.2213 -85.4403 Td
(5656 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5657   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argp\
tr\(1, &cp, n\) < 0\)) 396.8212 Tj
-5.2213 -104.427 Td
(5658     return -1;) 99.2053 Tj
-5.2213 -113.9203 Td
(5659   return fileread\(f, cp, n\);) 172.304 Tj
-5.2213 -123.4137 Td
(5660 }) 31.328 Tj
-5.2213 -132.9071 Td
(5661 ) 26.1067 Tj
-5.2213 -142.4004 Td
(5662 int) 41.7707 Tj
-5.2213 -151.8938 Td
(5663 sys_write\(void\)) 104.4266 Tj
-5.2213 -161.3871 Td
(5664 {) 31.328 Tj
-5.2213 -170.8805 Td
(5665   struct file *f;) 114.8693 Tj
-5.2213 -180.3739 Td
(5666   int n;) 67.8773 Tj
-5.2213 -189.8672 Td
(5667   char *cp;) 83.5413 Tj
-5.2213 -199.3606 Td
(5668 ) 26.1067 Tj
-5.2213 -208.8539 Td
(5669   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argp\
tr\(1, &cp, n\) < 0\)) 396.8212 Tj
-5.2213 -218.3473 Td
(5670     return -1;) 99.2053 Tj
-5.2213 -227.8407 Td
(5671   return filewrite\(f, cp, n\);) 177.5253 Tj
-5.2213 -237.334 Td
(5672 }) 31.328 Tj
-5.2213 -246.8274 Td
(5673 ) 26.1067 Tj
-5.2213 -256.3207 Td
(5674 int) 41.7707 Tj
-5.2213 -265.8141 Td
(5675 sys_dup\(void\)) 93.984 Tj
-5.2213 -275.3075 Td
(5676 {) 31.328 Tj
-5.2213 -284.8008 Td
(5677   struct file *f;) 114.8693 Tj
-5.2213 -294.2942 Td
(5678   int fd;) 73.0986 Tj
-5.2213 -303.7875 Td
(5679 ) 26.1067 Tj
-5.2213 -313.2809 Td
(5680   if\(argfd\(0, 0, &f\) < 0\)) 156.64 Tj
-5.2213 -322.7743 Td
(5681     return -1;) 99.2053 Tj
-5.2213 -332.2676 Td
(5682   if\(\(fd=fdalloc\(f\)\) < 0\)) 156.64 Tj
-5.2213 -341.761 Td
(5683     return -1;) 99.2053 Tj
-5.2213 -351.2543 Td
(5684   filedup\(f\);) 93.984 Tj
-5.2213 -360.7477 Td
(5685   return fd;) 88.7626 Tj
-5.2213 -370.2411 Td
(5686 }) 31.328 Tj
-5.2213 -379.7344 Td
(5687 ) 26.1067 Tj
-5.2213 -389.2278 Td
(5688 int) 41.7707 Tj
-5.2213 -398.7211 Td
(5689 sys_close\(void\)) 104.4266 Tj
-5.2213 -408.2145 Td
(5690 {) 31.328 Tj
-5.2213 -417.7079 Td
(5691   int fd;) 73.0986 Tj
-5.2213 -427.2012 Td
(5692   struct file *f;) 114.8693 Tj
-5.2213 -436.6946 Td
(5693 ) 26.1067 Tj
-5.2213 -446.1879 Td
(5694   if\(argfd\(0, &fd, &f\) < 0\)) 167.0826 Tj
-5.2213 -455.6813 Td
(5695     return -1;) 99.2053 Tj
-5.2213 -465.1747 Td
(5696   cp->ofile[fd] = 0;) 130.5333 Tj
-5.2213 -474.668 Td
(5697   fileclose\(f\);) 104.4266 Tj
-5.2213 -484.1614 Td
(5698   return 0;) 83.5413 Tj
-5.2213 -493.6547 Td
(5699 }) 31.328 Tj
-5.2213 -522.1348 Td
(Sheet 56) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 66 66
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 3) 198.4106 Tj
-5.2213 -28.4801 Td
(5700 int) 41.7707 Tj
-5.2213 -37.9735 Td
(5701 sys_fstat\(void\)) 104.4266 Tj
-5.2213 -47.4668 Td
(5702 {) 31.328 Tj
-5.2213 -56.9602 Td
(5703   struct file *f;) 114.8693 Tj
-5.2213 -66.4535 Td
(5704   struct stat *st;) 120.0906 Tj
-5.2213 -75.9469 Td
(5705 ) 26.1067 Tj
-5.2213 -85.4403 Td
(5706   if\(argfd\(0, 0, &f\) < 0 || argptr\(1, \(void*\)&st, si\
zeof\(*st\)\) < 0\)) 375.9359 Tj
-5.2213 -94.9336 Td
(5707     return -1;) 99.2053 Tj
-5.2213 -104.427 Td
(5708   return filestat\(f, st\);) 156.64 Tj
-5.2213 -113.9203 Td
(5709 }) 31.328 Tj
-5.2213 -123.4137 Td
(5710 ) 26.1067 Tj
-5.2213 -132.9071 Td
(5711 // Create the path new as a link to the same inode as old.) 328.9439 Tj
-5.2213 -142.4004 Td
(5712 int) 41.7707 Tj
-5.2213 -151.8938 Td
(5713 sys_link\(void\)) 99.2053 Tj
-5.2213 -161.3871 Td
(5714 {) 31.328 Tj
-5.2213 -170.8805 Td
(5715   char name[DIRSIZ], *new, *old;) 193.1893 Tj
-5.2213 -180.3739 Td
(5716   struct inode *dp, *ip;) 151.4186 Tj
-5.2213 -189.8672 Td
(5717 ) 26.1067 Tj
-5.2213 -199.3606 Td
(5718   if\(argstr\(0, &old\) < 0 || argstr\(1, &new\) < 0\)) 276.7306 Tj
-5.2213 -208.8539 Td
(5719     return -1;) 99.2053 Tj
-5.2213 -218.3473 Td
(5720   if\(\(ip = namei\(old\)\) == 0\)) 172.304 Tj
-5.2213 -227.8407 Td
(5721     return -1;) 99.2053 Tj
-5.2213 -237.334 Td
(5722   ilock\(ip\);) 88.7626 Tj
-5.2213 -246.8274 Td
(5723   if\(ip->type == T_DIR\){) 151.4186 Tj
-5.2213 -256.3207 Td
(5724     iunlockput\(ip\);) 125.312 Tj
-5.2213 -265.8141 Td
(5725     return -1;) 99.2053 Tj
-5.2213 -275.3075 Td
(5726   }) 41.7707 Tj
-5.2213 -284.8008 Td
(5727   ip->nlink++;) 99.2053 Tj
-5.2213 -294.2942 Td
(5728   iupdate\(ip\);) 99.2053 Tj
-5.2213 -303.7875 Td
(5729   iunlock\(ip\);) 99.2053 Tj
-5.2213 -313.2809 Td
(5730 ) 26.1067 Tj
-5.2213 -322.7743 Td
(5731   if\(\(dp = nameiparent\(new, name\)\) == 0\)) 234.9599 Tj
-5.2213 -332.2676 Td
(5732     goto  bad;) 99.2053 Tj
-5.2213 -341.761 Td
(5733   ilock\(dp\);) 88.7626 Tj
-5.2213 -351.2543 Td
(5734   if\(dp->dev != ip->dev || dirlink\(dp, name, ip->inum\) \
< 0\)) 334.1652 Tj
-5.2213 -360.7477 Td
(5735     goto bad;) 93.984 Tj
-5.2213 -370.2411 Td
(5736   iunlockput\(dp\);) 114.8693 Tj
-5.2213 -379.7344 Td
(5737   iput\(ip\);) 83.5413 Tj
-5.2213 -389.2278 Td
(5738   return 0;) 83.5413 Tj
-5.2213 -398.7211 Td
(5739 ) 26.1067 Tj
-5.2213 -408.2145 Td
(5740 bad:) 46.992 Tj
-5.2213 -417.7079 Td
(5741   if\(dp\)) 67.8773 Tj
-5.2213 -427.2012 Td
(5742     iunlockput\(dp\);) 125.312 Tj
-5.2213 -436.6946 Td
(5743   ilock\(ip\);) 88.7626 Tj
-5.2213 -446.1879 Td
(5744   ip->nlink--;) 99.2053 Tj
-5.2213 -455.6813 Td
(5745   iupdate\(ip\);) 99.2053 Tj
-5.2213 -465.1747 Td
(5746   iunlockput\(ip\);) 114.8693 Tj
-5.2213 -474.668 Td
(5747   return -1;) 88.7626 Tj
-5.2213 -484.1614 Td
(5748 }) 31.328 Tj
-5.2213 -493.6547 Td
(5749 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 57) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 4) 198.4106 Tj
-5.2213 -28.4801 Td
(5750 // Is the directory dp empty except for "." and ".." ?) 308.0586 Tj
-5.2213 -37.9735 Td
(5751 static int) 78.32 Tj
-5.2213 -47.4668 Td
(5752 isdirempty\(struct inode *dp\)) 172.304 Tj
-5.2213 -56.9602 Td
(5753 {) 31.328 Tj
-5.2213 -66.4535 Td
(5754   int off;) 78.32 Tj
-5.2213 -75.9469 Td
(5755   struct dirent de;) 125.312 Tj
-5.2213 -85.4403 Td
(5756 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5757   for\(off=2*sizeof\(de\); off<dp->size; off+=sizeof\(de\)\
\){) 313.2799 Tj
-5.2213 -104.427 Td
(5758     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != si\
zeof\(de\)\)) 339.3866 Tj
-5.2213 -113.9203 Td
(5759       panic\("isdirempty: readi"\);) 198.4106 Tj
-5.2213 -123.4137 Td
(5760     if\(de.inum != 0\)) 130.5333 Tj
-5.2213 -132.9071 Td
(5761       return 0;) 104.4266 Tj
-5.2213 -142.4004 Td
(5762   }) 41.7707 Tj
-5.2213 -151.8938 Td
(5763   return 1;) 83.5413 Tj
-5.2213 -161.3871 Td
(5764 }) 31.328 Tj
-5.2213 -170.8805 Td
(5765 ) 26.1067 Tj
-5.2213 -180.3739 Td
(5766 int) 41.7707 Tj
-5.2213 -189.8672 Td
(5767 sys_unlink\(void\)) 109.648 Tj
-5.2213 -199.3606 Td
(5768 {) 31.328 Tj
-5.2213 -208.8539 Td
(5769   struct inode *ip, *dp;) 151.4186 Tj
-5.2213 -218.3473 Td
(5770   struct dirent de;) 125.312 Tj
-5.2213 -227.8407 Td
(5771   char name[DIRSIZ], *path;) 167.0826 Tj
-5.2213 -237.334 Td
(5772   uint off;) 83.5413 Tj
-5.2213 -246.8274 Td
(5773 ) 26.1067 Tj
-5.2213 -256.3207 Td
(5774   if\(argstr\(0, &path\) < 0\)) 161.8613 Tj
-5.2213 -265.8141 Td
(5775     return -1;) 99.2053 Tj
-5.2213 -275.3075 Td
(5776   if\(\(dp = nameiparent\(path, name\)\) == 0\)) 240.1813 Tj
-5.2213 -284.8008 Td
(5777     return -1;) 99.2053 Tj
-5.2213 -294.2942 Td
(5778   ilock\(dp\);) 88.7626 Tj
-5.2213 -303.7875 Td
(5779 ) 26.1067 Tj
-5.2213 -313.2809 Td
(5780   // Cannot unlink "." or "..".) 187.968 Tj
-5.2213 -322.7743 Td
(5781   if\(namecmp\(name, "."\) == 0 || namecmp\(name, ".."\) =\
= 0\){) 328.9439 Tj
-5.2213 -332.2676 Td
(5782     iunlockput\(dp\);) 125.312 Tj
-5.2213 -341.761 Td
(5783     return -1;) 99.2053 Tj
-5.2213 -351.2543 Td
(5784   }) 41.7707 Tj
-5.2213 -360.7477 Td
(5785 ) 26.1067 Tj
-5.2213 -370.2411 Td
(5786   if\(\(ip = dirlookup\(dp, name, &off\)\) == 0\){) 255.8453 Tj
-5.2213 -379.7344 Td
(5787     iunlockput\(dp\);) 125.312 Tj
-5.2213 -389.2278 Td
(5788     return -1;) 99.2053 Tj
-5.2213 -398.7211 Td
(5789   }) 41.7707 Tj
-5.2213 -408.2145 Td
(5790   ilock\(ip\);) 88.7626 Tj
-5.2213 -417.7079 Td
(5791 ) 26.1067 Tj
-5.2213 -427.2012 Td
(5792   if\(ip->nlink < 1\)) 125.312 Tj
-5.2213 -436.6946 Td
(5793     panic\("unlink: nlink < 1"\);) 187.968 Tj
-5.2213 -446.1879 Td
(5794   if\(ip->type == T_DIR && !isdirempty\(ip\)\){) 250.6239 Tj
-5.2213 -455.6813 Td
(5795     iunlockput\(ip\);) 125.312 Tj
-5.2213 -465.1747 Td
(5796     iunlockput\(dp\);) 125.312 Tj
-5.2213 -474.668 Td
(5797     return -1;) 99.2053 Tj
-5.2213 -484.1614 Td
(5798   }) 41.7707 Tj
-5.2213 -493.6547 Td
(5799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 57) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 67 67
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 5) 198.4106 Tj
-5.2213 -28.4801 Td
(5800   memset\(&de, 0, sizeof\(de\)\);) 177.5253 Tj
-5.2213 -37.9735 Td
(5801   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != siz\
eof\(de\)\)) 334.1652 Tj
-5.2213 -47.4668 Td
(5802     panic\("unlink: writei"\);) 172.304 Tj
-5.2213 -56.9602 Td
(5803   iunlockput\(dp\);) 114.8693 Tj
-5.2213 -66.4535 Td
(5804 ) 26.1067 Tj
-5.2213 -75.9469 Td
(5805   ip->nlink--;) 99.2053 Tj
-5.2213 -85.4403 Td
(5806   iupdate\(ip\);) 99.2053 Tj
-5.2213 -94.9336 Td
(5807   iunlockput\(ip\);) 114.8693 Tj
-5.2213 -104.427 Td
(5808   return 0;) 83.5413 Tj
-5.2213 -113.9203 Td
(5809 }) 31.328 Tj
-5.2213 -123.4137 Td
(5810 ) 26.1067 Tj
-5.2213 -132.9071 Td
(5811 static struct inode*) 130.5333 Tj
-5.2213 -142.4004 Td
(5812 create\(char *path, int canexist, short type, short major,\
 short minor\)) 391.5999 Tj
-5.2213 -151.8938 Td
(5813 {) 31.328 Tj
-5.2213 -161.3871 Td
(5814   uint off;) 83.5413 Tj
-5.2213 -170.8805 Td
(5815   struct inode *ip, *dp;) 151.4186 Tj
-5.2213 -180.3739 Td
(5816   char name[DIRSIZ];) 130.5333 Tj
-5.2213 -189.8672 Td
(5817 ) 26.1067 Tj
-5.2213 -199.3606 Td
(5818   if\(\(dp = nameiparent\(path, name\)\) == 0\)) 240.1813 Tj
-5.2213 -208.8539 Td
(5819     return 0;) 93.984 Tj
-5.2213 -218.3473 Td
(5820   ilock\(dp\);) 88.7626 Tj
-5.2213 -227.8407 Td
(5821 ) 26.1067 Tj
-5.2213 -237.334 Td
(5822   if\(canexist && \(ip = dirlookup\(dp, name, &off\)\) != \
0\){) 318.5013 Tj
-5.2213 -246.8274 Td
(5823     iunlockput\(dp\);) 125.312 Tj
-5.2213 -256.3207 Td
(5824     ilock\(ip\);) 99.2053 Tj
-5.2213 -265.8141 Td
(5825     if\(ip->type != type || ip->major != major || ip->mino\
r != minor\){) 386.3786 Tj
-5.2213 -275.3075 Td
(5826       iunlockput\(ip\);) 135.7546 Tj
-5.2213 -284.8008 Td
(5827       return 0;) 104.4266 Tj
-5.2213 -294.2942 Td
(5828     }) 52.2133 Tj
-5.2213 -303.7875 Td
(5829     return ip;) 99.2053 Tj
-5.2213 -313.2809 Td
(5830   }) 41.7707 Tj
-5.2213 -322.7743 Td
(5831 ) 26.1067 Tj
-5.2213 -332.2676 Td
(5832   if\(\(ip = ialloc\(dp->dev, type\)\) == 0\){) 234.9599 Tj
-5.2213 -341.761 Td
(5833     iunlockput\(dp\);) 125.312 Tj
-5.2213 -351.2543 Td
(5834     return 0;) 93.984 Tj
-5.2213 -360.7477 Td
(5835   }) 41.7707 Tj
-5.2213 -370.2411 Td
(5836   ilock\(ip\);) 88.7626 Tj
-5.2213 -379.7344 Td
(5837   ip->major = major;) 130.5333 Tj
-5.2213 -389.2278 Td
(5838   ip->minor = minor;) 130.5333 Tj
-5.2213 -398.7211 Td
(5839   ip->nlink = 1;) 109.648 Tj
-5.2213 -408.2145 Td
(5840   iupdate\(ip\);) 99.2053 Tj
-5.2213 -417.7079 Td
(5841 ) 26.1067 Tj
-5.2213 -427.2012 Td
(5842   if\(dirlink\(dp, name, ip->inum\) < 0\){) 224.5173 Tj
-5.2213 -436.6946 Td
(5843     ip->nlink = 0;) 120.0906 Tj
-5.2213 -446.1879 Td
(5844     iunlockput\(ip\);) 125.312 Tj
-5.2213 -455.6813 Td
(5845     iunlockput\(dp\);) 125.312 Tj
-5.2213 -465.1747 Td
(5846     return 0;) 93.984 Tj
-5.2213 -474.668 Td
(5847   }) 41.7707 Tj
-5.2213 -484.1614 Td
(5848 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5849 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 58) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 6) 198.4106 Tj
-5.2213 -28.4801 Td
(5850   if\(type == T_DIR\){  // Create . and .. entries.) 281.9519 Tj
-5.2213 -37.9735 Td
(5851     dp->nlink++;  // for "..") 177.5253 Tj
-5.2213 -47.4668 Td
(5852     iupdate\(dp\);) 109.648 Tj
-5.2213 -56.9602 Td
(5853     // No ip->nlink++ for ".": avoid cyclic ref count.) 308.0586 Tj
-5.2213 -66.4535 Td
(5854     if\(dirlink\(ip, ".", ip->inum\) < 0 || dirlink\(ip, "\
..", dp->inum\) < 0\)) 407.2639 Tj
-5.2213 -75.9469 Td
(5855       panic\("create dots"\);) 167.0826 Tj
-5.2213 -85.4403 Td
(5856   }) 41.7707 Tj
-5.2213 -94.9336 Td
(5857   iunlockput\(dp\);) 114.8693 Tj
-5.2213 -104.427 Td
(5858   return ip;) 88.7626 Tj
-5.2213 -113.9203 Td
(5859 }) 31.328 Tj
-5.2213 -123.4137 Td
(5860 ) 26.1067 Tj
-5.2213 -132.9071 Td
(5861 int) 41.7707 Tj
-5.2213 -142.4004 Td
(5862 sys_open\(void\)) 99.2053 Tj
-5.2213 -151.8938 Td
(5863 {) 31.328 Tj
-5.2213 -161.3871 Td
(5864   char *path;) 93.984 Tj
-5.2213 -170.8805 Td
(5865   int fd, omode;) 109.648 Tj
-5.2213 -180.3739 Td
(5866   struct file *f;) 114.8693 Tj
-5.2213 -189.8672 Td
(5867   struct inode *ip;) 125.312 Tj
-5.2213 -199.3606 Td
(5868 ) 26.1067 Tj
-5.2213 -208.8539 Td
(5869   if\(argstr\(0, &path\) < 0 || argint\(1, &omode\) < 0\)) 292.3946 Tj
-5.2213 -218.3473 Td
(5870     return -1;) 99.2053 Tj
-5.2213 -227.8407 Td
(5871 ) 26.1067 Tj
-5.2213 -237.334 Td
(5872   if\(omode & O_CREATE\){) 146.1973 Tj
-5.2213 -246.8274 Td
(5873     if\(\(ip = create\(path, 1, T_FILE, 0, 0\)\) == 0\)) 281.9519 Tj
-5.2213 -256.3207 Td
(5874       return -1;) 109.648 Tj
-5.2213 -265.8141 Td
(5875   } else {) 78.32 Tj
-5.2213 -275.3075 Td
(5876     if\(\(ip = namei\(path\)\) == 0\)) 187.968 Tj
-5.2213 -284.8008 Td
(5877       return -1;) 109.648 Tj
-5.2213 -294.2942 Td
(5878     ilock\(ip\);) 99.2053 Tj
-5.2213 -303.7875 Td
(5879     if\(ip->type == T_DIR && \(omode & \(O_RDWR|O_WRONLY\)\
\)\){) 323.7226 Tj
-5.2213 -313.2809 Td
(5880       iunlockput\(ip\);) 135.7546 Tj
-5.2213 -322.7743 Td
(5881       return -1;) 109.648 Tj
-5.2213 -332.2676 Td
(5882     }) 52.2133 Tj
-5.2213 -341.761 Td
(5883   }) 41.7707 Tj
-5.2213 -351.2543 Td
(5884 ) 26.1067 Tj
-5.2213 -360.7477 Td
(5885   if\(\(f = filealloc\(\)\) == 0 || \(fd = fdalloc\(f\)\) \
< 0\){) 308.0586 Tj
-5.2213 -370.2411 Td
(5886     if\(f\)) 73.0986 Tj
-5.2213 -379.7344 Td
(5887       fileclose\(f\);) 125.312 Tj
-5.2213 -389.2278 Td
(5888     iunlockput\(ip\);) 125.312 Tj
-5.2213 -398.7211 Td
(5889     return -1;) 99.2053 Tj
-5.2213 -408.2145 Td
(5890   }) 41.7707 Tj
-5.2213 -417.7079 Td
(5891   iunlock\(ip\);) 99.2053 Tj
-5.2213 -427.2012 Td
(5892 ) 26.1067 Tj
-5.2213 -436.6946 Td
(5893   f->type = FD_INODE;) 135.7546 Tj
-5.2213 -446.1879 Td
(5894   f->ip = ip;) 93.984 Tj
-5.2213 -455.6813 Td
(5895   f->off = 0;) 93.984 Tj
-5.2213 -465.1747 Td
(5896   f->readable = !\(omode & O_WRONLY\);) 214.0746 Tj
-5.2213 -474.668 Td
(5897   f->writable = \(omode & O_WRONLY\) || \(omode & O_RDWR\)\
;) 313.2799 Tj
-5.2213 -484.1614 Td
(5898 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 58) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 68 68
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 7) 198.4106 Tj
-5.2213 -28.4801 Td
(5900   return fd;) 88.7626 Tj
-5.2213 -37.9735 Td
(5901 }) 31.328 Tj
-5.2213 -47.4668 Td
(5902 ) 26.1067 Tj
-5.2213 -56.9602 Td
(5903 int) 41.7707 Tj
-5.2213 -66.4535 Td
(5904 sys_mknod\(void\)) 104.4266 Tj
-5.2213 -75.9469 Td
(5905 {) 31.328 Tj
-5.2213 -85.4403 Td
(5906   struct inode *ip;) 125.312 Tj
-5.2213 -94.9336 Td
(5907   char *path;) 93.984 Tj
-5.2213 -104.427 Td
(5908   int len;) 78.32 Tj
-5.2213 -113.9203 Td
(5909   int major, minor;) 125.312 Tj
-5.2213 -123.4137 Td
(5910 ) 26.1067 Tj
-5.2213 -132.9071 Td
(5911   if\(\(len=argstr\(0, &path\)\) < 0 ||) 203.6319 Tj
-5.2213 -142.4004 Td
(5912      argint\(1, &major\) < 0 ||) 177.5253 Tj
-5.2213 -151.8938 Td
(5913      argint\(2, &minor\) < 0 ||) 177.5253 Tj
-5.2213 -161.3871 Td
(5914      \(ip = create\(path, 0, T_DEV, major, minor\)\) == 0\)) 308.0586 Tj
-5.2213 -170.8805 Td
(5915     return -1;) 99.2053 Tj
-5.2213 -180.3739 Td
(5916   iunlockput\(ip\);) 114.8693 Tj
-5.2213 -189.8672 Td
(5917   return 0;) 83.5413 Tj
-5.2213 -199.3606 Td
(5918 }) 31.328 Tj
-5.2213 -208.8539 Td
(5919 ) 26.1067 Tj
-5.2213 -218.3473 Td
(5920 int) 41.7707 Tj
-5.2213 -227.8407 Td
(5921 sys_mkdir\(void\)) 104.4266 Tj
-5.2213 -237.334 Td
(5922 {) 31.328 Tj
-5.2213 -246.8274 Td
(5923   char *path;) 93.984 Tj
-5.2213 -256.3207 Td
(5924   struct inode *ip;) 125.312 Tj
-5.2213 -265.8141 Td
(5925 ) 26.1067 Tj
-5.2213 -275.3075 Td
(5926   if\(argstr\(0, &path\) < 0 || \(ip = create\(path, 0, T_\
DIR, 0, 0\)\) == 0\)) 391.5999 Tj
-5.2213 -284.8008 Td
(5927     return -1;) 99.2053 Tj
-5.2213 -294.2942 Td
(5928   iunlockput\(ip\);) 114.8693 Tj
-5.2213 -303.7875 Td
(5929   return 0;) 83.5413 Tj
-5.2213 -313.2809 Td
(5930 }) 31.328 Tj
-5.2213 -322.7743 Td
(5931 ) 26.1067 Tj
-5.2213 -332.2676 Td
(5932 int) 41.7707 Tj
-5.2213 -341.761 Td
(5933 sys_chdir\(void\)) 104.4266 Tj
-5.2213 -351.2543 Td
(5934 {) 31.328 Tj
-5.2213 -360.7477 Td
(5935   char *path;) 93.984 Tj
-5.2213 -370.2411 Td
(5936   struct inode *ip;) 125.312 Tj
-5.2213 -379.7344 Td
(5937 ) 26.1067 Tj
-5.2213 -389.2278 Td
(5938   if\(argstr\(0, &path\) < 0 || \(ip = namei\(path\)\) == \
0\)) 302.8373 Tj
-5.2213 -398.7211 Td
(5939     return -1;) 99.2053 Tj
-5.2213 -408.2145 Td
(5940   ilock\(ip\);) 88.7626 Tj
-5.2213 -417.7079 Td
(5941   if\(ip->type != T_DIR\){) 151.4186 Tj
-5.2213 -427.2012 Td
(5942     iunlockput\(ip\);) 125.312 Tj
-5.2213 -436.6946 Td
(5943     return -1;) 99.2053 Tj
-5.2213 -446.1879 Td
(5944   }) 41.7707 Tj
-5.2213 -455.6813 Td
(5945   iunlock\(ip\);) 99.2053 Tj
-5.2213 -465.1747 Td
(5946   iput\(cp->cwd\);) 109.648 Tj
-5.2213 -474.668 Td
(5947   cp->cwd = ip;) 104.4266 Tj
-5.2213 -484.1614 Td
(5948   return 0;) 83.5413 Tj
-5.2213 -493.6547 Td
(5949 }) 31.328 Tj
-5.2213 -522.1348 Td
(Sheet 59) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sysfile.c  Page 8) 198.4106 Tj
-5.2213 -28.4801 Td
(5950 int) 41.7707 Tj
-5.2213 -37.9735 Td
(5951 sys_exec\(void\)) 99.2053 Tj
-5.2213 -47.4668 Td
(5952 {) 31.328 Tj
-5.2213 -56.9602 Td
(5953   char *path, *argv[20];) 151.4186 Tj
-5.2213 -66.4535 Td
(5954   int i;) 67.8773 Tj
-5.2213 -75.9469 Td
(5955   uint uargv, uarg;) 125.312 Tj
-5.2213 -85.4403 Td
(5956 ) 26.1067 Tj
-5.2213 -94.9336 Td
(5957   if\(argstr\(0, &path\) < 0 || argint\(1, \(int*\)&uargv\)\
 < 0\)) 323.7226 Tj
-5.2213 -104.427 Td
(5958     return -1;) 99.2053 Tj
-5.2213 -113.9203 Td
(5959   memset\(argv, 0, sizeof\(argv\)\);) 193.1893 Tj
-5.2213 -123.4137 Td
(5960   for\(i=0;; i++\){) 114.8693 Tj
-5.2213 -132.9071 Td
(5961     if\(i >= NELEM\(argv\)\)) 151.4186 Tj
-5.2213 -142.4004 Td
(5962       return -1;) 109.648 Tj
-5.2213 -151.8938 Td
(5963     if\(fetchint\(cp, uargv+4*i, \(int*\)&uarg\) < 0\)) 276.7306 Tj
-5.2213 -161.3871 Td
(5964       return -1;) 109.648 Tj
-5.2213 -170.8805 Td
(5965     if\(uarg == 0\){) 120.0906 Tj
-5.2213 -180.3739 Td
(5966       argv[i] = 0;) 120.0906 Tj
-5.2213 -189.8672 Td
(5967       break;) 88.7626 Tj
-5.2213 -199.3606 Td
(5968     }) 52.2133 Tj
-5.2213 -208.8539 Td
(5969     if\(fetchstr\(cp, uarg, &argv[i]\) < 0\)) 234.9599 Tj
-5.2213 -218.3473 Td
(5970       return -1;) 109.648 Tj
-5.2213 -227.8407 Td
(5971   }) 41.7707 Tj
-5.2213 -237.334 Td
(5972   return exec\(path, argv\);) 161.8613 Tj
-5.2213 -246.8274 Td
(5973 }) 31.328 Tj
-5.2213 -256.3207 Td
(5974 ) 26.1067 Tj
-5.2213 -265.8141 Td
(5975 int) 41.7707 Tj
-5.2213 -275.3075 Td
(5976 sys_pipe\(void\)) 99.2053 Tj
-5.2213 -284.8008 Td
(5977 {) 31.328 Tj
-5.2213 -294.2942 Td
(5978   int *fd;) 78.32 Tj
-5.2213 -303.7875 Td
(5979   struct file *rf, *wf;) 146.1973 Tj
-5.2213 -313.2809 Td
(5980   int fd0, fd1;) 104.4266 Tj
-5.2213 -322.7743 Td
(5981 ) 26.1067 Tj
-5.2213 -332.2676 Td
(5982   if\(argptr\(0, \(void*\)&fd, 2*sizeof\(fd[0]\)\) < 0\)) 276.7306 Tj
-5.2213 -341.761 Td
(5983     return -1;) 99.2053 Tj
-5.2213 -351.2543 Td
(5984   if\(pipealloc\(&rf, &wf\) < 0\)) 177.5253 Tj
-5.2213 -360.7477 Td
(5985     return -1;) 99.2053 Tj
-5.2213 -370.2411 Td
(5986   fd0 = -1;) 83.5413 Tj
-5.2213 -379.7344 Td
(5987   if\(\(fd0 = fdalloc\(rf\)\) < 0 || \(fd1 = fdalloc\(wf\)\
\) < 0\){) 323.7226 Tj
-5.2213 -389.2278 Td
(5988     if\(fd0 >= 0\)) 109.648 Tj
-5.2213 -398.7211 Td
(5989       cp->ofile[fd0] = 0;) 156.64 Tj
-5.2213 -408.2145 Td
(5990     fileclose\(rf\);) 120.0906 Tj
-5.2213 -417.7079 Td
(5991     fileclose\(wf\);) 120.0906 Tj
-5.2213 -427.2012 Td
(5992     return -1;) 99.2053 Tj
-5.2213 -436.6946 Td
(5993   }) 41.7707 Tj
-5.2213 -446.1879 Td
(5994   fd[0] = fd0;) 99.2053 Tj
-5.2213 -455.6813 Td
(5995   fd[1] = fd1;) 99.2053 Tj
-5.2213 -465.1747 Td
(5996   return 0;) 83.5413 Tj
-5.2213 -474.668 Td
(5997 }) 31.328 Tj
-5.2213 -484.1614 Td
(5998 ) 26.1067 Tj
-5.2213 -493.6547 Td
(5999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 59) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 69 69
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/exec.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(6000 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(6001 #include "param.h") 120.0906 Tj
-5.2213 -47.4668 Td
(6002 #include "mmu.h") 109.648 Tj
-5.2213 -56.9602 Td
(6003 #include "proc.h") 114.8693 Tj
-5.2213 -66.4535 Td
(6004 #include "defs.h") 114.8693 Tj
-5.2213 -75.9469 Td
(6005 #include "x86.h") 109.648 Tj
-5.2213 -85.4403 Td
(6006 #include "elf.h") 109.648 Tj
-5.2213 -94.9336 Td
(6007 ) 26.1067 Tj
-5.2213 -104.427 Td
(6008 int) 41.7707 Tj
-5.2213 -113.9203 Td
(6009 exec\(char *path, char **argv\)) 177.5253 Tj
-5.2213 -123.4137 Td
(6010 {) 31.328 Tj
-5.2213 -132.9071 Td
(6011   char *mem, *s, *last;) 146.1973 Tj
-5.2213 -142.4004 Td
(6012   int i, argc, arglen, len, off;) 193.1893 Tj
-5.2213 -151.8938 Td
(6013   uint sz, sp, argp;) 130.5333 Tj
-5.2213 -161.3871 Td
(6014   struct elfhdr elf;) 130.5333 Tj
-5.2213 -170.8805 Td
(6015   struct inode *ip;) 125.312 Tj
-5.2213 -180.3739 Td
(6016   struct proghdr ph;) 130.5333 Tj
-5.2213 -189.8672 Td
(6017 ) 26.1067 Tj
-5.2213 -199.3606 Td
(6018   if\(\(ip = namei\(path\)\) == 0\)) 177.5253 Tj
-5.2213 -208.8539 Td
(6019     return -1;) 99.2053 Tj
-5.2213 -218.3473 Td
(6020 //  cprintf\("XXX exec\\n"\);) 161.8613 Tj
-5.2213 -227.8407 Td
(6021   ilock\(ip\);) 88.7626 Tj
-5.2213 -237.334 Td
(6022 ) 26.1067 Tj
-5.2213 -246.8274 Td
(6023   // Compute memory size of new process.) 234.9599 Tj
-5.2213 -256.3207 Td
(6024   mem = 0;) 78.32 Tj
-5.2213 -265.8141 Td
(6025   sz = 0;) 73.0986 Tj
-5.2213 -275.3075 Td
(6026 ) 26.1067 Tj
-5.2213 -284.8008 Td
(6027   // Program segments.) 140.976 Tj
-5.2213 -294.2942 Td
(6028   if\(readi\(ip, \(char*\)&elf, 0, sizeof\(elf\)\) < sizeo\
f\(elf\)\)) 328.9439 Tj
-5.2213 -303.7875 Td
(6029     goto bad;) 93.984 Tj
-5.2213 -313.2809 Td
(6030   if\(elf.magic != ELF_MAGIC\)) 172.304 Tj
-5.2213 -322.7743 Td
(6031     goto bad;) 93.984 Tj
-5.2213 -332.2676 Td
(6032   for\(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof\(\
ph\)\){) 344.6079 Tj
-5.2213 -341.761 Td
(6033     if\(readi\(ip, \(char*\)&ph, off, sizeof\(ph\)\) != si\
zeof\(ph\)\)) 339.3866 Tj
-5.2213 -351.2543 Td
(6034       goto bad;) 104.4266 Tj
-5.2213 -360.7477 Td
(6035     if\(ph.type != ELF_PROG_LOAD\)) 193.1893 Tj
-5.2213 -370.2411 Td
(6036       continue;) 104.4266 Tj
-5.2213 -379.7344 Td
(6037     if\(ph.memsz < ph.filesz\)) 172.304 Tj
-5.2213 -389.2278 Td
(6038       goto bad;) 104.4266 Tj
-5.2213 -398.7211 Td
(6039     sz += ph.memsz;) 125.312 Tj
-5.2213 -408.2145 Td
(6040   }) 41.7707 Tj
-5.2213 -417.7079 Td
(6041 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6042   // Arguments.) 104.4266 Tj
-5.2213 -436.6946 Td
(6043   arglen = 0;) 93.984 Tj
-5.2213 -446.1879 Td
(6044   for\(argc=0; argv[argc]; argc++\)) 198.4106 Tj
-5.2213 -455.6813 Td
(6045     arglen += strlen\(argv[argc]\) + 1;) 219.2959 Tj
-5.2213 -465.1747 Td
(6046   arglen = \(arglen+3\) & ~3;) 167.0826 Tj
-5.2213 -474.668 Td
(6047   sz += arglen + 4*\(argc+1\);) 172.304 Tj
-5.2213 -484.1614 Td
(6048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 60) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/exec.c  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(6050   // Stack.) 83.5413 Tj
-5.2213 -37.9735 Td
(6051   sz += PAGE;) 93.984 Tj
-5.2213 -47.4668 Td
(6052 ) 26.1067 Tj
-5.2213 -56.9602 Td
(6053   // Allocate program memory.) 177.5253 Tj
-5.2213 -66.4535 Td
(6054   sz = \(sz+PAGE-1\) & ~\(PAGE-1\);) 187.968 Tj
-5.2213 -75.9469 Td
(6055   mem = kalloc\(sz\);) 125.312 Tj
-5.2213 -85.4403 Td
(6056   if\(mem == 0\)) 99.2053 Tj
-5.2213 -94.9336 Td
(6057     goto bad;) 93.984 Tj
-5.2213 -104.427 Td
(6058   memset\(mem, 0, sz\);) 135.7546 Tj
-5.2213 -113.9203 Td
(6059 ) 26.1067 Tj
-5.2213 -123.4137 Td
(6060   // Load program into memory.) 182.7466 Tj
-5.2213 -132.9071 Td
(6061   for\(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof\(\
ph\)\){) 344.6079 Tj
-5.2213 -142.4004 Td
(6062     if\(readi\(ip, \(char*\)&ph, off, sizeof\(ph\)\) != si\
zeof\(ph\)\)) 339.3866 Tj
-5.2213 -151.8938 Td
(6063       goto bad;) 104.4266 Tj
-5.2213 -161.3871 Td
(6064     if\(ph.type != ELF_PROG_LOAD\)) 193.1893 Tj
-5.2213 -170.8805 Td
(6065       continue;) 104.4266 Tj
-5.2213 -180.3739 Td
(6066     if\(ph.va + ph.memsz > sz\)) 177.5253 Tj
-5.2213 -189.8672 Td
(6067       goto bad;) 104.4266 Tj
-5.2213 -199.3606 Td
(6068     if\(readi\(ip, mem + ph.va, ph.offset, ph.filesz\) != \
ph.filesz\)) 365.4932 Tj
-5.2213 -208.8539 Td
(6069       goto bad;) 104.4266 Tj
-5.2213 -218.3473 Td
(6070     memset\(mem + ph.va + ph.filesz, 0, ph.memsz - ph.file\
sz\);) 344.6079 Tj
-5.2213 -227.8407 Td
(6071   }) 41.7707 Tj
-5.2213 -237.334 Td
(6072   iunlockput\(ip\);) 114.8693 Tj
-5.2213 -246.8274 Td
(6073 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6074   // Initialize stack.) 140.976 Tj
-5.2213 -265.8141 Td
(6075   sp = sz;) 78.32 Tj
-5.2213 -275.3075 Td
(6076   argp = sz - arglen - 4*\(argc+1\);) 203.6319 Tj
-5.2213 -284.8008 Td
(6077 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6078   // Copy argv strings and pointers to stack.) 261.0666 Tj
-5.2213 -303.7875 Td
(6079   *\(uint*\)\(mem+argp + 4*argc\) = 0;  // argv[argc]) 281.9519 Tj
-5.2213 -313.2809 Td
(6080   for\(i=argc-1; i>=0; i--\){) 167.0826 Tj
-5.2213 -322.7743 Td
(6081     len = strlen\(argv[i]\) + 1;) 182.7466 Tj
-5.2213 -332.2676 Td
(6082     sp -= len;) 99.2053 Tj
-5.2213 -341.761 Td
(6083     memmove\(mem+sp, argv[i], len\);) 203.6319 Tj
-5.2213 -351.2543 Td
(6084     *\(uint*\)\(mem+argp + 4*i\) = sp;  // argv[i]) 266.2879 Tj
-5.2213 -360.7477 Td
(6085   }) 41.7707 Tj
-5.2213 -370.2411 Td
(6086 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6087   // Stack frame for main\(argc, argv\), below arguments.) 313.2799 Tj
-5.2213 -389.2278 Td
(6088   sp = argp;) 88.7626 Tj
-5.2213 -398.7211 Td
(6089   sp -= 4;) 78.32 Tj
-5.2213 -408.2145 Td
(6090   *\(uint*\)\(mem+sp\) = argp;) 161.8613 Tj
-5.2213 -417.7079 Td
(6091   sp -= 4;) 78.32 Tj
-5.2213 -427.2012 Td
(6092   *\(uint*\)\(mem+sp\) = argc;) 161.8613 Tj
-5.2213 -436.6946 Td
(6093   sp -= 4;) 78.32 Tj
-5.2213 -446.1879 Td
(6094   *\(uint*\)\(mem+sp\) = 0xffffffff;   // fake return pc) 297.6159 Tj
-5.2213 -455.6813 Td
(6095 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6096 ) 26.1067 Tj
-5.2213 -474.668 Td
(6097 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6098 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6099 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 60) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 70 70
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/exec.c  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(6100   // Save program name for debugging.) 219.2959 Tj
-5.2213 -37.9735 Td
(6101   for\(last=s=path; *s; s++\)) 167.0826 Tj
-5.2213 -47.4668 Td
(6102     if\(*s == '/'\)) 114.8693 Tj
-5.2213 -56.9602 Td
(6103       last = s+1;) 114.8693 Tj
-5.2213 -66.4535 Td
(6104   safestrcpy\(cp->name, last, sizeof\(cp->name\)\);) 271.5093 Tj
-5.2213 -75.9469 Td
(6105 ) 26.1067 Tj
-5.2213 -85.4403 Td
(6106   // Commit to the new image.) 177.5253 Tj
-5.2213 -94.9336 Td
(6107   kfree\(cp->mem, cp->sz\);) 156.64 Tj
-5.2213 -104.427 Td
(6108   cp->mem = mem;) 109.648 Tj
-5.2213 -113.9203 Td
(6109   cp->sz = sz;) 99.2053 Tj
-5.2213 -123.4137 Td
(6110   cp->tf->eip = elf.entry;  // main) 208.8533 Tj
-5.2213 -132.9071 Td
(6111   cp->tf->esp = sp;) 125.312 Tj
-5.2213 -142.4004 Td
(6112   setupsegs\(cp\);) 109.648 Tj
-5.2213 -151.8938 Td
(6113   return 0;) 83.5413 Tj
-5.2213 -161.3871 Td
(6114 ) 26.1067 Tj
-5.2213 -170.8805 Td
(6115  bad:) 52.2133 Tj
-5.2213 -180.3739 Td
(6116   if\(mem\)) 73.0986 Tj
-5.2213 -189.8672 Td
(6117     kfree\(mem, sz\);) 125.312 Tj
-5.2213 -199.3606 Td
(6118   iunlockput\(ip\);) 114.8693 Tj
-5.2213 -208.8539 Td
(6119   return -1;) 88.7626 Tj
-5.2213 -218.3473 Td
(6120 }) 31.328 Tj
-5.2213 -227.8407 Td
(6121 ) 26.1067 Tj
-5.2213 -237.334 Td
(6122 ) 26.1067 Tj
-5.2213 -246.8274 Td
(6123 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6124 ) 26.1067 Tj
-5.2213 -265.8141 Td
(6125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(6126 ) 26.1067 Tj
-5.2213 -284.8008 Td
(6127 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6128 ) 26.1067 Tj
-5.2213 -303.7875 Td
(6129 ) 26.1067 Tj
-5.2213 -313.2809 Td
(6130 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6131 ) 26.1067 Tj
-5.2213 -332.2676 Td
(6132 ) 26.1067 Tj
-5.2213 -341.761 Td
(6133 ) 26.1067 Tj
-5.2213 -351.2543 Td
(6134 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6135 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6136 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6137 ) 26.1067 Tj
-5.2213 -389.2278 Td
(6138 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6139 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6140 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6141 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6142 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6143 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6144 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6146 ) 26.1067 Tj
-5.2213 -474.668 Td
(6147 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 61) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pipe.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(6150 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(6151 #include "defs.h") 114.8693 Tj
-5.2213 -47.4668 Td
(6152 #include "param.h") 120.0906 Tj
-5.2213 -56.9602 Td
(6153 #include "mmu.h") 109.648 Tj
-5.2213 -66.4535 Td
(6154 #include "proc.h") 114.8693 Tj
-5.2213 -75.9469 Td
(6155 #include "file.h") 114.8693 Tj
-5.2213 -85.4403 Td
(6156 #include "spinlock.h") 135.7546 Tj
-5.2213 -94.9336 Td
(6157 ) 26.1067 Tj
-5.2213 -104.427 Td
(6158 #define PIPESIZE 512) 130.5333 Tj
-5.2213 -113.9203 Td
(6159 ) 26.1067 Tj
-5.2213 -123.4137 Td
(6160 struct pipe {) 93.984 Tj
-5.2213 -132.9071 Td
(6161   int readopen;   // read fd is still open) 245.4026 Tj
-5.2213 -142.4004 Td
(6162   int writeopen;  // write fd is still open) 250.6239 Tj
-5.2213 -151.8938 Td
(6163   int writep;     // next index to write) 234.9599 Tj
-5.2213 -161.3871 Td
(6164   int readp;      // next index to read) 229.7386 Tj
-5.2213 -170.8805 Td
(6165   struct spinlock lock;) 146.1973 Tj
-5.2213 -180.3739 Td
(6166   char data[PIPESIZE];) 140.976 Tj
-5.2213 -189.8672 Td
(6167 };) 36.5493 Tj
-5.2213 -199.3606 Td
(6168 ) 26.1067 Tj
-5.2213 -208.8539 Td
(6169 int) 41.7707 Tj
-5.2213 -218.3473 Td
(6170 pipealloc\(struct file **f0, struct file **f1\)) 261.0666 Tj
-5.2213 -227.8407 Td
(6171 {) 31.328 Tj
-5.2213 -237.334 Td
(6172   struct pipe *p;) 114.8693 Tj
-5.2213 -246.8274 Td
(6173 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6174   p = 0;) 67.8773 Tj
-5.2213 -265.8141 Td
(6175   *f0 = *f1 = 0;) 109.648 Tj
-5.2213 -275.3075 Td
(6176   if\(\(*f0 = filealloc\(\)\) == 0 || \(*f1 = filealloc\(\)\
\) == 0\)) 328.9439 Tj
-5.2213 -284.8008 Td
(6177     goto bad;) 93.984 Tj
-5.2213 -294.2942 Td
(6178   if\(\(p = \(struct pipe*\)kalloc\(PAGE\)\) == 0\)) 250.6239 Tj
-5.2213 -303.7875 Td
(6179     goto bad;) 93.984 Tj
-5.2213 -313.2809 Td
(6180   p->readopen = 1;) 120.0906 Tj
-5.2213 -322.7743 Td
(6181   p->writeopen = 1;) 125.312 Tj
-5.2213 -332.2676 Td
(6182   p->writep = 0;) 109.648 Tj
-5.2213 -341.761 Td
(6183   p->readp = 0;) 104.4266 Tj
-5.2213 -351.2543 Td
(6184   initlock\(&p->lock, "pipe"\);) 177.5253 Tj
-5.2213 -360.7477 Td
(6185   \(*f0\)->type = FD_PIPE;) 151.4186 Tj
-5.2213 -370.2411 Td
(6186   \(*f0\)->readable = 1;) 140.976 Tj
-5.2213 -379.7344 Td
(6187   \(*f0\)->writable = 0;) 140.976 Tj
-5.2213 -389.2278 Td
(6188   \(*f0\)->pipe = p;) 120.0906 Tj
-5.2213 -398.7211 Td
(6189   \(*f1\)->type = FD_PIPE;) 151.4186 Tj
-5.2213 -408.2145 Td
(6190   \(*f1\)->readable = 0;) 140.976 Tj
-5.2213 -417.7079 Td
(6191   \(*f1\)->writable = 1;) 140.976 Tj
-5.2213 -427.2012 Td
(6192   \(*f1\)->pipe = p;) 120.0906 Tj
-5.2213 -436.6946 Td
(6193   return 0;) 83.5413 Tj
-5.2213 -446.1879 Td
(6194 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6195  bad:) 52.2133 Tj
-5.2213 -465.1747 Td
(6196   if\(p\)) 62.656 Tj
-5.2213 -474.668 Td
(6197     kfree\(\(char*\)p, PAGE\);) 161.8613 Tj
-5.2213 -484.1614 Td
(6198   if\(*f0\){) 78.32 Tj
-5.2213 -493.6547 Td
(6199     \(*f0\)->type = FD_NONE;) 161.8613 Tj
-5.2213 -522.1348 Td
(Sheet 61) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 71 71
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pipe.c  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(6200     fileclose\(*f0\);) 125.312 Tj
-5.2213 -37.9735 Td
(6201   }) 41.7707 Tj
-5.2213 -47.4668 Td
(6202   if\(*f1\){) 78.32 Tj
-5.2213 -56.9602 Td
(6203     \(*f1\)->type = FD_NONE;) 161.8613 Tj
-5.2213 -66.4535 Td
(6204     fileclose\(*f1\);) 125.312 Tj
-5.2213 -75.9469 Td
(6205   }) 41.7707 Tj
-5.2213 -85.4403 Td
(6206   return -1;) 88.7626 Tj
-5.2213 -94.9336 Td
(6207 }) 31.328 Tj
-5.2213 -104.427 Td
(6208 ) 26.1067 Tj
-5.2213 -113.9203 Td
(6209 void) 46.992 Tj
-5.2213 -123.4137 Td
(6210 pipeclose\(struct pipe *p, int writable\)) 229.7386 Tj
-5.2213 -132.9071 Td
(6211 {) 31.328 Tj
-5.2213 -142.4004 Td
(6212   acquire\(&p->lock\);) 130.5333 Tj
-5.2213 -151.8938 Td
(6213   if\(writable\){) 104.4266 Tj
-5.2213 -161.3871 Td
(6214     p->writeopen = 0;) 135.7546 Tj
-5.2213 -170.8805 Td
(6215     wakeup\(&p->readp\);) 140.976 Tj
-5.2213 -180.3739 Td
(6216   } else {) 78.32 Tj
-5.2213 -189.8672 Td
(6217     p->readopen = 0;) 130.5333 Tj
-5.2213 -199.3606 Td
(6218     wakeup\(&p->writep\);) 146.1973 Tj
-5.2213 -208.8539 Td
(6219   }) 41.7707 Tj
-5.2213 -218.3473 Td
(6220   release\(&p->lock\);) 130.5333 Tj
-5.2213 -227.8407 Td
(6221 ) 26.1067 Tj
-5.2213 -237.334 Td
(6222   if\(p->readopen == 0 && p->writeopen == 0\)) 250.6239 Tj
-5.2213 -246.8274 Td
(6223     kfree\(\(char*\)p, PAGE\);) 161.8613 Tj
-5.2213 -256.3207 Td
(6224 }) 31.328 Tj
-5.2213 -265.8141 Td
(6225 ) 26.1067 Tj
-5.2213 -275.3075 Td
(6226 int) 41.7707 Tj
-5.2213 -284.8008 Td
(6227 pipewrite\(struct pipe *p, char *addr, int n\)) 255.8453 Tj
-5.2213 -294.2942 Td
(6228 {) 31.328 Tj
-5.2213 -303.7875 Td
(6229   int i;) 67.8773 Tj
-5.2213 -313.2809 Td
(6230 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6231   acquire\(&p->lock\);) 130.5333 Tj
-5.2213 -332.2676 Td
(6232   for\(i = 0; i < n; i++\){) 156.64 Tj
-5.2213 -341.761 Td
(6233     while\(\(\(p->writep + 1\) % PIPESIZE\) == p->readp\){) 297.6159 Tj
-5.2213 -351.2543 Td
(6234       if\(p->readopen == 0 || cp->killed\){) 240.1813 Tj
-5.2213 -360.7477 Td
(6235         release\(&p->lock\);) 161.8613 Tj
-5.2213 -370.2411 Td
(6236         return -1;) 120.0906 Tj
-5.2213 -379.7344 Td
(6237       }) 62.656 Tj
-5.2213 -389.2278 Td
(6238       wakeup\(&p->readp\);) 151.4186 Tj
-5.2213 -398.7211 Td
(6239       sleep\(&p->writep, &p->lock\);) 203.6319 Tj
-5.2213 -408.2145 Td
(6240     }) 52.2133 Tj
-5.2213 -417.7079 Td
(6241     p->data[p->writep] = addr[i];) 198.4106 Tj
-5.2213 -427.2012 Td
(6242     p->writep = \(p->writep + 1\) % PIPESIZE;) 250.6239 Tj
-5.2213 -436.6946 Td
(6243   }) 41.7707 Tj
-5.2213 -446.1879 Td
(6244   wakeup\(&p->readp\);) 130.5333 Tj
-5.2213 -455.6813 Td
(6245   release\(&p->lock\);) 130.5333 Tj
-5.2213 -465.1747 Td
(6246   return i;) 83.5413 Tj
-5.2213 -474.668 Td
(6247 }) 31.328 Tj
-5.2213 -484.1614 Td
(6248 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6249 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 62) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pipe.c  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(6250 int) 41.7707 Tj
-5.2213 -37.9735 Td
(6251 piperead\(struct pipe *p, char *addr, int n\)) 250.6239 Tj
-5.2213 -47.4668 Td
(6252 {) 31.328 Tj
-5.2213 -56.9602 Td
(6253   int i;) 67.8773 Tj
-5.2213 -66.4535 Td
(6254 ) 26.1067 Tj
-5.2213 -75.9469 Td
(6255   acquire\(&p->lock\);) 130.5333 Tj
-5.2213 -85.4403 Td
(6256   while\(p->readp == p->writep && p->writeopen\){) 271.5093 Tj
-5.2213 -94.9336 Td
(6257     if\(cp->killed\){) 125.312 Tj
-5.2213 -104.427 Td
(6258       release\(&p->lock\);) 151.4186 Tj
-5.2213 -113.9203 Td
(6259       return -1;) 109.648 Tj
-5.2213 -123.4137 Td
(6260     }) 52.2133 Tj
-5.2213 -132.9071 Td
(6261     sleep\(&p->readp, &p->lock\);) 187.968 Tj
-5.2213 -142.4004 Td
(6262   }) 41.7707 Tj
-5.2213 -151.8938 Td
(6263   for\(i = 0; i < n; i++\){) 156.64 Tj
-5.2213 -161.3871 Td
(6264     if\(p->readp == p->writep\)) 177.5253 Tj
-5.2213 -170.8805 Td
(6265       break;) 88.7626 Tj
-5.2213 -180.3739 Td
(6266     addr[i] = p->data[p->readp];) 193.1893 Tj
-5.2213 -189.8672 Td
(6267     p->readp = \(p->readp + 1\) % PIPESIZE;) 240.1813 Tj
-5.2213 -199.3606 Td
(6268   }) 41.7707 Tj
-5.2213 -208.8539 Td
(6269   wakeup\(&p->writep\);) 135.7546 Tj
-5.2213 -218.3473 Td
(6270   release\(&p->lock\);) 130.5333 Tj
-5.2213 -227.8407 Td
(6271   return i;) 83.5413 Tj
-5.2213 -237.334 Td
(6272 }) 31.328 Tj
-5.2213 -246.8274 Td
(6273 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6274 ) 26.1067 Tj
-5.2213 -265.8141 Td
(6275 ) 26.1067 Tj
-5.2213 -275.3075 Td
(6276 ) 26.1067 Tj
-5.2213 -284.8008 Td
(6277 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6278 ) 26.1067 Tj
-5.2213 -303.7875 Td
(6279 ) 26.1067 Tj
-5.2213 -313.2809 Td
(6280 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6281 ) 26.1067 Tj
-5.2213 -332.2676 Td
(6282 ) 26.1067 Tj
-5.2213 -341.761 Td
(6283 ) 26.1067 Tj
-5.2213 -351.2543 Td
(6284 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6285 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6286 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6287 ) 26.1067 Tj
-5.2213 -389.2278 Td
(6288 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6289 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6290 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6291 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6292 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6293 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6294 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6295 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6296 ) 26.1067 Tj
-5.2213 -474.668 Td
(6297 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6298 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6299 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 62) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 72 72
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/string.c  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(6300 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(6301 ) 26.1067 Tj
-5.2213 -47.4668 Td
(6302 void*) 52.2133 Tj
-5.2213 -56.9602 Td
(6303 memcpy\(void *dst, const void *src, uint n\)) 245.4026 Tj
-5.2213 -66.4535 Td
(6304 {) 31.328 Tj
-5.2213 -75.9469 Td
(6305     const uchar *s1;) 130.5333 Tj
-5.2213 -85.4403 Td
(6306     uchar *s2;) 99.2053 Tj
-5.2213 -94.9336 Td
(6307 ) 26.1067 Tj
-5.2213 -104.427 Td
(6308     s1 = src;) 93.984 Tj
-5.2213 -113.9203 Td
(6309     s2 = dst;) 93.984 Tj
-5.2213 -123.4137 Td
(6310     while\(n-- > 0\){) 125.312 Tj
-5.2213 -132.9071 Td
(6311         *s2 = *s1;) 120.0906 Tj
-5.2213 -142.4004 Td
(6312         s1++;) 93.984 Tj
-5.2213 -151.8938 Td
(6313         s2++;) 93.984 Tj
-5.2213 -161.3871 Td
(6314     }) 52.2133 Tj
-5.2213 -170.8805 Td
(6315 ) 26.1067 Tj
-5.2213 -180.3739 Td
(6316     return 0;) 93.984 Tj
-5.2213 -189.8672 Td
(6317 }) 31.328 Tj
-5.2213 -199.3606 Td
(6318 ) 26.1067 Tj
-5.2213 -208.8539 Td
(6319 void*) 52.2133 Tj
-5.2213 -218.3473 Td
(6320 memset\(void *dst, int c, uint n\)) 193.1893 Tj
-5.2213 -227.8407 Td
(6321 {) 31.328 Tj
-5.2213 -237.334 Td
(6322   char *d;) 78.32 Tj
-5.2213 -246.8274 Td
(6323 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6324   d = \(char*\)dst;) 114.8693 Tj
-5.2213 -265.8141 Td
(6325   while\(n-- > 0\)) 109.648 Tj
-5.2213 -275.3075 Td
(6326     *d++ = c;) 93.984 Tj
-5.2213 -284.8008 Td
(6327 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6328   return dst;) 93.984 Tj
-5.2213 -303.7875 Td
(6329 }) 31.328 Tj
-5.2213 -313.2809 Td
(6330 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6331 int) 41.7707 Tj
-5.2213 -332.2676 Td
(6332 memcmp\(const void *v1, const void *v2, uint n\)) 266.2879 Tj
-5.2213 -341.761 Td
(6333 {) 31.328 Tj
-5.2213 -351.2543 Td
(6334   const uchar *s1, *s2;) 146.1973 Tj
-5.2213 -360.7477 Td
(6335 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6336   s1 = v1;) 78.32 Tj
-5.2213 -379.7344 Td
(6337   s2 = v2;) 78.32 Tj
-5.2213 -389.2278 Td
(6338   while\(n-- > 0\){) 114.8693 Tj
-5.2213 -398.7211 Td
(6339     if\(*s1 != *s2\)) 120.0906 Tj
-5.2213 -408.2145 Td
(6340       return *s1 - *s2;) 146.1973 Tj
-5.2213 -417.7079 Td
(6341     s1++, s2++;) 104.4266 Tj
-5.2213 -427.2012 Td
(6342   }) 41.7707 Tj
-5.2213 -436.6946 Td
(6343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6344   return 0;) 83.5413 Tj
-5.2213 -455.6813 Td
(6345 }) 31.328 Tj
-5.2213 -465.1747 Td
(6346 ) 26.1067 Tj
-5.2213 -474.668 Td
(6347 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6348 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6349 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 63) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/string.c  Page 2) 193.1893 Tj
-5.2213 -28.4801 Td
(6350 void*) 52.2133 Tj
-5.2213 -37.9735 Td
(6351 memmove\(void *dst, const void *src, uint n\)) 250.6239 Tj
-5.2213 -47.4668 Td
(6352 {) 31.328 Tj
-5.2213 -56.9602 Td
(6353   const char *s;) 109.648 Tj
-5.2213 -66.4535 Td
(6354   char *d;) 78.32 Tj
-5.2213 -75.9469 Td
(6355 ) 26.1067 Tj
-5.2213 -85.4403 Td
(6356   s = src;) 78.32 Tj
-5.2213 -94.9336 Td
(6357   d = dst;) 78.32 Tj
-5.2213 -104.427 Td
(6358   if\(s < d && s + n > d\){) 156.64 Tj
-5.2213 -113.9203 Td
(6359     s += n;) 83.5413 Tj
-5.2213 -123.4137 Td
(6360     d += n;) 83.5413 Tj
-5.2213 -132.9071 Td
(6361     while\(n-- > 0\)) 120.0906 Tj
-5.2213 -142.4004 Td
(6362       *--d = *--s;) 120.0906 Tj
-5.2213 -151.8938 Td
(6363   } else) 67.8773 Tj
-5.2213 -161.3871 Td
(6364     while\(n-- > 0\)) 120.0906 Tj
-5.2213 -170.8805 Td
(6365       *d++ = *s++;) 120.0906 Tj
-5.2213 -180.3739 Td
(6366 ) 26.1067 Tj
-5.2213 -189.8672 Td
(6367   return dst;) 93.984 Tj
-5.2213 -199.3606 Td
(6368 }) 31.328 Tj
-5.2213 -208.8539 Td
(6369 ) 26.1067 Tj
-5.2213 -218.3473 Td
(6370 int) 41.7707 Tj
-5.2213 -227.8407 Td
(6371 strncmp\(const char *p, const char *q, uint n\)) 261.0666 Tj
-5.2213 -237.334 Td
(6372 {) 31.328 Tj
-5.2213 -246.8274 Td
(6373   while\(n > 0 && *p && *p == *q\)) 193.1893 Tj
-5.2213 -256.3207 Td
(6374     n--, p++, q++;) 120.0906 Tj
-5.2213 -265.8141 Td
(6375   if\(n == 0\)) 88.7626 Tj
-5.2213 -275.3075 Td
(6376     return 0;) 93.984 Tj
-5.2213 -284.8008 Td
(6377   return \(uchar\)*p - \(uchar\)*q;) 187.968 Tj
-5.2213 -294.2942 Td
(6378 }) 31.328 Tj
-5.2213 -303.7875 Td
(6379 ) 26.1067 Tj
-5.2213 -313.2809 Td
(6380 char*) 52.2133 Tj
-5.2213 -322.7743 Td
(6381 strncpy\(char *s, const char *t, int n\)) 224.5173 Tj
-5.2213 -332.2676 Td
(6382 {) 31.328 Tj
-5.2213 -341.761 Td
(6383   char *os;) 83.5413 Tj
-5.2213 -351.2543 Td
(6384 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6385   os = s;) 73.0986 Tj
-5.2213 -370.2411 Td
(6386   while\(n-- > 0 && \(*s++ = *t++\) != 0\)) 224.5173 Tj
-5.2213 -379.7344 Td
(6387     ;) 52.2133 Tj
-5.2213 -389.2278 Td
(6388   while\(n-- > 0\)) 109.648 Tj
-5.2213 -398.7211 Td
(6389     *s++ = 0;) 93.984 Tj
-5.2213 -408.2145 Td
(6390   return os;) 88.7626 Tj
-5.2213 -417.7079 Td
(6391 }) 31.328 Tj
-5.2213 -427.2012 Td
(6392 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6393 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6394 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6395 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6396 ) 26.1067 Tj
-5.2213 -474.668 Td
(6397 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 63) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 73 73
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/string.c  Page 3) 193.1893 Tj
-5.2213 -28.4801 Td
(6400 // Like strncpy but guaranteed to NUL-terminate.) 276.7306 Tj
-5.2213 -37.9735 Td
(6401 char*) 52.2133 Tj
-5.2213 -47.4668 Td
(6402 safestrcpy\(char *s, const char *t, int n\)) 240.1813 Tj
-5.2213 -56.9602 Td
(6403 {) 31.328 Tj
-5.2213 -66.4535 Td
(6404   char *os;) 83.5413 Tj
-5.2213 -75.9469 Td
(6405 ) 26.1067 Tj
-5.2213 -85.4403 Td
(6406   os = s;) 73.0986 Tj
-5.2213 -94.9336 Td
(6407   if\(n <= 0\)) 88.7626 Tj
-5.2213 -104.427 Td
(6408     return os;) 99.2053 Tj
-5.2213 -113.9203 Td
(6409   while\(--n > 0 && \(*s++ = *t++\) != 0\)) 224.5173 Tj
-5.2213 -123.4137 Td
(6410     ;) 52.2133 Tj
-5.2213 -132.9071 Td
(6411   *s = 0;) 73.0986 Tj
-5.2213 -142.4004 Td
(6412   return os;) 88.7626 Tj
-5.2213 -151.8938 Td
(6413 }) 31.328 Tj
-5.2213 -161.3871 Td
(6414 ) 26.1067 Tj
-5.2213 -170.8805 Td
(6415 int) 41.7707 Tj
-5.2213 -180.3739 Td
(6416 strlen\(const char *s\)) 135.7546 Tj
-5.2213 -189.8672 Td
(6417 {) 31.328 Tj
-5.2213 -199.3606 Td
(6418   int n;) 67.8773 Tj
-5.2213 -208.8539 Td
(6419 ) 26.1067 Tj
-5.2213 -218.3473 Td
(6420   for\(n = 0; s[n]; n++\)) 146.1973 Tj
-5.2213 -227.8407 Td
(6421     ;) 52.2133 Tj
-5.2213 -237.334 Td
(6422   return n;) 83.5413 Tj
-5.2213 -246.8274 Td
(6423 }) 31.328 Tj
-5.2213 -256.3207 Td
(6424 ) 26.1067 Tj
-5.2213 -265.8141 Td
(6425 ) 26.1067 Tj
-5.2213 -275.3075 Td
(6426 ) 26.1067 Tj
-5.2213 -284.8008 Td
(6427 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6428 ) 26.1067 Tj
-5.2213 -303.7875 Td
(6429 ) 26.1067 Tj
-5.2213 -313.2809 Td
(6430 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6431 ) 26.1067 Tj
-5.2213 -332.2676 Td
(6432 ) 26.1067 Tj
-5.2213 -341.761 Td
(6433 ) 26.1067 Tj
-5.2213 -351.2543 Td
(6434 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6435 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6436 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6437 ) 26.1067 Tj
-5.2213 -389.2278 Td
(6438 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6439 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6440 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6441 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6442 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6443 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6444 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6445 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6446 ) 26.1067 Tj
-5.2213 -474.668 Td
(6447 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 64) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mp.h  Page 1) 172.304 Tj
-5.2213 -28.4801 Td
(6450 // See MultiProcessor Specification Version 1.[14]) 287.1733 Tj
-5.2213 -37.9735 Td
(6451 ) 26.1067 Tj
-5.2213 -47.4668 Td
(6452 struct mp {             // floating pointer) 250.6239 Tj
-5.2213 -56.9602 Td
(6453   uchar signature[4];           // "_MP_") 240.1813 Tj
-5.2213 -66.4535 Td
(6454   void *physaddr;               // phys addr of MP config \
table) 355.0506 Tj
-5.2213 -75.9469 Td
(6455   uchar length;                 // 1) 214.0746 Tj
-5.2213 -85.4403 Td
(6456   uchar specrev;                // [14]) 229.7386 Tj
-5.2213 -94.9336 Td
(6457   uchar checksum;               // all bytes must add up t\
o 0) 344.6079 Tj
-5.2213 -104.427 Td
(6458   uchar type;                   // MP system config type) 318.5013 Tj
-5.2213 -113.9203 Td
(6459   uchar imcrp;) 99.2053 Tj
-5.2213 -123.4137 Td
(6460   uchar reserved[3];) 130.5333 Tj
-5.2213 -132.9071 Td
(6461 };) 36.5493 Tj
-5.2213 -142.4004 Td
(6462 ) 26.1067 Tj
-5.2213 -151.8938 Td
(6463 struct mpconf {         // configuration table header) 302.8373 Tj
-5.2213 -161.3871 Td
(6464   uchar signature[4];           // "PCMP") 240.1813 Tj
-5.2213 -170.8805 Td
(6465   ushort length;                // total table length) 302.8373 Tj
-5.2213 -180.3739 Td
(6466   uchar version;                // [14]) 229.7386 Tj
-5.2213 -189.8672 Td
(6467   uchar checksum;               // all bytes must add up t\
o 0) 344.6079 Tj
-5.2213 -199.3606 Td
(6468   uchar product[20];            // product id) 261.0666 Tj
-5.2213 -208.8539 Td
(6469   uint *oemtable;               // OEM table pointer) 297.6159 Tj
-5.2213 -218.3473 Td
(6470   ushort oemlength;             // OEM table length) 292.3946 Tj
-5.2213 -227.8407 Td
(6471   ushort entry;                 // entry count) 266.2879 Tj
-5.2213 -237.334 Td
(6472   uint *lapicaddr;              // address of local APIC) 318.5013 Tj
-5.2213 -246.8274 Td
(6473   ushort xlength;               // extended table length) 318.5013 Tj
-5.2213 -256.3207 Td
(6474   uchar xchecksum;              // extended table checksum) 328.9439 Tj
-5.2213 -265.8141 Td
(6475   uchar reserved;) 114.8693 Tj
-5.2213 -275.3075 Td
(6476 };) 36.5493 Tj
-5.2213 -284.8008 Td
(6477 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6478 struct mpproc {         // processor table entry) 276.7306 Tj
-5.2213 -303.7875 Td
(6479   uchar type;                   // entry type \(0\)) 281.9519 Tj
-5.2213 -313.2809 Td
(6480   uchar apicid;                 // local APIC id) 276.7306 Tj
-5.2213 -322.7743 Td
(6481   uchar version;                // local APIC verison) 302.8373 Tj
-5.2213 -332.2676 Td
(6482   uchar flags;                  // CPU flags) 255.8453 Tj
-5.2213 -341.761 Td
(6483     #define MPBOOT 0x02           // This proc is the boot\
strap processor.) 412.4852 Tj
-5.2213 -351.2543 Td
(6484   uchar signature[4];           // CPU signature) 276.7306 Tj
-5.2213 -360.7477 Td
(6485   uint feature;                 // feature flags from CPUI\
D instruction) 396.8212 Tj
-5.2213 -370.2411 Td
(6486   uchar reserved[8];) 130.5333 Tj
-5.2213 -379.7344 Td
(6487 };) 36.5493 Tj
-5.2213 -389.2278 Td
(6488 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6489 struct mpioapic {       // I/O APIC table entry) 271.5093 Tj
-5.2213 -408.2145 Td
(6490   uchar type;                   // entry type \(2\)) 281.9519 Tj
-5.2213 -417.7079 Td
(6491   uchar apicno;                 // I/O APIC id) 266.2879 Tj
-5.2213 -427.2012 Td
(6492   uchar version;                // I/O APIC version) 292.3946 Tj
-5.2213 -436.6946 Td
(6493   uchar flags;                  // I/O APIC flags) 281.9519 Tj
-5.2213 -446.1879 Td
(6494   uint *addr;                  // I/O APIC address) 287.1733 Tj
-5.2213 -455.6813 Td
(6495 };) 36.5493 Tj
-5.2213 -465.1747 Td
(6496 ) 26.1067 Tj
-5.2213 -474.668 Td
(6497 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6498 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6499 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 64) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 74 74
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mp.h  Page 2) 172.304 Tj
-5.2213 -28.4801 Td
(6500 // Table entry types) 130.5333 Tj
-5.2213 -37.9735 Td
(6501 #define MPPROC    0x00  // One per processor) 255.8453 Tj
-5.2213 -47.4668 Td
(6502 #define MPBUS     0x01  // One per bus) 224.5173 Tj
-5.2213 -56.9602 Td
(6503 #define MPIOAPIC  0x02  // One per I/O APIC) 250.6239 Tj
-5.2213 -66.4535 Td
(6504 #define MPIOINTR  0x03  // One per bus interrupt source) 313.2799 Tj
-5.2213 -75.9469 Td
(6505 #define MPLINTR   0x04  // One per system interrupt source) 328.9439 Tj
-5.2213 -85.4403 Td
(6506 ) 26.1067 Tj
-5.2213 -94.9336 Td
(6507 ) 26.1067 Tj
-5.2213 -104.427 Td
(6508 ) 26.1067 Tj
-5.2213 -113.9203 Td
(6509 ) 26.1067 Tj
-5.2213 -123.4137 Td
(6510 ) 26.1067 Tj
-5.2213 -132.9071 Td
(6511 ) 26.1067 Tj
-5.2213 -142.4004 Td
(6512 ) 26.1067 Tj
-5.2213 -151.8938 Td
(6513 ) 26.1067 Tj
-5.2213 -161.3871 Td
(6514 ) 26.1067 Tj
-5.2213 -170.8805 Td
(6515 ) 26.1067 Tj
-5.2213 -180.3739 Td
(6516 ) 26.1067 Tj
-5.2213 -189.8672 Td
(6517 ) 26.1067 Tj
-5.2213 -199.3606 Td
(6518 ) 26.1067 Tj
-5.2213 -208.8539 Td
(6519 ) 26.1067 Tj
-5.2213 -218.3473 Td
(6520 ) 26.1067 Tj
-5.2213 -227.8407 Td
(6521 ) 26.1067 Tj
-5.2213 -237.334 Td
(6522 ) 26.1067 Tj
-5.2213 -246.8274 Td
(6523 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6524 ) 26.1067 Tj
-5.2213 -265.8141 Td
(6525 ) 26.1067 Tj
-5.2213 -275.3075 Td
(6526 ) 26.1067 Tj
-5.2213 -284.8008 Td
(6527 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6528 ) 26.1067 Tj
-5.2213 -303.7875 Td
(6529 ) 26.1067 Tj
-5.2213 -313.2809 Td
(6530 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6531 ) 26.1067 Tj
-5.2213 -332.2676 Td
(6532 ) 26.1067 Tj
-5.2213 -341.761 Td
(6533 ) 26.1067 Tj
-5.2213 -351.2543 Td
(6534 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6535 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6536 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6537 ) 26.1067 Tj
-5.2213 -389.2278 Td
(6538 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6539 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6540 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6541 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6542 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6543 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6544 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6545 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6546 ) 26.1067 Tj
-5.2213 -474.668 Td
(6547 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6548 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6549 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 65) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mp.c  Page 1) 172.304 Tj
-5.2213 -28.4801 Td
(6550 // Multiprocessor bootstrap.) 172.304 Tj
-5.2213 -37.9735 Td
(6551 // Search memory for MP description structures.) 271.5093 Tj
-5.2213 -47.4668 Td
(6552 // http://developer.intel.com/design/pentium/datashts/2420\
1606.pdf) 370.7146 Tj
-5.2213 -56.9602 Td
(6553 ) 26.1067 Tj
-5.2213 -66.4535 Td
(6554 #include "types.h") 120.0906 Tj
-5.2213 -75.9469 Td
(6555 #include "defs.h") 114.8693 Tj
-5.2213 -85.4403 Td
(6556 #include "param.h") 120.0906 Tj
-5.2213 -94.9336 Td
(6557 #include "mp.h") 104.4266 Tj
-5.2213 -104.427 Td
(6558 #include "x86.h") 109.648 Tj
-5.2213 -113.9203 Td
(6559 #include "mmu.h") 109.648 Tj
-5.2213 -123.4137 Td
(6560 #include "proc.h") 114.8693 Tj
-5.2213 -132.9071 Td
(6561 ) 26.1067 Tj
-5.2213 -142.4004 Td
(6562 struct cpu cpus[NCPU];) 140.976 Tj
-5.2213 -151.8938 Td
(6563 static struct cpu *bcpu;) 151.4186 Tj
-5.2213 -161.3871 Td
(6564 int ismp;) 73.0986 Tj
-5.2213 -170.8805 Td
(6565 int ncpu;) 73.0986 Tj
-5.2213 -180.3739 Td
(6566 uchar ioapic_id;) 109.648 Tj
-5.2213 -189.8672 Td
(6567 ) 26.1067 Tj
-5.2213 -199.3606 Td
(6568 int) 41.7707 Tj
-5.2213 -208.8539 Td
(6569 mp_bcpu\(void\)) 93.984 Tj
-5.2213 -218.3473 Td
(6570 {) 31.328 Tj
-5.2213 -227.8407 Td
(6571   return bcpu-cpus;) 125.312 Tj
-5.2213 -237.334 Td
(6572 }) 31.328 Tj
-5.2213 -246.8274 Td
(6573 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6574 static uchar) 88.7626 Tj
-5.2213 -265.8141 Td
(6575 sum\(uchar *addr, int len\)) 156.64 Tj
-5.2213 -275.3075 Td
(6576 {) 31.328 Tj
-5.2213 -284.8008 Td
(6577   int i, sum;) 93.984 Tj
-5.2213 -294.2942 Td
(6578 ) 26.1067 Tj
-5.2213 -303.7875 Td
(6579   sum = 0;) 78.32 Tj
-5.2213 -313.2809 Td
(6580   for\(i=0; i<len; i++\)) 140.976 Tj
-5.2213 -322.7743 Td
(6581     sum += addr[i];) 125.312 Tj
-5.2213 -332.2676 Td
(6582   return sum;) 93.984 Tj
-5.2213 -341.761 Td
(6583 }) 31.328 Tj
-5.2213 -351.2543 Td
(6584 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6585 // Look for an MP structure in the len bytes at addr.) 302.8373 Tj
-5.2213 -370.2411 Td
(6586 static struct mp*) 114.8693 Tj
-5.2213 -379.7344 Td
(6587 mp_search1\(uchar *addr, int len\)) 193.1893 Tj
-5.2213 -389.2278 Td
(6588 {) 31.328 Tj
-5.2213 -398.7211 Td
(6589   uchar *e, *p;) 104.4266 Tj
-5.2213 -408.2145 Td
(6590 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6591   e = addr+len;) 104.4266 Tj
-5.2213 -427.2012 Td
(6592   for\(p = addr; p < e; p += sizeof\(struct mp\)\)) 266.2879 Tj
-5.2213 -436.6946 Td
(6593     if\(memcmp\(p, "_MP_", 4\) == 0 && sum\(p, sizeof\(str\
uct mp\)\) == 0\)) 375.9359 Tj
-5.2213 -446.1879 Td
(6594       return \(struct mp*\)p;) 167.0826 Tj
-5.2213 -455.6813 Td
(6595   return 0;) 83.5413 Tj
-5.2213 -465.1747 Td
(6596 }) 31.328 Tj
-5.2213 -474.668 Td
(6597 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6598 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6599 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 65) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 75 75
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mp.c  Page 2) 172.304 Tj
-5.2213 -28.4801 Td
(6600 // Search for the MP Floating Pointer Structure, which acc\
ording to the) 396.8212 Tj
-5.2213 -37.9735 Td
(6601 // spec is in one of the following three locations:) 292.3946 Tj
-5.2213 -47.4668 Td
(6602 // 1\) in the first KB of the EBDA;) 203.6319 Tj
-5.2213 -56.9602 Td
(6603 // 2\) in the last KB of system base memory;) 250.6239 Tj
-5.2213 -66.4535 Td
(6604 // 3\) in the BIOS ROM between 0xE0000 and 0xFFFFF.) 287.1733 Tj
-5.2213 -75.9469 Td
(6605 static struct mp*) 114.8693 Tj
-5.2213 -85.4403 Td
(6606 mp_search\(void\)) 104.4266 Tj
-5.2213 -94.9336 Td
(6607 {) 31.328 Tj
-5.2213 -104.427 Td
(6608   uchar *bda;) 93.984 Tj
-5.2213 -113.9203 Td
(6609   uint p;) 73.0986 Tj
-5.2213 -123.4137 Td
(6610   struct mp *mp;) 109.648 Tj
-5.2213 -132.9071 Td
(6611 ) 26.1067 Tj
-5.2213 -142.4004 Td
(6612   bda = \(uchar*\)0x400;) 140.976 Tj
-5.2213 -151.8938 Td
(6613   if\(\(p = \(bda[0x0F]<<8\)|bda[0x0E]\)\){) 219.2959 Tj
-5.2213 -161.3871 Td
(6614     if\(\(mp = mp_search1\(\(uchar*\)p, 1024\)\)\)) 245.4026 Tj
-5.2213 -170.8805 Td
(6615       return mp;) 109.648 Tj
-5.2213 -180.3739 Td
(6616   } else {) 78.32 Tj
-5.2213 -189.8672 Td
(6617     p = \(\(bda[0x14]<<8\)|bda[0x13]\)*1024;) 234.9599 Tj
-5.2213 -199.3606 Td
(6618     if\(\(mp = mp_search1\(\(uchar*\)p-1024, 1024\)\)\)) 271.5093 Tj
-5.2213 -208.8539 Td
(6619       return mp;) 109.648 Tj
-5.2213 -218.3473 Td
(6620   }) 41.7707 Tj
-5.2213 -227.8407 Td
(6621   return mp_search1\(\(uchar*\)0xF0000, 0x10000\);) 266.2879 Tj
-5.2213 -237.334 Td
(6622 }) 31.328 Tj
-5.2213 -246.8274 Td
(6623 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6624 // Search for an MP configuration table.  For now,) 287.1733 Tj
-5.2213 -265.8141 Td
(6625 // don't accept the default configurations \(physaddr == 0\
\).) 334.1652 Tj
-5.2213 -275.3075 Td
(6626 // Check for correct signature, calculate the checksum and\
,) 334.1652 Tj
-5.2213 -284.8008 Td
(6627 // if correct, check the version.) 198.4106 Tj
-5.2213 -294.2942 Td
(6628 // To do: check extended table checksum.) 234.9599 Tj
-5.2213 -303.7875 Td
(6629 static struct mpconf*) 135.7546 Tj
-5.2213 -313.2809 Td
(6630 mp_config\(struct mp **pmp\)) 161.8613 Tj
-5.2213 -322.7743 Td
(6631 {) 31.328 Tj
-5.2213 -332.2676 Td
(6632   struct mpconf *conf;) 140.976 Tj
-5.2213 -341.761 Td
(6633   struct mp *mp;) 109.648 Tj
-5.2213 -351.2543 Td
(6634 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6635   if\(\(mp = mp_search\(\)\) == 0 || mp->physaddr == 0\)) 287.1733 Tj
-5.2213 -370.2411 Td
(6636     return 0;) 93.984 Tj
-5.2213 -379.7344 Td
(6637   conf = \(struct mpconf*\)mp->physaddr;) 224.5173 Tj
-5.2213 -389.2278 Td
(6638   if\(memcmp\(conf, "PCMP", 4\) != 0\)) 203.6319 Tj
-5.2213 -398.7211 Td
(6639     return 0;) 93.984 Tj
-5.2213 -408.2145 Td
(6640   if\(conf->version != 1 && conf->version != 4\)) 266.2879 Tj
-5.2213 -417.7079 Td
(6641     return 0;) 93.984 Tj
-5.2213 -427.2012 Td
(6642   if\(sum\(\(uchar*\)conf, conf->length\) != 0\)) 245.4026 Tj
-5.2213 -436.6946 Td
(6643     return 0;) 93.984 Tj
-5.2213 -446.1879 Td
(6644   *pmp = mp;) 88.7626 Tj
-5.2213 -455.6813 Td
(6645   return conf;) 99.2053 Tj
-5.2213 -465.1747 Td
(6646 }) 31.328 Tj
-5.2213 -474.668 Td
(6647 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6648 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6649 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 66) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/mp.c  Page 3) 172.304 Tj
-5.2213 -28.4801 Td
(6650 void) 46.992 Tj
-5.2213 -37.9735 Td
(6651 mp_init\(void\)) 93.984 Tj
-5.2213 -47.4668 Td
(6652 {) 31.328 Tj
-5.2213 -56.9602 Td
(6653   uchar *p, *e;) 104.4266 Tj
-5.2213 -66.4535 Td
(6654   struct mp *mp;) 109.648 Tj
-5.2213 -75.9469 Td
(6655   struct mpconf *conf;) 140.976 Tj
-5.2213 -85.4403 Td
(6656   struct mpproc *proc;) 140.976 Tj
-5.2213 -94.9336 Td
(6657   struct mpioapic *ioapic;) 161.8613 Tj
-5.2213 -104.427 Td
(6658 ) 26.1067 Tj
-5.2213 -113.9203 Td
(6659   bcpu = &cpus[ncpu];) 135.7546 Tj
-5.2213 -123.4137 Td
(6660   if\(\(conf = mp_config\(&mp\)\) == 0\)) 203.6319 Tj
-5.2213 -132.9071 Td
(6661     return;) 83.5413 Tj
-5.2213 -142.4004 Td
(6662 ) 26.1067 Tj
-5.2213 -151.8938 Td
(6663   ismp = 1;) 83.5413 Tj
-5.2213 -161.3871 Td
(6664   lapic = \(uint*\)conf->lapicaddr;) 198.4106 Tj
-5.2213 -170.8805 Td
(6665 ) 26.1067 Tj
-5.2213 -180.3739 Td
(6666   for\(p=\(uchar*\)\(conf+1\), e=\(uchar*\)conf+conf->leng\
th; p<e; \){) 349.8292 Tj
-5.2213 -189.8672 Td
(6667     switch\(*p\){) 104.4266 Tj
-5.2213 -199.3606 Td
(6668     case MPPROC:) 109.648 Tj
-5.2213 -208.8539 Td
(6669       proc = \(struct mpproc*\)p;) 187.968 Tj
-5.2213 -218.3473 Td
(6670       cpus[ncpu].apicid = proc->apicid;) 229.7386 Tj
-5.2213 -227.8407 Td
(6671       if\(proc->flags & MPBOOT\)) 182.7466 Tj
-5.2213 -237.334 Td
(6672         bcpu = &cpus[ncpu];) 167.0826 Tj
-5.2213 -246.8274 Td
(6673       ncpu++;) 93.984 Tj
-5.2213 -256.3207 Td
(6674       p += sizeof\(struct mpproc\);) 198.4106 Tj
-5.2213 -265.8141 Td
(6675       continue;) 104.4266 Tj
-5.2213 -275.3075 Td
(6676     case MPIOAPIC:) 120.0906 Tj
-5.2213 -284.8008 Td
(6677       ioapic = \(struct mpioapic*\)p;) 208.8533 Tj
-5.2213 -294.2942 Td
(6678       ioapic_id = ioapic->apicno;) 198.4106 Tj
-5.2213 -303.7875 Td
(6679       p += sizeof\(struct mpioapic\);) 208.8533 Tj
-5.2213 -313.2809 Td
(6680       continue;) 104.4266 Tj
-5.2213 -322.7743 Td
(6681     case MPBUS:) 104.4266 Tj
-5.2213 -332.2676 Td
(6682     case MPIOINTR:) 120.0906 Tj
-5.2213 -341.761 Td
(6683     case MPLINTR:) 114.8693 Tj
-5.2213 -351.2543 Td
(6684       p += 8;) 93.984 Tj
-5.2213 -360.7477 Td
(6685       continue;) 104.4266 Tj
-5.2213 -370.2411 Td
(6686     default:) 88.7626 Tj
-5.2213 -379.7344 Td
(6687       cprintf\("mp_init: unknown config type %x\\n", *p\);) 313.2799 Tj
-5.2213 -389.2278 Td
(6688       panic\("mp_init"\);) 146.1973 Tj
-5.2213 -398.7211 Td
(6689     }) 52.2133 Tj
-5.2213 -408.2145 Td
(6690   }) 41.7707 Tj
-5.2213 -417.7079 Td
(6691 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6692   if\(mp->imcrp\){) 109.648 Tj
-5.2213 -436.6946 Td
(6693     // Bochs doesn't support IMCR, so this doesn't run on \
Bochs.) 360.2719 Tj
-5.2213 -446.1879 Td
(6694     // But it would on real hardware.) 219.2959 Tj
-5.2213 -455.6813 Td
(6695     outb\(0x22, 0x70\);   // Select IMCR) 224.5173 Tj
-5.2213 -465.1747 Td
(6696     outb\(0x23, inb\(0x23\) | 1\);  // Mask external inter\
rupts.) 339.3866 Tj
-5.2213 -474.668 Td
(6697   }) 41.7707 Tj
-5.2213 -484.1614 Td
(6698 }) 31.328 Tj
-5.2213 -493.6547 Td
(6699 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 66) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 76 76
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/lapic.c  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(6700 // The local APIC manages internal \(non-I/O\) interrupts.) 318.5013 Tj
-5.2213 -37.9735 Td
(6701 // See Chapter 8 & Appendix C of Intel processor manual vo\
lume 3.) 365.4932 Tj
-5.2213 -47.4668 Td
(6702 ) 26.1067 Tj
-5.2213 -56.9602 Td
(6703 #include "types.h") 120.0906 Tj
-5.2213 -66.4535 Td
(6704 #include "traps.h") 120.0906 Tj
-5.2213 -75.9469 Td
(6705 ) 26.1067 Tj
-5.2213 -85.4403 Td
(6706 // Local APIC registers, divided by 4 for use as uint[] in\
dices.) 360.2719 Tj
-5.2213 -94.9336 Td
(6707 #define ID      \(0x0020/4\)   // ID) 203.6319 Tj
-5.2213 -104.427 Td
(6708 #define VER     \(0x0030/4\)   // Version) 229.7386 Tj
-5.2213 -113.9203 Td
(6709 #define TPR     \(0x0080/4\)   // Task Priority) 261.0666 Tj
-5.2213 -123.4137 Td
(6710 #define EOI     \(0x00B0/4\)   // EOI) 208.8533 Tj
-5.2213 -132.9071 Td
(6711 #define SVR     \(0x00F0/4\)   // Spurious Interrupt Vecto\
r) 323.7226 Tj
-5.2213 -142.4004 Td
(6712   #define ENABLE     0x00000100   // Unit Enable) 276.7306 Tj
-5.2213 -151.8938 Td
(6713 #define ESR     \(0x0280/4\)   // Error Status) 255.8453 Tj
-5.2213 -161.3871 Td
(6714 #define ICRLO   \(0x0300/4\)   // Interrupt Command) 281.9519 Tj
-5.2213 -170.8805 Td
(6715   #define INIT       0x00000500   // INIT/RESET) 271.5093 Tj
-5.2213 -180.3739 Td
(6716   #define STARTUP    0x00000600   // Startup IPI) 276.7306 Tj
-5.2213 -189.8672 Td
(6717   #define DELIVS     0x00001000   // Delivery status) 297.6159 Tj
-5.2213 -199.3606 Td
(6718   #define ASSERT     0x00004000   // Assert interrupt \(vs\
 deassert\)) 375.9359 Tj
-5.2213 -208.8539 Td
(6719   #define LEVEL      0x00008000   // Level triggered) 297.6159 Tj
-5.2213 -218.3473 Td
(6720   #define BCAST      0x00080000   // Send to all APICs, in\
cluding self.) 396.8212 Tj
-5.2213 -227.8407 Td
(6721 #define ICRHI   \(0x0310/4\)   // Interrupt Command [63:32\
]) 323.7226 Tj
-5.2213 -237.334 Td
(6722 #define TIMER   \(0x0320/4\)   // Local Vector Table 0 \(T\
IMER\)) 339.3866 Tj
-5.2213 -246.8274 Td
(6723   #define X1         0x0000000B   // divide counts by 1) 313.2799 Tj
-5.2213 -256.3207 Td
(6724   #define PERIODIC   0x00020000   // Periodic) 261.0666 Tj
-5.2213 -265.8141 Td
(6725 #define PCINT   \(0x0340/4\)   // Performance Counter LVT) 313.2799 Tj
-5.2213 -275.3075 Td
(6726 #define LINT0   \(0x0350/4\)   // Local Vector Table 1 \(L\
INT0\)) 339.3866 Tj
-5.2213 -284.8008 Td
(6727 #define LINT1   \(0x0360/4\)   // Local Vector Table 2 \(L\
INT1\)) 339.3866 Tj
-5.2213 -294.2942 Td
(6728 #define ERROR   \(0x0370/4\)   // Local Vector Table 3 \(E\
RROR\)) 339.3866 Tj
-5.2213 -303.7875 Td
(6729   #define MASKED     0x00010000   // Interrupt masked) 302.8373 Tj
-5.2213 -313.2809 Td
(6730 #define TICR    \(0x0380/4\)   // Timer Initial Count) 292.3946 Tj
-5.2213 -322.7743 Td
(6731 #define TCCR    \(0x0390/4\)   // Timer Current Count) 292.3946 Tj
-5.2213 -332.2676 Td
(6732 #define TDCR    \(0x03E0/4\)   // Timer Divide Configurati\
on) 328.9439 Tj
-5.2213 -341.761 Td
(6733 ) 26.1067 Tj
-5.2213 -351.2543 Td
(6734 volatile uint *lapic;  // Initialized in mp.c) 261.0666 Tj
-5.2213 -360.7477 Td
(6735 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6736 void) 46.992 Tj
-5.2213 -379.7344 Td
(6737 lapic_init\(int c\)) 114.8693 Tj
-5.2213 -389.2278 Td
(6738 {) 31.328 Tj
-5.2213 -398.7211 Td
(6739   if\(!lapic\)) 88.7626 Tj
-5.2213 -408.2145 Td
(6740     return;) 83.5413 Tj
-5.2213 -417.7079 Td
(6741 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6742   // Enable local APIC; set spurious interrupt vector.) 308.0586 Tj
-5.2213 -436.6946 Td
(6743   lapic[SVR] = ENABLE | \(IRQ_OFFSET+IRQ_SPURIOUS\);) 287.1733 Tj
-5.2213 -446.1879 Td
(6744 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6745   // The timer repeatedly counts down at bus frequency) 308.0586 Tj
-5.2213 -465.1747 Td
(6746   // from lapic[TICR] and then issues an interrupt.) 292.3946 Tj
-5.2213 -474.668 Td
(6747   // Lapic[TCCR] is the current counter value.) 266.2879 Tj
-5.2213 -484.1614 Td
(6748   // If xv6 cared more about precise timekeeping, the) 302.8373 Tj
-5.2213 -493.6547 Td
(6749   // values of TICR and TCCR would be calibrated using) 308.0586 Tj
-5.2213 -522.1348 Td
(Sheet 67) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/lapic.c  Page 2) 187.968 Tj
-5.2213 -28.4801 Td
(6750   // an external time source.) 177.5253 Tj
-5.2213 -37.9735 Td
(6751   lapic[TDCR] = X1;) 125.312 Tj
-5.2213 -47.4668 Td
(6752   lapic[TICR] = 10000000;) 156.64 Tj
-5.2213 -56.9602 Td
(6753   lapic[TCCR] = 10000000;) 156.64 Tj
-5.2213 -66.4535 Td
(6754   lapic[TIMER] = PERIODIC | \(IRQ_OFFSET + IRQ_TIMER\);) 302.8373 Tj
-5.2213 -75.9469 Td
(6755 ) 26.1067 Tj
-5.2213 -85.4403 Td
(6756   // Disable logical interrupt lines.) 219.2959 Tj
-5.2213 -94.9336 Td
(6757   lapic[LINT0] = MASKED;) 151.4186 Tj
-5.2213 -104.427 Td
(6758   lapic[LINT1] = MASKED;) 151.4186 Tj
-5.2213 -113.9203 Td
(6759 ) 26.1067 Tj
-5.2213 -123.4137 Td
(6760   // Disable performance counter overflow interrupts) 297.6159 Tj
-5.2213 -132.9071 Td
(6761   // on machines that provide that interrupt entry.) 292.3946 Tj
-5.2213 -142.4004 Td
(6762   if\(\(\(lapic[VER]>>16\) & 0xFF\) >= 4\)) 214.0746 Tj
-5.2213 -151.8938 Td
(6763     lapic[PCINT] = MASKED;) 161.8613 Tj
-5.2213 -161.3871 Td
(6764 ) 26.1067 Tj
-5.2213 -170.8805 Td
(6765   // Map error interrupt to IRQ_ERROR.) 224.5173 Tj
-5.2213 -180.3739 Td
(6766   lapic[ERROR] = IRQ_OFFSET+IRQ_ERROR;) 224.5173 Tj
-5.2213 -189.8672 Td
(6767 ) 26.1067 Tj
-5.2213 -199.3606 Td
(6768   // Clear error status register \(requires back-to-back w\
rites\).) 360.2719 Tj
-5.2213 -208.8539 Td
(6769   lapic[ESR] = 0;) 114.8693 Tj
-5.2213 -218.3473 Td
(6770   lapic[ESR] = 0;) 114.8693 Tj
-5.2213 -227.8407 Td
(6771 ) 26.1067 Tj
-5.2213 -237.334 Td
(6772   // Ack any outstanding interrupts.) 214.0746 Tj
-5.2213 -246.8274 Td
(6773   lapic[EOI] = 0;) 114.8693 Tj
-5.2213 -256.3207 Td
(6774 ) 26.1067 Tj
-5.2213 -265.8141 Td
(6775   // Send an Init Level De-Assert to synchronise arbitrati\
on ID's.) 370.7146 Tj
-5.2213 -275.3075 Td
(6776   lapic[ICRHI] = 0;) 125.312 Tj
-5.2213 -284.8008 Td
(6777   lapic[ICRLO] = BCAST | INIT | LEVEL;) 224.5173 Tj
-5.2213 -294.2942 Td
(6778   while\(lapic[ICRLO] & DELIVS\)) 182.7466 Tj
-5.2213 -303.7875 Td
(6779     ;) 52.2133 Tj
-5.2213 -313.2809 Td
(6780 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6781   // Enable interrupts on the APIC \(but not on the proces\
sor\).) 349.8292 Tj
-5.2213 -332.2676 Td
(6782   lapic[TPR] = 0;) 114.8693 Tj
-5.2213 -341.761 Td
(6783 }) 31.328 Tj
-5.2213 -351.2543 Td
(6784 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6785 int) 41.7707 Tj
-5.2213 -370.2411 Td
(6786 cpu\(void\)) 73.0986 Tj
-5.2213 -379.7344 Td
(6787 {) 31.328 Tj
-5.2213 -389.2278 Td
(6788   if\(lapic\)) 83.5413 Tj
-5.2213 -398.7211 Td
(6789     return lapic[ID]>>24;) 156.64 Tj
-5.2213 -408.2145 Td
(6790   return 0;) 83.5413 Tj
-5.2213 -417.7079 Td
(6791 }) 31.328 Tj
-5.2213 -427.2012 Td
(6792 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6793 // Acknowledge interrupt.) 156.64 Tj
-5.2213 -446.1879 Td
(6794 void) 46.992 Tj
-5.2213 -455.6813 Td
(6795 lapic_eoi\(void\)) 104.4266 Tj
-5.2213 -465.1747 Td
(6796 {) 31.328 Tj
-5.2213 -474.668 Td
(6797   if\(lapic\)) 83.5413 Tj
-5.2213 -484.1614 Td
(6798     lapic[EOI] = 0;) 125.312 Tj
-5.2213 -493.6547 Td
(6799 }) 31.328 Tj
-5.2213 -522.1348 Td
(Sheet 67) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 77 77
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/lapic.c  Page 3) 187.968 Tj
-5.2213 -28.4801 Td
(6800 // Spin for a given number of microseconds.) 250.6239 Tj
-5.2213 -37.9735 Td
(6801 // On real hardware would want to tune this dynamically.) 318.5013 Tj
-5.2213 -47.4668 Td
(6802 static void) 83.5413 Tj
-5.2213 -56.9602 Td
(6803 microdelay\(int us\)) 120.0906 Tj
-5.2213 -66.4535 Td
(6804 {) 31.328 Tj
-5.2213 -75.9469 Td
(6805   volatile int j = 0;) 135.7546 Tj
-5.2213 -85.4403 Td
(6806 ) 26.1067 Tj
-5.2213 -94.9336 Td
(6807   while\(us-- > 0\)) 114.8693 Tj
-5.2213 -104.427 Td
(6808     for\(j=0; j<10000; j++\);) 167.0826 Tj
-5.2213 -113.9203 Td
(6809 }) 31.328 Tj
-5.2213 -123.4137 Td
(6810 ) 26.1067 Tj
-5.2213 -132.9071 Td
(6811 // Start additional processor running bootstrap code at ad\
dr.) 344.6079 Tj
-5.2213 -142.4004 Td
(6812 // See Appendix B of MultiProcessor Specification.) 287.1733 Tj
-5.2213 -151.8938 Td
(6813 void) 46.992 Tj
-5.2213 -161.3871 Td
(6814 lapic_startap\(uchar apicid, uint addr\)) 224.5173 Tj
-5.2213 -170.8805 Td
(6815 {) 31.328 Tj
-5.2213 -180.3739 Td
(6816   int i;) 67.8773 Tj
-5.2213 -189.8672 Td
(6817   volatile int j = 0;) 135.7546 Tj
-5.2213 -199.3606 Td
(6818 ) 26.1067 Tj
-5.2213 -208.8539 Td
(6819   // Send INIT interrupt to reset other CPU.) 255.8453 Tj
-5.2213 -218.3473 Td
(6820   lapic[ICRHI] = apicid<<24;) 172.304 Tj
-5.2213 -227.8407 Td
(6821   lapic[ICRLO] = INIT | LEVEL;) 182.7466 Tj
-5.2213 -237.334 Td
(6822   microdelay\(10\);) 114.8693 Tj
-5.2213 -246.8274 Td
(6823 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6824   // Send startup IPI \(twice!\) to enter bootstrap code.) 313.2799 Tj
-5.2213 -265.8141 Td
(6825   for\(i = 0; i < 2; i++\){) 156.64 Tj
-5.2213 -275.3075 Td
(6826     lapic[ICRHI] = apicid<<24;) 182.7466 Tj
-5.2213 -284.8008 Td
(6827     lapic[ICRLO] = STARTUP | \(addr>>12\);) 234.9599 Tj
-5.2213 -294.2942 Td
(6828     for\(j=0; j<10000; j++\);  // 200us) 219.2959 Tj
-5.2213 -303.7875 Td
(6829   }) 41.7707 Tj
-5.2213 -313.2809 Td
(6830 }) 31.328 Tj
-5.2213 -322.7743 Td
(6831 ) 26.1067 Tj
-5.2213 -332.2676 Td
(6832 ) 26.1067 Tj
-5.2213 -341.761 Td
(6833 ) 26.1067 Tj
-5.2213 -351.2543 Td
(6834 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6835 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6836 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6837 ) 26.1067 Tj
-5.2213 -389.2278 Td
(6838 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6839 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6840 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6841 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6842 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6843 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6844 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6845 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6846 ) 26.1067 Tj
-5.2213 -474.668 Td
(6847 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6848 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6849 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 68) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/ioapic.c  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(6850 // The I/O APIC manages hardware interrupts for an SMP sys\
tem.) 349.8292 Tj
-5.2213 -37.9735 Td
(6851 // http://www.intel.com/design/chipsets/datashts/29056601.\
pdf) 344.6079 Tj
-5.2213 -47.4668 Td
(6852 // See also picirq.c.) 135.7546 Tj
-5.2213 -56.9602 Td
(6853 ) 26.1067 Tj
-5.2213 -66.4535 Td
(6854 #include "types.h") 120.0906 Tj
-5.2213 -75.9469 Td
(6855 #include "defs.h") 114.8693 Tj
-5.2213 -85.4403 Td
(6856 #include "traps.h") 120.0906 Tj
-5.2213 -94.9336 Td
(6857 ) 26.1067 Tj
-5.2213 -104.427 Td
(6858 #define IOAPIC  0xFEC00000   // Default physical address o\
f IO APIC) 375.9359 Tj
-5.2213 -113.9203 Td
(6859 ) 26.1067 Tj
-5.2213 -123.4137 Td
(6860 #define REG_ID     0x00  // Register index: ID) 266.2879 Tj
-5.2213 -132.9071 Td
(6861 #define REG_VER    0x01  // Register index: version) 292.3946 Tj
-5.2213 -142.4004 Td
(6862 #define REG_TABLE  0x10  // Redirection table base) 287.1733 Tj
-5.2213 -151.8938 Td
(6863 ) 26.1067 Tj
-5.2213 -161.3871 Td
(6864 // The redirection table starts at REG_TABLE and uses) 302.8373 Tj
-5.2213 -170.8805 Td
(6865 // two registers to configure each interrupt.) 261.0666 Tj
-5.2213 -180.3739 Td
(6866 // The first \(low\) register in a pair contains configura\
tion bits.) 370.7146 Tj
-5.2213 -189.8672 Td
(6867 // The second \(high\) register contains a bitmask telling\
 which) 349.8292 Tj
-5.2213 -199.3606 Td
(6868 // CPUs can serve that interrupt.) 198.4106 Tj
-5.2213 -208.8539 Td
(6869 #define INT_DISABLED   0x00100000  // Interrupt disabled) 318.5013 Tj
-5.2213 -218.3473 Td
(6870 #define INT_LEVEL      0x00008000  // Level-triggered \(vs\
 edge-\)) 360.2719 Tj
-5.2213 -227.8407 Td
(6871 #define INT_ACTIVELOW  0x00002000  // Active low \(vs high\
\)) 328.9439 Tj
-5.2213 -237.334 Td
(6872 #define INT_LOGICAL    0x00000800  // Destination is CPU i\
d \(vs APIC ID\)) 402.0426 Tj
-5.2213 -246.8274 Td
(6873 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6874 volatile struct ioapic *ioapic;) 187.968 Tj
-5.2213 -265.8141 Td
(6875 ) 26.1067 Tj
-5.2213 -275.3075 Td
(6876 // IO APIC MMIO structure: write reg, then read or write d\
ata.) 349.8292 Tj
-5.2213 -284.8008 Td
(6877 struct ioapic {) 104.4266 Tj
-5.2213 -294.2942 Td
(6878   uint reg;) 83.5413 Tj
-5.2213 -303.7875 Td
(6879   uint pad[3];) 99.2053 Tj
-5.2213 -313.2809 Td
(6880   uint data;) 88.7626 Tj
-5.2213 -322.7743 Td
(6881 };) 36.5493 Tj
-5.2213 -332.2676 Td
(6882 ) 26.1067 Tj
-5.2213 -341.761 Td
(6883 static uint) 83.5413 Tj
-5.2213 -351.2543 Td
(6884 ioapic_read\(int reg\)) 130.5333 Tj
-5.2213 -360.7477 Td
(6885 {) 31.328 Tj
-5.2213 -370.2411 Td
(6886   ioapic->reg = reg;) 130.5333 Tj
-5.2213 -379.7344 Td
(6887   return ioapic->data;) 140.976 Tj
-5.2213 -389.2278 Td
(6888 }) 31.328 Tj
-5.2213 -398.7211 Td
(6889 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6890 static void) 83.5413 Tj
-5.2213 -417.7079 Td
(6891 ioapic_write\(int reg, uint data\)) 193.1893 Tj
-5.2213 -427.2012 Td
(6892 {) 31.328 Tj
-5.2213 -436.6946 Td
(6893   ioapic->reg = reg;) 130.5333 Tj
-5.2213 -446.1879 Td
(6894   ioapic->data = data;) 140.976 Tj
-5.2213 -455.6813 Td
(6895 }) 31.328 Tj
-5.2213 -465.1747 Td
(6896 ) 26.1067 Tj
-5.2213 -474.668 Td
(6897 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6898 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 68) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 78 78
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/ioapic.c  Page 2) 193.1893 Tj
-5.2213 -28.4801 Td
(6900 void) 46.992 Tj
-5.2213 -37.9735 Td
(6901 ioapic_init\(void\)) 114.8693 Tj
-5.2213 -47.4668 Td
(6902 {) 31.328 Tj
-5.2213 -56.9602 Td
(6903   int i, id, maxintr;) 135.7546 Tj
-5.2213 -66.4535 Td
(6904 ) 26.1067 Tj
-5.2213 -75.9469 Td
(6905   if\(!ismp\)) 83.5413 Tj
-5.2213 -85.4403 Td
(6906     return;) 83.5413 Tj
-5.2213 -94.9336 Td
(6907 ) 26.1067 Tj
-5.2213 -104.427 Td
(6908   ioapic = \(volatile struct ioapic*\)IOAPIC;) 250.6239 Tj
-5.2213 -113.9203 Td
(6909   maxintr = \(ioapic_read\(REG_VER\) >> 16\) & 0xFF;) 276.7306 Tj
-5.2213 -123.4137 Td
(6910   id = ioapic_read\(REG_ID\) >> 24;) 198.4106 Tj
-5.2213 -132.9071 Td
(6911   if\(id != ioapic_id\)) 135.7546 Tj
-5.2213 -142.4004 Td
(6912     cprintf\("ioapic_init: id isn't equal to ioapic_id; no\
t a MP\\n"\);) 381.1572 Tj
-5.2213 -151.8938 Td
(6913 ) 26.1067 Tj
-5.2213 -161.3871 Td
(6914   // Mark all interrupts edge-triggered, active high, disa\
bled,) 355.0506 Tj
-5.2213 -170.8805 Td
(6915   // and not routed to any CPUs.) 193.1893 Tj
-5.2213 -180.3739 Td
(6916   for\(i = 0; i <= maxintr; i++\){) 193.1893 Tj
-5.2213 -189.8672 Td
(6917     ioapic_write\(REG_TABLE+2*i, INT_DISABLED | \(IRQ_OFFS\
ET + i\)\);) 365.4932 Tj
-5.2213 -199.3606 Td
(6918     ioapic_write\(REG_TABLE+2*i+1, 0\);) 219.2959 Tj
-5.2213 -208.8539 Td
(6919   }) 41.7707 Tj
-5.2213 -218.3473 Td
(6920 }) 31.328 Tj
-5.2213 -227.8407 Td
(6921 ) 26.1067 Tj
-5.2213 -237.334 Td
(6922 void) 46.992 Tj
-5.2213 -246.8274 Td
(6923 ioapic_enable\(int irq, int cpunum\)) 203.6319 Tj
-5.2213 -256.3207 Td
(6924 {) 31.328 Tj
-5.2213 -265.8141 Td
(6925   if\(!ismp\)) 83.5413 Tj
-5.2213 -275.3075 Td
(6926     return;) 83.5413 Tj
-5.2213 -284.8008 Td
(6927 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6928   // Mark interrupt edge-triggered, active high,) 276.7306 Tj
-5.2213 -303.7875 Td
(6929   // enabled, and routed to the given cpunum,) 261.0666 Tj
-5.2213 -313.2809 Td
(6930   // which happens to be that cpu's APIC ID.) 255.8453 Tj
-5.2213 -322.7743 Td
(6931   ioapic_write\(REG_TABLE+2*irq, IRQ_OFFSET + irq\);) 287.1733 Tj
-5.2213 -332.2676 Td
(6932   ioapic_write\(REG_TABLE+2*irq+1, cpunum << 24\);) 276.7306 Tj
-5.2213 -341.761 Td
(6933 }) 31.328 Tj
-5.2213 -351.2543 Td
(6934 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6935 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6936 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6937 ) 26.1067 Tj
-5.2213 -389.2278 Td
(6938 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6939 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6940 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6941 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6942 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6943 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6944 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6945 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6946 ) 26.1067 Tj
-5.2213 -474.668 Td
(6947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 69) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/picirq.h  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(6950 #ifndef XV6_PICIRQ_H_) 135.7546 Tj
-5.2213 -37.9735 Td
(6951 #define XV6_PICIRQ_H_) 135.7546 Tj
-5.2213 -47.4668 Td
(6952 #include "x86.h") 109.648 Tj
-5.2213 -56.9602 Td
(6953 ) 26.1067 Tj
-5.2213 -66.4535 Td
(6954 typedef void \(*irq_handler_t\)\(struct trapframe *\);) 287.1733 Tj
-5.2213 -75.9469 Td
(6955 extern irq_handler_t irq_handler[];) 208.8533 Tj
-5.2213 -85.4403 Td
(6956 void reg_irq_handler\(int irq_num, irq_handler_t handler\)\
;) 323.7226 Tj
-5.2213 -94.9336 Td
(6957 #define IRQ_MAX         256) 167.0826 Tj
-5.2213 -104.427 Td
(6958 ) 26.1067 Tj
-5.2213 -113.9203 Td
(6959 #endif // XV6_PICIRQ_H_) 146.1973 Tj
-5.2213 -123.4137 Td
(6960 ) 26.1067 Tj
-5.2213 -132.9071 Td
(6961 ) 26.1067 Tj
-5.2213 -142.4004 Td
(6962 ) 26.1067 Tj
-5.2213 -151.8938 Td
(6963 ) 26.1067 Tj
-5.2213 -161.3871 Td
(6964 ) 26.1067 Tj
-5.2213 -170.8805 Td
(6965 ) 26.1067 Tj
-5.2213 -180.3739 Td
(6966 ) 26.1067 Tj
-5.2213 -189.8672 Td
(6967 ) 26.1067 Tj
-5.2213 -199.3606 Td
(6968 ) 26.1067 Tj
-5.2213 -208.8539 Td
(6969 ) 26.1067 Tj
-5.2213 -218.3473 Td
(6970 ) 26.1067 Tj
-5.2213 -227.8407 Td
(6971 ) 26.1067 Tj
-5.2213 -237.334 Td
(6972 ) 26.1067 Tj
-5.2213 -246.8274 Td
(6973 ) 26.1067 Tj
-5.2213 -256.3207 Td
(6974 ) 26.1067 Tj
-5.2213 -265.8141 Td
(6975 ) 26.1067 Tj
-5.2213 -275.3075 Td
(6976 ) 26.1067 Tj
-5.2213 -284.8008 Td
(6977 ) 26.1067 Tj
-5.2213 -294.2942 Td
(6978 ) 26.1067 Tj
-5.2213 -303.7875 Td
(6979 ) 26.1067 Tj
-5.2213 -313.2809 Td
(6980 ) 26.1067 Tj
-5.2213 -322.7743 Td
(6981 ) 26.1067 Tj
-5.2213 -332.2676 Td
(6982 ) 26.1067 Tj
-5.2213 -341.761 Td
(6983 ) 26.1067 Tj
-5.2213 -351.2543 Td
(6984 ) 26.1067 Tj
-5.2213 -360.7477 Td
(6985 ) 26.1067 Tj
-5.2213 -370.2411 Td
(6986 ) 26.1067 Tj
-5.2213 -379.7344 Td
(6987 ) 26.1067 Tj
-5.2213 -389.2278 Td
(6988 ) 26.1067 Tj
-5.2213 -398.7211 Td
(6989 ) 26.1067 Tj
-5.2213 -408.2145 Td
(6990 ) 26.1067 Tj
-5.2213 -417.7079 Td
(6991 ) 26.1067 Tj
-5.2213 -427.2012 Td
(6992 ) 26.1067 Tj
-5.2213 -436.6946 Td
(6993 ) 26.1067 Tj
-5.2213 -446.1879 Td
(6994 ) 26.1067 Tj
-5.2213 -455.6813 Td
(6995 ) 26.1067 Tj
-5.2213 -465.1747 Td
(6996 ) 26.1067 Tj
-5.2213 -474.668 Td
(6997 ) 26.1067 Tj
-5.2213 -484.1614 Td
(6998 ) 26.1067 Tj
-5.2213 -493.6547 Td
(6999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 69) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 79 79
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/picirq.c  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(7000 // Intel 8259A programmable interrupt controllers.) 287.1733 Tj
-5.2213 -37.9735 Td
(7001 ) 26.1067 Tj
-5.2213 -47.4668 Td
(7002 #include "types.h") 120.0906 Tj
-5.2213 -56.9602 Td
(7003 #include "x86.h") 109.648 Tj
-5.2213 -66.4535 Td
(7004 #include "picirq.h") 125.312 Tj
-5.2213 -75.9469 Td
(7005 #include "traps.h") 120.0906 Tj
-5.2213 -85.4403 Td
(7006 #include "defs.h") 114.8693 Tj
-5.2213 -94.9336 Td
(7007 ) 26.1067 Tj
-5.2213 -104.427 Td
(7008 irq_handler_t irq_handler[IRQ_MAX];) 208.8533 Tj
-5.2213 -113.9203 Td
(7009 // I/O Addresses of the two programmable interrupt control\
lers) 349.8292 Tj
-5.2213 -123.4137 Td
(7010 #define IO_PIC1         0x20    // Master \(IRQs 0-7\)) 297.6159 Tj
-5.2213 -132.9071 Td
(7011 #define IO_PIC2         0xA0    // Slave \(IRQs 8-15\)) 297.6159 Tj
-5.2213 -142.4004 Td
(7012 ) 26.1067 Tj
-5.2213 -151.8938 Td
(7013 #define IRQ_SLAVE       2       // IRQ at which slave conn\
ects to master) 402.0426 Tj
-5.2213 -161.3871 Td
(7014 ) 26.1067 Tj
-5.2213 -170.8805 Td
(7015 // Current IRQ mask.) 130.5333 Tj
-5.2213 -180.3739 Td
(7016 // Initial IRQ mask has interrupt 2 enabled \(for slave 82\
59A\).) 349.8292 Tj
-5.2213 -189.8672 Td
(7017 static ushort irqmask = 0xFFFF & ~\(1<<IRQ_SLAVE\);) 281.9519 Tj
-5.2213 -199.3606 Td
(7018 ) 26.1067 Tj
-5.2213 -208.8539 Td
(7019 void) 46.992 Tj
-5.2213 -218.3473 Td
(7020 reg_irq_handler\(int irq_num, irq_handler_t handler\)) 292.3946 Tj
-5.2213 -227.8407 Td
(7021 {) 31.328 Tj
-5.2213 -237.334 Td
(7022     irq_handler[irq_num] = handler;) 208.8533 Tj
-5.2213 -246.8274 Td
(7023 }) 31.328 Tj
-5.2213 -256.3207 Td
(7024 ) 26.1067 Tj
-5.2213 -265.8141 Td
(7025 static void) 83.5413 Tj
-5.2213 -275.3075 Td
(7026 pic_setmask\(ushort mask\)) 151.4186 Tj
-5.2213 -284.8008 Td
(7027 {) 31.328 Tj
-5.2213 -294.2942 Td
(7028   irqmask = mask;) 114.8693 Tj
-5.2213 -303.7875 Td
(7029   outb\(IO_PIC1+1, mask\);) 151.4186 Tj
-5.2213 -313.2809 Td
(7030   outb\(IO_PIC2+1, mask >> 8\);) 177.5253 Tj
-5.2213 -322.7743 Td
(7031 }) 31.328 Tj
-5.2213 -332.2676 Td
(7032 ) 26.1067 Tj
-5.2213 -341.761 Td
(7033 void) 46.992 Tj
-5.2213 -351.2543 Td
(7034 pic_enable\(int irq\)) 125.312 Tj
-5.2213 -360.7477 Td
(7035 {) 31.328 Tj
-5.2213 -370.2411 Td
(7036   pic_setmask\(irqmask & ~\(1<<irq\)\);) 208.8533 Tj
-5.2213 -379.7344 Td
(7037 }) 31.328 Tj
-5.2213 -389.2278 Td
(7038 ) 26.1067 Tj
-5.2213 -398.7211 Td
(7039 ) 26.1067 Tj
-5.2213 -408.2145 Td
(7040 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7041 ) 26.1067 Tj
-5.2213 -427.2012 Td
(7042 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7043 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7044 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7045 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7046 ) 26.1067 Tj
-5.2213 -474.668 Td
(7047 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 70) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/picirq.c  Page 2) 193.1893 Tj
-5.2213 -28.4801 Td
(7050 // Initialize the 8259A interrupt controllers.) 266.2879 Tj
-5.2213 -37.9735 Td
(7051 void) 46.992 Tj
-5.2213 -47.4668 Td
(7052 pic_init\(void\)) 99.2053 Tj
-5.2213 -56.9602 Td
(7053 {) 31.328 Tj
-5.2213 -66.4535 Td
(7054   // mask all interrupts) 151.4186 Tj
-5.2213 -75.9469 Td
(7055   outb\(IO_PIC1+1, 0xFF\);) 151.4186 Tj
-5.2213 -85.4403 Td
(7056   outb\(IO_PIC2+1, 0xFF\);) 151.4186 Tj
-5.2213 -94.9336 Td
(7057 ) 26.1067 Tj
-5.2213 -104.427 Td
(7058   // Set up master \(8259A-1\)) 172.304 Tj
-5.2213 -113.9203 Td
(7059 ) 26.1067 Tj
-5.2213 -123.4137 Td
(7060   // ICW1:  0001g0hi) 130.5333 Tj
-5.2213 -132.9071 Td
(7061   //    g:  0 = edge triggering, 1 = level triggering) 302.8373 Tj
-5.2213 -142.4004 Td
(7062   //    h:  0 = cascaded PICs, 1 = master only) 266.2879 Tj
-5.2213 -151.8938 Td
(7063   //    i:  0 = no ICW4, 1 = ICW4 required) 245.4026 Tj
-5.2213 -161.3871 Td
(7064   outb\(IO_PIC1, 0x11\);) 140.976 Tj
-5.2213 -170.8805 Td
(7065 ) 26.1067 Tj
-5.2213 -180.3739 Td
(7066   // ICW2:  Vector offset) 156.64 Tj
-5.2213 -189.8672 Td
(7067   outb\(IO_PIC1+1, IRQ_OFFSET\);) 182.7466 Tj
-5.2213 -199.3606 Td
(7068 ) 26.1067 Tj
-5.2213 -208.8539 Td
(7069   // ICW3:  \(master PIC\) bit mask of IR lines connected \
to slaves) 365.4932 Tj
-5.2213 -218.3473 Td
(7070   //        \(slave PIC\) 3-bit # of slave's connection to\
 master) 355.0506 Tj
-5.2213 -227.8407 Td
(7071   outb\(IO_PIC1+1, 1<<IRQ_SLAVE\);) 193.1893 Tj
-5.2213 -237.334 Td
(7072 ) 26.1067 Tj
-5.2213 -246.8274 Td
(7073   // ICW4:  000nbmap) 130.5333 Tj
-5.2213 -256.3207 Td
(7074   //    n:  1 = special fully nested mode) 240.1813 Tj
-5.2213 -265.8141 Td
(7075   //    b:  1 = buffered mode) 177.5253 Tj
-5.2213 -275.3075 Td
(7076   //    m:  0 = slave PIC, 1 = master PIC) 240.1813 Tj
-5.2213 -284.8008 Td
(7077   //      \(ignored when b is 0, as the master/slave role) 318.5013 Tj
-5.2213 -294.2942 Td
(7078   //      can be hardwired\).) 172.304 Tj
-5.2213 -303.7875 Td
(7079   //    a:  1 = Automatic EOI mode) 203.6319 Tj
-5.2213 -313.2809 Td
(7080   //    p:  0 = MCS-80/85 mode, 1 = intel x86 mode) 287.1733 Tj
-5.2213 -322.7743 Td
(7081   outb\(IO_PIC1+1, 0x3\);) 146.1973 Tj
-5.2213 -332.2676 Td
(7082 ) 26.1067 Tj
-5.2213 -341.761 Td
(7083   // Set up slave \(8259A-2\)) 167.0826 Tj
-5.2213 -351.2543 Td
(7084   outb\(IO_PIC2, 0x11\);                  // ICW1) 271.5093 Tj
-5.2213 -360.7477 Td
(7085   outb\(IO_PIC2+1, IRQ_OFFSET + 8\);      // ICW2) 271.5093 Tj
-5.2213 -370.2411 Td
(7086   outb\(IO_PIC2+1, IRQ_SLAVE\);           // ICW3) 271.5093 Tj
-5.2213 -379.7344 Td
(7087   // NB Automatic EOI mode doesn't tend to work on the sla\
ve.) 344.6079 Tj
-5.2213 -389.2278 Td
(7088   // Linux source code says it's "to be investigated".) 308.0586 Tj
-5.2213 -398.7211 Td
(7089   outb\(IO_PIC2+1, 0x3\);                 // ICW4) 271.5093 Tj
-5.2213 -408.2145 Td
(7090 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7091   // OCW3:  0ef01prs) 130.5333 Tj
-5.2213 -427.2012 Td
(7092   //   ef:  0x = NOP, 10 = clear specific mask, 11 = set s\
pecific mask) 391.5999 Tj
-5.2213 -436.6946 Td
(7093   //    p:  0 = no polling, 1 = polling mode) 255.8453 Tj
-5.2213 -446.1879 Td
(7094   //   rs:  0x = NOP, 10 = read IRR, 11 = read ISR) 287.1733 Tj
-5.2213 -455.6813 Td
(7095   outb\(IO_PIC1, 0x68\);             // clear specific mas\
k) 323.7226 Tj
-5.2213 -465.1747 Td
(7096   outb\(IO_PIC1, 0x0a\);             // read IRR by defaul\
t) 323.7226 Tj
-5.2213 -474.668 Td
(7097 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7098   outb\(IO_PIC2, 0x68\);             // OCW3) 245.4026 Tj
-5.2213 -493.6547 Td
(7099   outb\(IO_PIC2, 0x0a\);             // OCW3) 245.4026 Tj
-5.2213 -522.1348 Td
(Sheet 70) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 80 80
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/picirq.c  Page 3) 193.1893 Tj
-5.2213 -28.4801 Td
(7100   if\(irqmask != 0xFFFF\)) 146.1973 Tj
-5.2213 -37.9735 Td
(7101     pic_setmask\(irqmask\);) 156.64 Tj
-5.2213 -47.4668 Td
(7102   memset\(irq_handler, 0, sizeof\(irq_handler\)\);) 266.2879 Tj
-5.2213 -56.9602 Td
(7103 }) 31.328 Tj
-5.2213 -66.4535 Td
(7104 ) 26.1067 Tj
-5.2213 -75.9469 Td
(7105 ) 26.1067 Tj
-5.2213 -85.4403 Td
(7106 ) 26.1067 Tj
-5.2213 -94.9336 Td
(7107 ) 26.1067 Tj
-5.2213 -104.427 Td
(7108 ) 26.1067 Tj
-5.2213 -113.9203 Td
(7109 ) 26.1067 Tj
-5.2213 -123.4137 Td
(7110 ) 26.1067 Tj
-5.2213 -132.9071 Td
(7111 ) 26.1067 Tj
-5.2213 -142.4004 Td
(7112 ) 26.1067 Tj
-5.2213 -151.8938 Td
(7113 ) 26.1067 Tj
-5.2213 -161.3871 Td
(7114 ) 26.1067 Tj
-5.2213 -170.8805 Td
(7115 ) 26.1067 Tj
-5.2213 -180.3739 Td
(7116 ) 26.1067 Tj
-5.2213 -189.8672 Td
(7117 ) 26.1067 Tj
-5.2213 -199.3606 Td
(7118 ) 26.1067 Tj
-5.2213 -208.8539 Td
(7119 ) 26.1067 Tj
-5.2213 -218.3473 Td
(7120 ) 26.1067 Tj
-5.2213 -227.8407 Td
(7121 ) 26.1067 Tj
-5.2213 -237.334 Td
(7122 ) 26.1067 Tj
-5.2213 -246.8274 Td
(7123 ) 26.1067 Tj
-5.2213 -256.3207 Td
(7124 ) 26.1067 Tj
-5.2213 -265.8141 Td
(7125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(7126 ) 26.1067 Tj
-5.2213 -284.8008 Td
(7127 ) 26.1067 Tj
-5.2213 -294.2942 Td
(7128 ) 26.1067 Tj
-5.2213 -303.7875 Td
(7129 ) 26.1067 Tj
-5.2213 -313.2809 Td
(7130 ) 26.1067 Tj
-5.2213 -322.7743 Td
(7131 ) 26.1067 Tj
-5.2213 -332.2676 Td
(7132 ) 26.1067 Tj
-5.2213 -341.761 Td
(7133 ) 26.1067 Tj
-5.2213 -351.2543 Td
(7134 ) 26.1067 Tj
-5.2213 -360.7477 Td
(7135 ) 26.1067 Tj
-5.2213 -370.2411 Td
(7136 ) 26.1067 Tj
-5.2213 -379.7344 Td
(7137 ) 26.1067 Tj
-5.2213 -389.2278 Td
(7138 ) 26.1067 Tj
-5.2213 -398.7211 Td
(7139 ) 26.1067 Tj
-5.2213 -408.2145 Td
(7140 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7141 ) 26.1067 Tj
-5.2213 -427.2012 Td
(7142 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7143 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7144 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7146 ) 26.1067 Tj
-5.2213 -474.668 Td
(7147 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 71) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kbd.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(7150 // PC keyboard interface constants) 203.6319 Tj
-5.2213 -37.9735 Td
(7151 ) 26.1067 Tj
-5.2213 -47.4668 Td
(7152 #define KBSTATP         0x64    // kbd controller status p\
ort\(I\)) 360.2719 Tj
-5.2213 -56.9602 Td
(7153 #define KBS_DIB         0x01    // kbd data in buffer) 302.8373 Tj
-5.2213 -66.4535 Td
(7154 #define KBDATAP         0x60    // kbd data port\(I\)) 292.3946 Tj
-5.2213 -75.9469 Td
(7155 ) 26.1067 Tj
-5.2213 -85.4403 Td
(7156 #define NO              0) 156.64 Tj
-5.2213 -94.9336 Td
(7157 ) 26.1067 Tj
-5.2213 -104.427 Td
(7158 #define SHIFT           \(1<<0\)) 182.7466 Tj
-5.2213 -113.9203 Td
(7159 #define CTL             \(1<<1\)) 182.7466 Tj
-5.2213 -123.4137 Td
(7160 #define ALT             \(1<<2\)) 182.7466 Tj
-5.2213 -132.9071 Td
(7161 ) 26.1067 Tj
-5.2213 -142.4004 Td
(7162 #define CAPSLOCK        \(1<<3\)) 182.7466 Tj
-5.2213 -151.8938 Td
(7163 #define NUMLOCK         \(1<<4\)) 182.7466 Tj
-5.2213 -161.3871 Td
(7164 #define SCROLLLOCK      \(1<<5\)) 182.7466 Tj
-5.2213 -170.8805 Td
(7165 ) 26.1067 Tj
-5.2213 -180.3739 Td
(7166 #define E0ESC           \(1<<6\)) 182.7466 Tj
-5.2213 -189.8672 Td
(7167 ) 26.1067 Tj
-5.2213 -199.3606 Td
(7168 // Special keycodes) 125.312 Tj
-5.2213 -208.8539 Td
(7169 #define KEY_HOME        0xE0) 172.304 Tj
-5.2213 -218.3473 Td
(7170 #define KEY_END         0xE1) 172.304 Tj
-5.2213 -227.8407 Td
(7171 #define KEY_UP          0xE2) 172.304 Tj
-5.2213 -237.334 Td
(7172 #define KEY_DN          0xE3) 172.304 Tj
-5.2213 -246.8274 Td
(7173 #define KEY_LF          0xE4) 172.304 Tj
-5.2213 -256.3207 Td
(7174 #define KEY_RT          0xE5) 172.304 Tj
-5.2213 -265.8141 Td
(7175 #define KEY_PGUP        0xE6) 172.304 Tj
-5.2213 -275.3075 Td
(7176 #define KEY_PGDN        0xE7) 172.304 Tj
-5.2213 -284.8008 Td
(7177 #define KEY_INS         0xE8) 172.304 Tj
-5.2213 -294.2942 Td
(7178 #define KEY_DEL         0xE9) 172.304 Tj
-5.2213 -303.7875 Td
(7179 ) 26.1067 Tj
-5.2213 -313.2809 Td
(7180 // C\('A'\) == Control-A) 140.976 Tj
-5.2213 -322.7743 Td
(7181 #define C\(x\) \(x - '@'\)) 140.976 Tj
-5.2213 -332.2676 Td
(7182 ) 26.1067 Tj
-5.2213 -341.761 Td
(7183 static uchar shiftcode[256] =) 177.5253 Tj
-5.2213 -351.2543 Td
(7184 {) 31.328 Tj
-5.2213 -360.7477 Td
(7185   [0x1D] CTL,) 93.984 Tj
-5.2213 -370.2411 Td
(7186   [0x2A] SHIFT,) 104.4266 Tj
-5.2213 -379.7344 Td
(7187   [0x36] SHIFT,) 104.4266 Tj
-5.2213 -389.2278 Td
(7188   [0x38] ALT,) 93.984 Tj
-5.2213 -398.7211 Td
(7189   [0x9D] CTL,) 93.984 Tj
-5.2213 -408.2145 Td
(7190   [0xB8] ALT) 88.7626 Tj
-5.2213 -417.7079 Td
(7191 };) 36.5493 Tj
-5.2213 -427.2012 Td
(7192 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7193 static uchar togglecode[256] =) 182.7466 Tj
-5.2213 -446.1879 Td
(7194 {) 31.328 Tj
-5.2213 -455.6813 Td
(7195   [0x3A] CAPSLOCK,) 120.0906 Tj
-5.2213 -465.1747 Td
(7196   [0x45] NUMLOCK,) 114.8693 Tj
-5.2213 -474.668 Td
(7197   [0x46] SCROLLLOCK) 125.312 Tj
-5.2213 -484.1614 Td
(7198 };) 36.5493 Tj
-5.2213 -493.6547 Td
(7199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 71) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 81 81
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kbd.h  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(7200 static uchar normalmap[256] =) 177.5253 Tj
-5.2213 -37.9735 Td
(7201 {) 31.328 Tj
-5.2213 -47.4668 Td
(7202   NO,   0x1B, '1',  '2',  '3',  '4',  '5',  '6',  // 0x00) 323.7226 Tj
-5.2213 -56.9602 Td
(7203   '7',  '8',  '9',  '0',  '-',  '=',  '\\b', '\\t',) 281.9519 Tj
-5.2213 -66.4535 Td
(7204   'q',  'w',  'e',  'r',  't',  'y',  'u',  'i',  // 0x10) 323.7226 Tj
-5.2213 -75.9469 Td
(7205   'o',  'p',  '[',  ']',  '\\n', NO,   'a',  's',) 276.7306 Tj
-5.2213 -85.4403 Td
(7206   'd',  'f',  'g',  'h',  'j',  'k',  'l',  ';',  // 0x20) 323.7226 Tj
-5.2213 -94.9336 Td
(7207   '\\'', '`',  NO,   '\\\\', 'z',  'x',  'c',  'v',) 276.7306 Tj
-5.2213 -104.427 Td
(7208   'b',  'n',  'm',  ',',  '.',  '/',  NO,   '*',  // 0x30) 323.7226 Tj
-5.2213 -113.9203 Td
(7209   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) 271.5093 Tj
-5.2213 -123.4137 Td
(7210   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) 323.7226 Tj
-5.2213 -132.9071 Td
(7211   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) 276.7306 Tj
-5.2213 -142.4004 Td
(7212   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) 323.7226 Tj
-5.2213 -151.8938 Td
(7213   [0x9C] '\\n',      // KP_Enter) 187.968 Tj
-5.2213 -161.3871 Td
(7214   [0xB5] '/',       // KP_Div) 177.5253 Tj
-5.2213 -170.8805 Td
(7215   [0xC8] KEY_UP,    [0xD0] KEY_DN,) 203.6319 Tj
-5.2213 -180.3739 Td
(7216   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) 214.0746 Tj
-5.2213 -189.8672 Td
(7217   [0xCB] KEY_LF,    [0xCD] KEY_RT,) 203.6319 Tj
-5.2213 -199.3606 Td
(7218   [0x97] KEY_HOME,  [0xCF] KEY_END,) 208.8533 Tj
-5.2213 -208.8539 Td
(7219   [0xD2] KEY_INS,   [0xD3] KEY_DEL) 203.6319 Tj
-5.2213 -218.3473 Td
(7220 };) 36.5493 Tj
-5.2213 -227.8407 Td
(7221 ) 26.1067 Tj
-5.2213 -237.334 Td
(7222 static uchar shiftmap[256] =) 172.304 Tj
-5.2213 -246.8274 Td
(7223 {) 31.328 Tj
-5.2213 -256.3207 Td
(7224   NO,   033,  '!',  '@',  '#',  '$',  '%',  '^',  // 0x00) 323.7226 Tj
-5.2213 -265.8141 Td
(7225   '&',  '*',  '\(',  '\)',  '_',  '+',  '\\b', '\\t',) 281.9519 Tj
-5.2213 -275.3075 Td
(7226   'Q',  'W',  'E',  'R',  'T',  'Y',  'U',  'I',  // 0x10) 323.7226 Tj
-5.2213 -284.8008 Td
(7227   'O',  'P',  '{',  '}',  '\\n', NO,   'A',  'S',) 276.7306 Tj
-5.2213 -294.2942 Td
(7228   'D',  'F',  'G',  'H',  'J',  'K',  'L',  ':',  // 0x20) 323.7226 Tj
-5.2213 -303.7875 Td
(7229   '"',  '~',  NO,   '|',  'Z',  'X',  'C',  'V',) 276.7306 Tj
-5.2213 -313.2809 Td
(7230   'B',  'N',  'M',  '<',  '>',  '?',  NO,   '*',  // 0x30) 323.7226 Tj
-5.2213 -322.7743 Td
(7231   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) 271.5093 Tj
-5.2213 -332.2676 Td
(7232   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) 323.7226 Tj
-5.2213 -341.761 Td
(7233   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) 276.7306 Tj
-5.2213 -351.2543 Td
(7234   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) 323.7226 Tj
-5.2213 -360.7477 Td
(7235   [0x9C] '\\n',      // KP_Enter) 187.968 Tj
-5.2213 -370.2411 Td
(7236   [0xB5] '/',       // KP_Div) 177.5253 Tj
-5.2213 -379.7344 Td
(7237   [0xC8] KEY_UP,    [0xD0] KEY_DN,) 203.6319 Tj
-5.2213 -389.2278 Td
(7238   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) 214.0746 Tj
-5.2213 -398.7211 Td
(7239   [0xCB] KEY_LF,    [0xCD] KEY_RT,) 203.6319 Tj
-5.2213 -408.2145 Td
(7240   [0x97] KEY_HOME,  [0xCF] KEY_END,) 208.8533 Tj
-5.2213 -417.7079 Td
(7241   [0xD2] KEY_INS,   [0xD3] KEY_DEL) 203.6319 Tj
-5.2213 -427.2012 Td
(7242 };) 36.5493 Tj
-5.2213 -436.6946 Td
(7243 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7244 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7245 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7246 ) 26.1067 Tj
-5.2213 -474.668 Td
(7247 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7248 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7249 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 72) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kbd.h  Page 3) 177.5253 Tj
-5.2213 -28.4801 Td
(7250 static uchar ctlmap[256] =) 161.8613 Tj
-5.2213 -37.9735 Td
(7251 {) 31.328 Tj
-5.2213 -47.4668 Td
(7252   NO,      NO,      NO,      NO,      NO,      NO,      NO\
,      NO,) 381.1572 Tj
-5.2213 -56.9602 Td
(7253   NO,      NO,      NO,      NO,      NO,      NO,      NO\
,      NO,) 381.1572 Tj
-5.2213 -66.4535 Td
(7254   C\('Q'\),  C\('W'\),  C\('E'\),  C\('R'\),  C\('T'\),  C\
\('Y'\),  C\('U'\),  C\('I'\),) 402.0426 Tj
-5.2213 -75.9469 Td
(7255   C\('O'\),  C\('P'\),  NO,      NO,      '\\r',    NO,   \
   C\('A'\),  C\('S'\),) 402.0426 Tj
-5.2213 -85.4403 Td
(7256   C\('D'\),  C\('F'\),  C\('G'\),  C\('H'\),  C\('J'\),  C\
\('K'\),  C\('L'\),  NO,) 381.1572 Tj
-5.2213 -94.9336 Td
(7257   NO,      NO,      NO,      C\('\\\\'\), C\('Z'\),  C\('X\
'\),  C\('C'\),  C\('V'\),) 402.0426 Tj
-5.2213 -104.427 Td
(7258   C\('B'\),  C\('N'\),  C\('M'\),  NO,      NO,      C\('/\
'\),  NO,      NO,) 381.1572 Tj
-5.2213 -113.9203 Td
(7259   [0x9C] '\\r',      // KP_Enter) 187.968 Tj
-5.2213 -123.4137 Td
(7260   [0xB5] C\('/'\),    // KP_Div) 177.5253 Tj
-5.2213 -132.9071 Td
(7261   [0xC8] KEY_UP,    [0xD0] KEY_DN,) 203.6319 Tj
-5.2213 -142.4004 Td
(7262   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) 214.0746 Tj
-5.2213 -151.8938 Td
(7263   [0xCB] KEY_LF,    [0xCD] KEY_RT,) 203.6319 Tj
-5.2213 -161.3871 Td
(7264   [0x97] KEY_HOME,  [0xCF] KEY_END,) 208.8533 Tj
-5.2213 -170.8805 Td
(7265   [0xD2] KEY_INS,   [0xD3] KEY_DEL) 203.6319 Tj
-5.2213 -180.3739 Td
(7266 };) 36.5493 Tj
-5.2213 -189.8672 Td
(7267 ) 26.1067 Tj
-5.2213 -199.3606 Td
(7268 ) 26.1067 Tj
-5.2213 -208.8539 Td
(7269 ) 26.1067 Tj
-5.2213 -218.3473 Td
(7270 ) 26.1067 Tj
-5.2213 -227.8407 Td
(7271 ) 26.1067 Tj
-5.2213 -237.334 Td
(7272 ) 26.1067 Tj
-5.2213 -246.8274 Td
(7273 ) 26.1067 Tj
-5.2213 -256.3207 Td
(7274 ) 26.1067 Tj
-5.2213 -265.8141 Td
(7275 ) 26.1067 Tj
-5.2213 -275.3075 Td
(7276 ) 26.1067 Tj
-5.2213 -284.8008 Td
(7277 ) 26.1067 Tj
-5.2213 -294.2942 Td
(7278 ) 26.1067 Tj
-5.2213 -303.7875 Td
(7279 ) 26.1067 Tj
-5.2213 -313.2809 Td
(7280 ) 26.1067 Tj
-5.2213 -322.7743 Td
(7281 ) 26.1067 Tj
-5.2213 -332.2676 Td
(7282 ) 26.1067 Tj
-5.2213 -341.761 Td
(7283 ) 26.1067 Tj
-5.2213 -351.2543 Td
(7284 ) 26.1067 Tj
-5.2213 -360.7477 Td
(7285 ) 26.1067 Tj
-5.2213 -370.2411 Td
(7286 ) 26.1067 Tj
-5.2213 -379.7344 Td
(7287 ) 26.1067 Tj
-5.2213 -389.2278 Td
(7288 ) 26.1067 Tj
-5.2213 -398.7211 Td
(7289 ) 26.1067 Tj
-5.2213 -408.2145 Td
(7290 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7291 ) 26.1067 Tj
-5.2213 -427.2012 Td
(7292 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7293 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7294 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7295 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7296 ) 26.1067 Tj
-5.2213 -474.668 Td
(7297 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7298 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7299 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 72) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 82 82
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/kbd.c  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(7300 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(7301 #include "x86.h") 109.648 Tj
-5.2213 -47.4668 Td
(7302 #include "defs.h") 114.8693 Tj
-5.2213 -56.9602 Td
(7303 #include "kbd.h") 109.648 Tj
-5.2213 -66.4535 Td
(7304 ) 26.1067 Tj
-5.2213 -75.9469 Td
(7305 int) 41.7707 Tj
-5.2213 -85.4403 Td
(7306 kbd_getc\(void\)) 99.2053 Tj
-5.2213 -94.9336 Td
(7307 {) 31.328 Tj
-5.2213 -104.427 Td
(7308   static uint shift;) 130.5333 Tj
-5.2213 -113.9203 Td
(7309   static uchar *charcode[4] = {) 187.968 Tj
-5.2213 -123.4137 Td
(7310     normalmap, shiftmap, ctlmap, ctlmap) 229.7386 Tj
-5.2213 -132.9071 Td
(7311   };) 46.992 Tj
-5.2213 -142.4004 Td
(7312   uint st, data, c;) 125.312 Tj
-5.2213 -151.8938 Td
(7313 ) 26.1067 Tj
-5.2213 -161.3871 Td
(7314   st = inb\(KBSTATP\);) 130.5333 Tj
-5.2213 -170.8805 Td
(7315   if\(\(st & KBS_DIB\) == 0\)) 156.64 Tj
-5.2213 -180.3739 Td
(7316     return -1;) 99.2053 Tj
-5.2213 -189.8672 Td
(7317   data = inb\(KBDATAP\);) 140.976 Tj
-5.2213 -199.3606 Td
(7318 ) 26.1067 Tj
-5.2213 -208.8539 Td
(7319   if\(data == 0xE0\){) 125.312 Tj
-5.2213 -218.3473 Td
(7320     shift |= E0ESC;) 125.312 Tj
-5.2213 -227.8407 Td
(7321     return 0;) 93.984 Tj
-5.2213 -237.334 Td
(7322   } else if\(data & 0x80\){) 156.64 Tj
-5.2213 -246.8274 Td
(7323     // Key released) 125.312 Tj
-5.2213 -256.3207 Td
(7324     data = \(shift & E0ESC ? data : data & 0x7F\);) 276.7306 Tj
-5.2213 -265.8141 Td
(7325     shift &= ~\(shiftcode[data] | E0ESC\);) 234.9599 Tj
-5.2213 -275.3075 Td
(7326     return 0;) 93.984 Tj
-5.2213 -284.8008 Td
(7327   } else if\(shift & E0ESC\){) 167.0826 Tj
-5.2213 -294.2942 Td
(7328     // Last character was an E0 escape; or with 0x80) 297.6159 Tj
-5.2213 -303.7875 Td
(7329     data |= 0x80;) 114.8693 Tj
-5.2213 -313.2809 Td
(7330     shift &= ~E0ESC;) 130.5333 Tj
-5.2213 -322.7743 Td
(7331   }) 41.7707 Tj
-5.2213 -332.2676 Td
(7332 ) 26.1067 Tj
-5.2213 -341.761 Td
(7333   shift |= shiftcode[data];) 167.0826 Tj
-5.2213 -351.2543 Td
(7334   shift ^= togglecode[data];) 172.304 Tj
-5.2213 -360.7477 Td
(7335   c = charcode[shift & \(CTL | SHIFT\)][data];) 255.8453 Tj
-5.2213 -370.2411 Td
(7336   if\(shift & CAPSLOCK\){) 146.1973 Tj
-5.2213 -379.7344 Td
(7337     if\('a' <= c && c <= 'z'\)) 172.304 Tj
-5.2213 -389.2278 Td
(7338       c += 'A' - 'a';) 135.7546 Tj
-5.2213 -398.7211 Td
(7339     else if\('A' <= c && c <= 'Z'\)) 198.4106 Tj
-5.2213 -408.2145 Td
(7340       c += 'a' - 'A';) 135.7546 Tj
-5.2213 -417.7079 Td
(7341   }) 41.7707 Tj
-5.2213 -427.2012 Td
(7342   return c;) 83.5413 Tj
-5.2213 -436.6946 Td
(7343 }) 31.328 Tj
-5.2213 -446.1879 Td
(7344 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7345 void) 46.992 Tj
-5.2213 -465.1747 Td
(7346 kbd_intr\(void\)) 99.2053 Tj
-5.2213 -474.668 Td
(7347 {) 31.328 Tj
-5.2213 -484.1614 Td
(7348   console_intr\(kbd_getc\);) 156.64 Tj
-5.2213 -493.6547 Td
(7349 }) 31.328 Tj
-5.2213 -522.1348 Td
(Sheet 73) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 1) 198.4106 Tj
-5.2213 -28.4801 Td
(7350 // Console input and output.) 172.304 Tj
-5.2213 -37.9735 Td
(7351 // Input is from the keyboard only.) 208.8533 Tj
-5.2213 -47.4668 Td
(7352 // Output is written to the screen and the printer port.) 318.5013 Tj
-5.2213 -56.9602 Td
(7353 ) 26.1067 Tj
-5.2213 -66.4535 Td
(7354 #include "types.h") 120.0906 Tj
-5.2213 -75.9469 Td
(7355 #include "defs.h") 114.8693 Tj
-5.2213 -85.4403 Td
(7356 #include "param.h") 120.0906 Tj
-5.2213 -94.9336 Td
(7357 #include "traps.h") 120.0906 Tj
-5.2213 -104.427 Td
(7358 #include "spinlock.h") 135.7546 Tj
-5.2213 -113.9203 Td
(7359 #include "dev.h") 109.648 Tj
-5.2213 -123.4137 Td
(7360 #include "mmu.h") 109.648 Tj
-5.2213 -132.9071 Td
(7361 #include "proc.h") 114.8693 Tj
-5.2213 -142.4004 Td
(7362 #include "x86.h") 109.648 Tj
-5.2213 -151.8938 Td
(7363 #include "thread.h") 125.312 Tj
-5.2213 -161.3871 Td
(7364 #include "lwip/sockets.h") 156.64 Tj
-5.2213 -170.8805 Td
(7365 ) 26.1067 Tj
-5.2213 -180.3739 Td
(7366 #define CRTPORT 0x3d4) 135.7546 Tj
-5.2213 -189.8672 Td
(7367 #define LPTPORT 0x378) 135.7546 Tj
-5.2213 -199.3606 Td
(7368 #define BACKSPACE 0x100) 146.1973 Tj
-5.2213 -208.8539 Td
(7369 ) 26.1067 Tj
-5.2213 -218.3473 Td
(7370 static ushort *crt = \(ushort*\)0xb8000;  // CGA memory) 302.8373 Tj
-5.2213 -227.8407 Td
(7371 ) 26.1067 Tj
-5.2213 -237.334 Td
(7372 static struct spinlock console_lock;) 214.0746 Tj
-5.2213 -246.8274 Td
(7373 int panicked = 0;) 114.8693 Tj
-5.2213 -256.3207 Td
(7374 int use_console_lock = 0;) 156.64 Tj
-5.2213 -265.8141 Td
(7375 ) 26.1067 Tj
-5.2213 -275.3075 Td
(7376 // Copy console output to parallel port, which you can tel\
l) 334.1652 Tj
-5.2213 -284.8008 Td
(7377 // .bochsrc to copy to the stdout:) 203.6319 Tj
-5.2213 -294.2942 Td
(7378 //   parport1: enabled=1, file="/dev/stdout") 255.8453 Tj
-5.2213 -303.7875 Td
(7379 static void) 83.5413 Tj
-5.2213 -313.2809 Td
(7380 lpt_putc\(int c\)) 104.4266 Tj
-5.2213 -322.7743 Td
(7381 {) 31.328 Tj
-5.2213 -332.2676 Td
(7382   int i;) 67.8773 Tj
-5.2213 -341.761 Td
(7383 ) 26.1067 Tj
-5.2213 -351.2543 Td
(7384   for\(i = 0; !\(inb\(LPTPORT+1\) & 0x80\) && i < 12800; i\
++\)) 318.5013 Tj
-5.2213 -360.7477 Td
(7385     ;) 52.2133 Tj
-5.2213 -370.2411 Td
(7386   if\(c == BACKSPACE\)) 130.5333 Tj
-5.2213 -379.7344 Td
(7387     c = '\\b';) 93.984 Tj
-5.2213 -389.2278 Td
(7388   outb\(LPTPORT+0, c\);) 135.7546 Tj
-5.2213 -398.7211 Td
(7389   outb\(LPTPORT+2, 0x08|0x04|0x01\);) 203.6319 Tj
-5.2213 -408.2145 Td
(7390   outb\(LPTPORT+2, 0x08\);) 151.4186 Tj
-5.2213 -417.7079 Td
(7391 }) 31.328 Tj
-5.2213 -427.2012 Td
(7392 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7393 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7394 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7395 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7396 ) 26.1067 Tj
-5.2213 -474.668 Td
(7397 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7398 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7399 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 73) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 83 83
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 2) 198.4106 Tj
-5.2213 -28.4801 Td
(7400 static void) 83.5413 Tj
-5.2213 -37.9735 Td
(7401 cga_putc\(int c\)) 104.4266 Tj
-5.2213 -47.4668 Td
(7402 {) 31.328 Tj
-5.2213 -56.9602 Td
(7403   int pos;) 78.32 Tj
-5.2213 -66.4535 Td
(7404 ) 26.1067 Tj
-5.2213 -75.9469 Td
(7405   // Cursor position: col + 80*row.) 208.8533 Tj
-5.2213 -85.4403 Td
(7406   outb\(CRTPORT, 14\);) 130.5333 Tj
-5.2213 -94.9336 Td
(7407   pos = inb\(CRTPORT+1\) << 8;) 172.304 Tj
-5.2213 -104.427 Td
(7408   outb\(CRTPORT, 15\);) 130.5333 Tj
-5.2213 -113.9203 Td
(7409   pos |= inb\(CRTPORT+1\);) 151.4186 Tj
-5.2213 -123.4137 Td
(7410 ) 26.1067 Tj
-5.2213 -132.9071 Td
(7411   if\(c == '\\n'\)) 104.4266 Tj
-5.2213 -142.4004 Td
(7412     pos += 80 - pos%80;) 146.1973 Tj
-5.2213 -151.8938 Td
(7413   else if\(c == BACKSPACE\){) 161.8613 Tj
-5.2213 -161.3871 Td
(7414     if\(pos > 0\)) 104.4266 Tj
-5.2213 -170.8805 Td
(7415       crt[--pos] = ' ' | 0x0700;) 193.1893 Tj
-5.2213 -180.3739 Td
(7416   } else) 67.8773 Tj
-5.2213 -189.8672 Td
(7417     crt[pos++] = \(c&0xff\) | 0x0700;  // black on white) 308.0586 Tj
-5.2213 -199.3606 Td
(7418 ) 26.1067 Tj
-5.2213 -208.8539 Td
(7419   if\(\(pos/80\) >= 24\){  // Scroll up.) 214.0746 Tj
-5.2213 -218.3473 Td
(7420     memmove\(crt, crt+80, sizeof\(crt[0]\)*23*80\);) 271.5093 Tj
-5.2213 -227.8407 Td
(7421     pos -= 80;) 99.2053 Tj
-5.2213 -237.334 Td
(7422     memset\(crt + pos, 0, sizeof\(crt[0]\)*80\);) 255.8453 Tj
-5.2213 -246.8274 Td
(7423   }) 41.7707 Tj
-5.2213 -256.3207 Td
(7424 ) 26.1067 Tj
-5.2213 -265.8141 Td
(7425   outb\(CRTPORT, 14\);) 130.5333 Tj
-5.2213 -275.3075 Td
(7426   outb\(CRTPORT+1, pos>>8\);) 161.8613 Tj
-5.2213 -284.8008 Td
(7427   outb\(CRTPORT, 15\);) 130.5333 Tj
-5.2213 -294.2942 Td
(7428   outb\(CRTPORT+1, pos\);) 146.1973 Tj
-5.2213 -303.7875 Td
(7429   crt[pos] = ' ' | 0x0700;) 161.8613 Tj
-5.2213 -313.2809 Td
(7430 }) 31.328 Tj
-5.2213 -322.7743 Td
(7431 ) 26.1067 Tj
-5.2213 -332.2676 Td
(7432 void) 46.992 Tj
-5.2213 -341.761 Td
(7433 cons_putc\(int c\)) 109.648 Tj
-5.2213 -351.2543 Td
(7434 {) 31.328 Tj
-5.2213 -360.7477 Td
(7435   if\(panicked\){) 104.4266 Tj
-5.2213 -370.2411 Td
(7436     cli\(\);) 78.32 Tj
-5.2213 -379.7344 Td
(7437     for\(;;\)) 83.5413 Tj
-5.2213 -389.2278 Td
(7438       ;) 62.656 Tj
-5.2213 -398.7211 Td
(7439   }) 41.7707 Tj
-5.2213 -408.2145 Td
(7440 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7441   lpt_putc\(c\);) 99.2053 Tj
-5.2213 -427.2012 Td
(7442   cga_putc\(c\);) 99.2053 Tj
-5.2213 -436.6946 Td
(7443 }) 31.328 Tj
-5.2213 -446.1879 Td
(7444 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7445 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7446 ) 26.1067 Tj
-5.2213 -474.668 Td
(7447 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7448 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7449 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 74) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 3) 198.4106 Tj
-5.2213 -28.4801 Td
(7450 void) 46.992 Tj
-5.2213 -37.9735 Td
(7451 printintlen\(int xx, int base, int sgn, int len, char fill\
\)) 328.9439 Tj
-5.2213 -47.4668 Td
(7452 {) 31.328 Tj
-5.2213 -56.9602 Td
(7453   static char digits[] = "0123456789ABCDEF";) 255.8453 Tj
-5.2213 -66.4535 Td
(7454   char buf[16];) 104.4266 Tj
-5.2213 -75.9469 Td
(7455   int i = 0, neg = 0, j = 0;) 172.304 Tj
-5.2213 -85.4403 Td
(7456   uint x;) 73.0986 Tj
-5.2213 -94.9336 Td
(7457 ) 26.1067 Tj
-5.2213 -104.427 Td
(7458   if\(sgn && xx < 0\){) 130.5333 Tj
-5.2213 -113.9203 Td
(7459     neg = 1;) 88.7626 Tj
-5.2213 -123.4137 Td
(7460     x = 0 - xx;) 104.4266 Tj
-5.2213 -132.9071 Td
(7461   } else {) 78.32 Tj
-5.2213 -142.4004 Td
(7462     x = xx;) 83.5413 Tj
-5.2213 -151.8938 Td
(7463   }) 41.7707 Tj
-5.2213 -161.3871 Td
(7464 ) 26.1067 Tj
-5.2213 -170.8805 Td
(7465   do{) 52.2133 Tj
-5.2213 -180.3739 Td
(7466     buf[i++] = digits[x % base];) 193.1893 Tj
-5.2213 -189.8672 Td
(7467   }while\(\(x /= base\) != 0\);) 167.0826 Tj
-5.2213 -199.3606 Td
(7468   if\(neg\)) 73.0986 Tj
-5.2213 -208.8539 Td
(7469     buf[i++] = '-';) 125.312 Tj
-5.2213 -218.3473 Td
(7470 ) 26.1067 Tj
-5.2213 -227.8407 Td
(7471   if \(i < len\)) 99.2053 Tj
-5.2213 -237.334 Td
(7472   {) 41.7707 Tj
-5.2213 -246.8274 Td
(7473       if \(neg\)) 99.2053 Tj
-5.2213 -256.3207 Td
(7474       {) 62.656 Tj
-5.2213 -265.8141 Td
(7475           cons_putc\('-'\);) 156.64 Tj
-5.2213 -275.3075 Td
(7476           i--;) 99.2053 Tj
-5.2213 -284.8008 Td
(7477       }) 62.656 Tj
-5.2213 -294.2942 Td
(7478       j = len - i;) 120.0906 Tj
-5.2213 -303.7875 Td
(7479       while \(j-- > 0\)) 135.7546 Tj
-5.2213 -313.2809 Td
(7480           cons_putc\(fill\);) 161.8613 Tj
-5.2213 -322.7743 Td
(7481   }) 41.7707 Tj
-5.2213 -332.2676 Td
(7482   while\(--i >= 0\)) 114.8693 Tj
-5.2213 -341.761 Td
(7483     cons_putc\(buf[i]\);) 140.976 Tj
-5.2213 -351.2543 Td
(7484 }) 31.328 Tj
-5.2213 -360.7477 Td
(7485 ) 26.1067 Tj
-5.2213 -370.2411 Td
(7486 ) 26.1067 Tj
-5.2213 -379.7344 Td
(7487 ) 26.1067 Tj
-5.2213 -389.2278 Td
(7488 ) 26.1067 Tj
-5.2213 -398.7211 Td
(7489 ) 26.1067 Tj
-5.2213 -408.2145 Td
(7490 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7491 ) 26.1067 Tj
-5.2213 -427.2012 Td
(7492 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7493 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7494 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7495 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7496 ) 26.1067 Tj
-5.2213 -474.668 Td
(7497 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7498 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7499 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 74) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 84 84
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 4) 198.4106 Tj
-5.2213 -28.4801 Td
(7500 void) 46.992 Tj
-5.2213 -37.9735 Td
(7501 printint\(int xx, int base, int sgn\)) 208.8533 Tj
-5.2213 -47.4668 Td
(7502 {) 31.328 Tj
-5.2213 -56.9602 Td
(7503   static char digits[] = "0123456789ABCDEF";) 255.8453 Tj
-5.2213 -66.4535 Td
(7504   char buf[16];) 104.4266 Tj
-5.2213 -75.9469 Td
(7505   int i = 0, neg = 0;) 135.7546 Tj
-5.2213 -85.4403 Td
(7506   uint x;) 73.0986 Tj
-5.2213 -94.9336 Td
(7507 ) 26.1067 Tj
-5.2213 -104.427 Td
(7508   if\(sgn && xx < 0\){) 130.5333 Tj
-5.2213 -113.9203 Td
(7509     neg = 1;) 88.7626 Tj
-5.2213 -123.4137 Td
(7510     x = 0 - xx;) 104.4266 Tj
-5.2213 -132.9071 Td
(7511   } else {) 78.32 Tj
-5.2213 -142.4004 Td
(7512     x = xx;) 83.5413 Tj
-5.2213 -151.8938 Td
(7513   }) 41.7707 Tj
-5.2213 -161.3871 Td
(7514 ) 26.1067 Tj
-5.2213 -170.8805 Td
(7515   do{) 52.2133 Tj
-5.2213 -180.3739 Td
(7516     buf[i++] = digits[x % base];) 193.1893 Tj
-5.2213 -189.8672 Td
(7517   }while\(\(x /= base\) != 0\);) 167.0826 Tj
-5.2213 -199.3606 Td
(7518   if\(neg\)) 73.0986 Tj
-5.2213 -208.8539 Td
(7519     buf[i++] = '-';) 125.312 Tj
-5.2213 -218.3473 Td
(7520 ) 26.1067 Tj
-5.2213 -227.8407 Td
(7521   while\(--i >= 0\)) 114.8693 Tj
-5.2213 -237.334 Td
(7522     cons_putc\(buf[i]\);) 140.976 Tj
-5.2213 -246.8274 Td
(7523 }) 31.328 Tj
-5.2213 -256.3207 Td
(7524 ) 26.1067 Tj
-5.2213 -265.8141 Td
(7525 enum fmt_types {) 109.648 Tj
-5.2213 -275.3075 Td
(7526     CHAR,) 73.0986 Tj
-5.2213 -284.8008 Td
(7527     SHORT,) 78.32 Tj
-5.2213 -294.2942 Td
(7528     LONG,) 73.0986 Tj
-5.2213 -303.7875 Td
(7529     LONGLONG,) 93.984 Tj
-5.2213 -313.2809 Td
(7530 };) 36.5493 Tj
-5.2213 -322.7743 Td
(7531 ) 26.1067 Tj
-5.2213 -332.2676 Td
(7532 // Print to the console. only understands %d, %x, %p, %s.) 323.7226 Tj
-5.2213 -341.761 Td
(7533 void) 46.992 Tj
-5.2213 -351.2543 Td
(7534 cprintf\(char *fmt, ...\)) 146.1973 Tj
-5.2213 -360.7477 Td
(7535 {) 31.328 Tj
-5.2213 -370.2411 Td
(7536   int i, c, state, locking, len = 0;) 214.0746 Tj
-5.2213 -379.7344 Td
(7537   uint *argp;) 93.984 Tj
-5.2213 -389.2278 Td
(7538   char *s, last, fill;) 140.976 Tj
-5.2213 -398.7211 Td
(7539   enum fmt_types type;) 140.976 Tj
-5.2213 -408.2145 Td
(7540 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7541   locking = use_console_lock;) 177.5253 Tj
-5.2213 -427.2012 Td
(7542   if\(locking\)) 93.984 Tj
-5.2213 -436.6946 Td
(7543     acquire\(&console_lock\);) 167.0826 Tj
-5.2213 -446.1879 Td
(7544 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7545   argp = \(uint*\)\(void*\)&fmt + 1;) 193.1893 Tj
-5.2213 -465.1747 Td
(7546   state = 0;) 88.7626 Tj
-5.2213 -474.668 Td
(7547   c = 0;) 67.8773 Tj
-5.2213 -484.1614 Td
(7548   fill = ' ';) 93.984 Tj
-5.2213 -493.6547 Td
(7549   len = -1;) 83.5413 Tj
-5.2213 -522.1348 Td
(Sheet 75) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 5) 198.4106 Tj
-5.2213 -28.4801 Td
(7550   for\(i = 0; fmt[i]; i++\){) 161.8613 Tj
-5.2213 -37.9735 Td
(7551     last = c;) 93.984 Tj
-5.2213 -47.4668 Td
(7552     c = fmt[i] & 0xff;) 140.976 Tj
-5.2213 -56.9602 Td
(7553     switch\(state\){) 120.0906 Tj
-5.2213 -66.4535 Td
(7554     case 0:) 83.5413 Tj
-5.2213 -75.9469 Td
(7555       if\(c == '%'\)) 120.0906 Tj
-5.2213 -85.4403 Td
(7556         state = '%';) 130.5333 Tj
-5.2213 -94.9336 Td
(7557       else) 78.32 Tj
-5.2213 -104.427 Td
(7558         cons_putc\(c\);) 135.7546 Tj
-5.2213 -113.9203 Td
(7559       break;) 88.7626 Tj
-5.2213 -123.4137 Td
(7560 ) 26.1067 Tj
-5.2213 -132.9071 Td
(7561     case '%':) 93.984 Tj
-5.2213 -142.4004 Td
(7562       switch\(c\){) 109.648 Tj
-5.2213 -151.8938 Td
(7563       case 'l':) 104.4266 Tj
-5.2213 -161.3871 Td
(7564         if \(last == 'l'\)) 151.4186 Tj
-5.2213 -170.8805 Td
(7565         {) 73.0986 Tj
-5.2213 -180.3739 Td
(7566             // ll: long long) 172.304 Tj
-5.2213 -189.8672 Td
(7567             type = LONGLONG;) 172.304 Tj
-5.2213 -199.3606 Td
(7568         } else {) 109.648 Tj
-5.2213 -208.8539 Td
(7569             type = LONG;) 151.4186 Tj
-5.2213 -218.3473 Td
(7570         }) 73.0986 Tj
-5.2213 -227.8407 Td
(7571         break;) 99.2053 Tj
-5.2213 -237.334 Td
(7572       case 'h':) 104.4266 Tj
-5.2213 -246.8274 Td
(7573         if \(last == 'h'\)) 151.4186 Tj
-5.2213 -256.3207 Td
(7574         {) 73.0986 Tj
-5.2213 -265.8141 Td
(7575             // hh: char) 146.1973 Tj
-5.2213 -275.3075 Td
(7576             type = CHAR;) 151.4186 Tj
-5.2213 -284.8008 Td
(7577         } else {) 109.648 Tj
-5.2213 -294.2942 Td
(7578             type = SHORT;) 156.64 Tj
-5.2213 -303.7875 Td
(7579         }) 73.0986 Tj
-5.2213 -313.2809 Td
(7580         break;) 99.2053 Tj
-5.2213 -322.7743 Td
(7581       case 'c':) 104.4266 Tj
-5.2213 -332.2676 Td
(7582         cons_putc\(*argp++\);) 167.0826 Tj
-5.2213 -341.761 Td
(7583         len = -1;) 114.8693 Tj
-5.2213 -351.2543 Td
(7584         state = 0;) 120.0906 Tj
-5.2213 -360.7477 Td
(7585         break;) 99.2053 Tj
-5.2213 -370.2411 Td
(7586       case 'd':) 104.4266 Tj
-5.2213 -379.7344 Td
(7587       case 'i':) 104.4266 Tj
-5.2213 -389.2278 Td
(7588         if \(len != -1\)) 140.976 Tj
-5.2213 -398.7211 Td
(7589             printintlen\(*argp++, 10, 1, len, fill\);) 292.3946 Tj
-5.2213 -408.2145 Td
(7590         else) 88.7626 Tj
-5.2213 -417.7079 Td
(7591             printint\(*argp++, 10, 1\);) 219.2959 Tj
-5.2213 -427.2012 Td
(7592         fill = ' ';) 125.312 Tj
-5.2213 -436.6946 Td
(7593         len = -1;) 114.8693 Tj
-5.2213 -446.1879 Td
(7594         state = 0;) 120.0906 Tj
-5.2213 -455.6813 Td
(7595         break;) 99.2053 Tj
-5.2213 -465.1747 Td
(7596       case 'u':) 104.4266 Tj
-5.2213 -474.668 Td
(7597         if \(len != -1\)) 140.976 Tj
-5.2213 -484.1614 Td
(7598             printintlen\(*argp++, 10, 0, len, fill\);) 292.3946 Tj
-5.2213 -493.6547 Td
(7599         else) 88.7626 Tj
-5.2213 -522.1348 Td
(Sheet 75) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 85 85
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 6) 198.4106 Tj
-5.2213 -28.4801 Td
(7600             printint\(*argp++, 10, 0\);) 219.2959 Tj
-5.2213 -37.9735 Td
(7601         fill = ' ';) 125.312 Tj
-5.2213 -47.4668 Td
(7602         len = -1;) 114.8693 Tj
-5.2213 -56.9602 Td
(7603         state = 0;) 120.0906 Tj
-5.2213 -66.4535 Td
(7604         break;) 99.2053 Tj
-5.2213 -75.9469 Td
(7605       case 'x':) 104.4266 Tj
-5.2213 -85.4403 Td
(7606       case 'p':) 104.4266 Tj
-5.2213 -94.9336 Td
(7607         if \(len != -1\)) 140.976 Tj
-5.2213 -104.427 Td
(7608             printintlen\(*argp++, 16, 0, len, fill\);) 292.3946 Tj
-5.2213 -113.9203 Td
(7609         else) 88.7626 Tj
-5.2213 -123.4137 Td
(7610             printint\(*argp++, 16, 0\);) 219.2959 Tj
-5.2213 -132.9071 Td
(7611         fill = ' ';) 125.312 Tj
-5.2213 -142.4004 Td
(7612         len = -1;) 114.8693 Tj
-5.2213 -151.8938 Td
(7613         state = 0;) 120.0906 Tj
-5.2213 -161.3871 Td
(7614         break;) 99.2053 Tj
-5.2213 -170.8805 Td
(7615       case 's':) 104.4266 Tj
-5.2213 -180.3739 Td
(7616         s = \(char*\)*argp++;) 167.0826 Tj
-5.2213 -189.8672 Td
(7617         if\(s == 0\)) 120.0906 Tj
-5.2213 -199.3606 Td
(7618           s = "\(null\)";) 146.1973 Tj
-5.2213 -208.8539 Td
(7619         for\(; *s; s++\)) 140.976 Tj
-5.2213 -218.3473 Td
(7620           cons_putc\(*s\);) 151.4186 Tj
-5.2213 -227.8407 Td
(7621         len = -1;) 114.8693 Tj
-5.2213 -237.334 Td
(7622         state = 0;) 120.0906 Tj
-5.2213 -246.8274 Td
(7623         break;) 99.2053 Tj
-5.2213 -256.3207 Td
(7624       case '%':) 104.4266 Tj
-5.2213 -265.8141 Td
(7625         cons_putc\('%'\);) 146.1973 Tj
-5.2213 -275.3075 Td
(7626         state = 0;) 120.0906 Tj
-5.2213 -284.8008 Td
(7627         break;) 99.2053 Tj
-5.2213 -294.2942 Td
(7628       case '0':) 104.4266 Tj
-5.2213 -303.7875 Td
(7629         if \(len == -1\)) 140.976 Tj
-5.2213 -313.2809 Td
(7630         {) 73.0986 Tj
-5.2213 -322.7743 Td
(7631             len = 0;) 130.5333 Tj
-5.2213 -332.2676 Td
(7632             fill = '0';) 146.1973 Tj
-5.2213 -341.761 Td
(7633         } else {) 109.648 Tj
-5.2213 -351.2543 Td
(7634             len = len * 10;) 167.0826 Tj
-5.2213 -360.7477 Td
(7635         }) 73.0986 Tj
-5.2213 -370.2411 Td
(7636         break;) 99.2053 Tj
-5.2213 -379.7344 Td
(7637       case '1':) 104.4266 Tj
-5.2213 -389.2278 Td
(7638       case '2':) 104.4266 Tj
-5.2213 -398.7211 Td
(7639       case '3':) 104.4266 Tj
-5.2213 -408.2145 Td
(7640       case '4':) 104.4266 Tj
-5.2213 -417.7079 Td
(7641       case '5':) 104.4266 Tj
-5.2213 -427.2012 Td
(7642       case '6':) 104.4266 Tj
-5.2213 -436.6946 Td
(7643       case '7':) 104.4266 Tj
-5.2213 -446.1879 Td
(7644       case '8':) 104.4266 Tj
-5.2213 -455.6813 Td
(7645       case '9':) 104.4266 Tj
-5.2213 -465.1747 Td
(7646         if \(len == -1\)) 140.976 Tj
-5.2213 -474.668 Td
(7647             len = c - '0';) 161.8613 Tj
-5.2213 -484.1614 Td
(7648         else) 88.7626 Tj
-5.2213 -493.6547 Td
(7649             len = len * 10 + c - '0';) 219.2959 Tj
-5.2213 -522.1348 Td
(Sheet 76) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 7) 198.4106 Tj
-5.2213 -28.4801 Td
(7650         break;) 99.2053 Tj
-5.2213 -37.9735 Td
(7651       default:) 99.2053 Tj
-5.2213 -47.4668 Td
(7652         // Print unknown % sequence to draw attention.) 308.0586 Tj
-5.2213 -56.9602 Td
(7653         cons_putc\('%'\);) 146.1973 Tj
-5.2213 -66.4535 Td
(7654         cons_putc\(c\);) 135.7546 Tj
-5.2213 -75.9469 Td
(7655         break;) 99.2053 Tj
-5.2213 -85.4403 Td
(7656       }) 62.656 Tj
-5.2213 -94.9336 Td
(7657       break;) 88.7626 Tj
-5.2213 -104.427 Td
(7658     }) 52.2133 Tj
-5.2213 -113.9203 Td
(7659   }) 41.7707 Tj
-5.2213 -123.4137 Td
(7660 ) 26.1067 Tj
-5.2213 -132.9071 Td
(7661   if\(locking\)) 93.984 Tj
-5.2213 -142.4004 Td
(7662     release\(&console_lock\);) 167.0826 Tj
-5.2213 -151.8938 Td
(7663 }) 31.328 Tj
-5.2213 -161.3871 Td
(7664 ) 26.1067 Tj
-5.2213 -170.8805 Td
(7665 int) 41.7707 Tj
-5.2213 -180.3739 Td
(7666 console_write\(struct inode *ip, char *buf, int n\)) 281.9519 Tj
-5.2213 -189.8672 Td
(7667 {) 31.328 Tj
-5.2213 -199.3606 Td
(7668   int i;) 67.8773 Tj
-5.2213 -208.8539 Td
(7669 ) 26.1067 Tj
-5.2213 -218.3473 Td
(7670   iunlock\(ip\);) 99.2053 Tj
-5.2213 -227.8407 Td
(7671   acquire\(&console_lock\);) 156.64 Tj
-5.2213 -237.334 Td
(7672   for\(i = 0; i < n; i++\)) 151.4186 Tj
-5.2213 -246.8274 Td
(7673     cons_putc\(buf[i] & 0xff\);) 177.5253 Tj
-5.2213 -256.3207 Td
(7674   release\(&console_lock\);) 156.64 Tj
-5.2213 -265.8141 Td
(7675   ilock\(ip\);) 88.7626 Tj
-5.2213 -275.3075 Td
(7676 ) 26.1067 Tj
-5.2213 -284.8008 Td
(7677   return n;) 83.5413 Tj
-5.2213 -294.2942 Td
(7678 }) 31.328 Tj
-5.2213 -303.7875 Td
(7679 ) 26.1067 Tj
-5.2213 -313.2809 Td
(7680 #define INPUT_BUF 128) 135.7546 Tj
-5.2213 -322.7743 Td
(7681 struct {) 67.8773 Tj
-5.2213 -332.2676 Td
(7682   struct spinlock lock;) 146.1973 Tj
-5.2213 -341.761 Td
(7683   char buf[INPUT_BUF];) 140.976 Tj
-5.2213 -351.2543 Td
(7684   int r;  // Read index) 146.1973 Tj
-5.2213 -360.7477 Td
(7685   int w;  // Write index) 151.4186 Tj
-5.2213 -370.2411 Td
(7686   int e;  // Edit index) 146.1973 Tj
-5.2213 -379.7344 Td
(7687 } input;) 67.8773 Tj
-5.2213 -389.2278 Td
(7688 ) 26.1067 Tj
-5.2213 -398.7211 Td
(7689 #define C\(x\)  \(\(x\)-'@'\)  // Control-x) 219.2959 Tj
-5.2213 -408.2145 Td
(7690 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7691 void) 46.992 Tj
-5.2213 -427.2012 Td
(7692 console_intr\(int \(*getc\)\(void\)\)) 187.968 Tj
-5.2213 -436.6946 Td
(7693 {) 31.328 Tj
-5.2213 -446.1879 Td
(7694   int c;) 67.8773 Tj
-5.2213 -455.6813 Td
(7695 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7696   acquire\(&input.lock\);) 146.1973 Tj
-5.2213 -474.668 Td
(7697   while\(\(c = getc\(\)\) >= 0\){) 167.0826 Tj
-5.2213 -484.1614 Td
(7698     switch\(c\){) 99.2053 Tj
-5.2213 -493.6547 Td
(7699     case C\('P'\):  // Process listing.) 219.2959 Tj
-5.2213 -522.1348 Td
(Sheet 76) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 86 86
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 8) 198.4106 Tj
-5.2213 -28.4801 Td
(7700       procdump\(\);) 114.8693 Tj
-5.2213 -37.9735 Td
(7701       break;) 88.7626 Tj
-5.2213 -47.4668 Td
(7702     case C\('U'\):  // Kill line.) 187.968 Tj
-5.2213 -56.9602 Td
(7703       while\(input.e > input.w &&) 193.1893 Tj
-5.2213 -66.4535 Td
(7704             input.buf[\(input.e-1\) % INPUT_BUF] != '\\n'\)\
{) 318.5013 Tj
-5.2213 -75.9469 Td
(7705         input.e--;) 120.0906 Tj
-5.2213 -85.4403 Td
(7706         cons_putc\(BACKSPACE\);) 177.5253 Tj
-5.2213 -94.9336 Td
(7707       }) 62.656 Tj
-5.2213 -104.427 Td
(7708       break;) 88.7626 Tj
-5.2213 -113.9203 Td
(7709     case C\('H'\):  // Backspace) 182.7466 Tj
-5.2213 -123.4137 Td
(7710       if\(input.e > input.w\){) 172.304 Tj
-5.2213 -132.9071 Td
(7711         input.e--;) 120.0906 Tj
-5.2213 -142.4004 Td
(7712         cons_putc\(BACKSPACE\);) 177.5253 Tj
-5.2213 -151.8938 Td
(7713       }) 62.656 Tj
-5.2213 -161.3871 Td
(7714       break;) 88.7626 Tj
-5.2213 -170.8805 Td
(7715     default:) 88.7626 Tj
-5.2213 -180.3739 Td
(7716       if\(c != 0 && input.e < input.r+INPUT_BUF\){) 276.7306 Tj
-5.2213 -189.8672 Td
(7717         input.buf[input.e++ % INPUT_BUF] = c;) 261.0666 Tj
-5.2213 -199.3606 Td
(7718         cons_putc\(c\);) 135.7546 Tj
-5.2213 -208.8539 Td
(7719         if\(c == '\\n' || c == C\('D'\) || input.e == inpu\
t.r+INPUT_BUF\){) 386.3786 Tj
-5.2213 -218.3473 Td
(7720           input.w = input.e;) 172.304 Tj
-5.2213 -227.8407 Td
(7721           wakeup\(&input.r\);) 167.0826 Tj
-5.2213 -237.334 Td
(7722         }) 73.0986 Tj
-5.2213 -246.8274 Td
(7723       }) 62.656 Tj
-5.2213 -256.3207 Td
(7724       break;) 88.7626 Tj
-5.2213 -265.8141 Td
(7725     }) 52.2133 Tj
-5.2213 -275.3075 Td
(7726   }) 41.7707 Tj
-5.2213 -284.8008 Td
(7727   release\(&input.lock\);) 146.1973 Tj
-5.2213 -294.2942 Td
(7728 }) 31.328 Tj
-5.2213 -303.7875 Td
(7729 ) 26.1067 Tj
-5.2213 -313.2809 Td
(7730 void) 46.992 Tj
-5.2213 -322.7743 Td
(7731 thread_stub\(void * arg\)) 146.1973 Tj
-5.2213 -332.2676 Td
(7732 {) 31.328 Tj
-5.2213 -341.761 Td
(7733 /*    static int id = 0;) 151.4186 Tj
-5.2213 -351.2543 Td
(7734     id++;) 73.0986 Tj
-5.2213 -360.7477 Td
(7735 //    int myid = id;) 130.5333 Tj
-5.2213 -370.2411 Td
(7736     cprintf\("thread_stub started! arg: %d\\n", arg\);) 292.3946 Tj
-5.2213 -379.7344 Td
(7737     int i;) 78.32 Tj
-5.2213 -389.2278 Td
(7738     for \(i=0; i<100000000; i++\)) 187.968 Tj
-5.2213 -398.7211 Td
(7739     {) 52.2133 Tj
-5.2213 -408.2145 Td
(7740         if \(i % 100000 == 0\)) 172.304 Tj
-5.2213 -417.7079 Td
(7741         cprintf\("%d:", myid\);) 177.5253 Tj
-5.2213 -427.2012 Td
(7742     }*/) 62.656 Tj
-5.2213 -436.6946 Td
(7743   static int in = 0;) 130.5333 Tj
-5.2213 -446.1879 Td
(7744   if \(in\)) 73.0986 Tj
-5.2213 -455.6813 Td
(7745       return;) 93.984 Tj
-5.2213 -465.1747 Td
(7746   in = 1;) 73.0986 Tj
-5.2213 -474.668 Td
(7747   unsigned char data[512];) 161.8613 Tj
-5.2213 -484.1614 Td
(7748   int s;) 67.8773 Tj
-5.2213 -493.6547 Td
(7749   int len;) 78.32 Tj
-5.2213 -522.1348 Td
(Sheet 77) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 9) 198.4106 Tj
-5.2213 -28.4801 Td
(7750   s = lwip_socket\(PF_INET, SOCK_STREAM, 0\);) 250.6239 Tj
-5.2213 -37.9735 Td
(7751   struct sockaddr_in sa;) 151.4186 Tj
-5.2213 -47.4668 Td
(7752   sa.sin_family = AF_INET;) 161.8613 Tj
-5.2213 -56.9602 Td
(7753   sa.sin_port = htons\(80\);) 161.8613 Tj
-5.2213 -66.4535 Td
(7754   sa.sin_addr.s_addr = inet_addr\("192.168.1.1"\);) 276.7306 Tj
-5.2213 -75.9469 Td
(7755   len = 1;) 78.32 Tj
-5.2213 -85.4403 Td
(7756   lwip_setsockopt\(s, SOL_SOCKET, SO_REUSEPORT, &len, size\
of\(int\)\);) 370.7146 Tj
-5.2213 -94.9336 Td
(7757   lwip_bind\(s, &sa, sizeof\(sa\)\);) 193.1893 Tj
-5.2213 -104.427 Td
(7758   int addrlen = sizeof\(sa\);) 167.0826 Tj
-5.2213 -113.9203 Td
(7759 //  len = lwip_recvfrom\(s, data, sizeof\(data\), 0, &sa, \
&addrlen\);) 365.4932 Tj
-5.2213 -123.4137 Td
(7760 //  lwip_sendto\(s, data, len, 0, &sa, addrlen\);) 271.5093 Tj
-5.2213 -132.9071 Td
(7761   int client;) 93.984 Tj
-5.2213 -142.4004 Td
(7762   lwip_listen\(s, 1\);) 130.5333 Tj
-5.2213 -151.8938 Td
(7763   while \(\(client = lwip_accept\(s, &sa, &addrlen\)\) > 0\
\)) 308.0586 Tj
-5.2213 -161.3871 Td
(7764   {) 41.7707 Tj
-5.2213 -170.8805 Td
(7765       do {) 78.32 Tj
-5.2213 -180.3739 Td
(7766         len = lwip_read\(client, data, sizeof\(data\)\);) 297.6159 Tj
-5.2213 -189.8672 Td
(7767 //        cprintf\("received %d bytes\\n", len\);) 266.2879 Tj
-5.2213 -199.3606 Td
(7768         lwip_send\(client, data, len, 0\);) 234.9599 Tj
-5.2213 -208.8539 Td
(7769         if \(data[0] == '!'\)) 167.0826 Tj
-5.2213 -218.3473 Td
(7770             len = -1;) 135.7546 Tj
-5.2213 -227.8407 Td
(7771       } while \(len > 0\);) 151.4186 Tj
-5.2213 -237.334 Td
(7772       lwip_close\(client\);) 156.64 Tj
-5.2213 -246.8274 Td
(7773   }) 41.7707 Tj
-5.2213 -256.3207 Td
(7774   lwip_close\(s\);) 109.648 Tj
-5.2213 -265.8141 Td
(7775   in = 0;) 73.0986 Tj
-5.2213 -275.3075 Td
(7776 }) 31.328 Tj
-5.2213 -284.8008 Td
(7777 ) 26.1067 Tj
-5.2213 -294.2942 Td
(7778 ) 26.1067 Tj
-5.2213 -303.7875 Td
(7779 int) 41.7707 Tj
-5.2213 -313.2809 Td
(7780 console_read\(struct inode *ip, char *dst, int n\)) 276.7306 Tj
-5.2213 -322.7743 Td
(7781 {) 31.328 Tj
-5.2213 -332.2676 Td
(7782   uint target;) 99.2053 Tj
-5.2213 -341.761 Td
(7783   int c;) 67.8773 Tj
-5.2213 -351.2543 Td
(7784   int ret;) 78.32 Tj
-5.2213 -360.7477 Td
(7785 //  unsigned char data[100];) 172.304 Tj
-5.2213 -370.2411 Td
(7786   int mark;) 83.5413 Tj
-5.2213 -379.7344 Td
(7787 ) 26.1067 Tj
-5.2213 -389.2278 Td
(7788 //  kproc_start\(thread_stub, 0, 0, 0, "[stub thread]"\);) 313.2799 Tj
-5.2213 -398.7211 Td
(7789 //  for \(c=0; c<10; c++\)) 151.4186 Tj
-5.2213 -408.2145 Td
(7790 //      data[c] = 0xda;) 146.1973 Tj
-5.2213 -417.7079 Td
(7791   iunlock\(ip\);) 99.2053 Tj
-5.2213 -427.2012 Td
(7792   target = n;) 93.984 Tj
-5.2213 -436.6946 Td
(7793   acquire\(&input.lock\);) 146.1973 Tj
-5.2213 -446.1879 Td
(7794   while\(n > 0\){) 104.4266 Tj
-5.2213 -455.6813 Td
(7795     while\(input.r == input.w\){) 182.7466 Tj
-5.2213 -465.1747 Td
(7796       if\(cp->killed\){) 135.7546 Tj
-5.2213 -474.668 Td
(7797         release\(&input.lock\);) 177.5253 Tj
-5.2213 -484.1614 Td
(7798         ilock\(ip\);) 120.0906 Tj
-5.2213 -493.6547 Td
(7799         return -1;) 120.0906 Tj
-5.2213 -522.1348 Td
(Sheet 77) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 87 87
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 10) 203.6319 Tj
-5.2213 -28.4801 Td
(7800       }) 62.656 Tj
-5.2213 -37.9735 Td
(7801       mark = 0;) 104.4266 Tj
-5.2213 -47.4668 Td
(7802       sleep\(&input.r, &input.lock\);) 208.8533 Tj
-5.2213 -56.9602 Td
(7803 /*      do {) 88.7626 Tj
-5.2213 -66.4535 Td
(7804         ret = msleep_spin\(&input.r, &input.lock, 1000\);) 313.2799 Tj
-5.2213 -75.9469 Td
(7805        if \(ret\)) 104.4266 Tj
-5.2213 -85.4403 Td
(7806         {*/) 83.5413 Tj
-5.2213 -94.9336 Td
(7807 //            if \(\(mark = lwip_recv\(s, data,) 255.8453 Tj
-5.2213 -104.427 Td
(7808 //            sizeof\(data\), MSG_DONTWAIT\)\) > 0\)) 271.5093 Tj
-5.2213 -113.9203 Td
(7809 //                cprintf\("received from 192.168.1.1:80: \
%d\\n", mark\);) 391.5999 Tj
-5.2213 -123.4137 Td
(7810 /*            if \(mark == 0\)) 172.304 Tj
-5.2213 -132.9071 Td
(7811             {) 93.984 Tj
-5.2213 -142.4004 Td
(7812                 for \( ; mark < 64; mark ++\)) 250.6239 Tj
-5.2213 -151.8938 Td
(7813                     e100_send\(data, sizeof\(data\)\);) 287.1733 Tj
-5.2213 -161.3871 Td
(7814             }) 93.984 Tj
-5.2213 -170.8805 Td
(7815             int len = e100_receive\(data, sizeof\(data\)\)\
;) 313.2799 Tj
-5.2213 -180.3739 Td
(7816             cprintf\("received: %d bytes\\n", len\);) 281.9519 Tj
-5.2213 -189.8672 Td
(7817             int i;) 120.0906 Tj
-5.2213 -199.3606 Td
(7818             for \(i=0; i<len; i++\)) 198.4106 Tj
-5.2213 -208.8539 Td
(7819             {) 93.984 Tj
-5.2213 -218.3473 Td
(7820                 cprintf\("%02x ", data[i]\);) 245.4026 Tj
-5.2213 -227.8407 Td
(7821                 if \(\(i+1\) % 10 == 0\)) 214.0746 Tj
-5.2213 -237.334 Td
(7822                     cprintf\("\\n"\);) 203.6319 Tj
-5.2213 -246.8274 Td
(7823             }) 93.984 Tj
-5.2213 -256.3207 Td
(7824             cprintf\("\\n"\);*/) 172.304 Tj
-5.2213 -265.8141 Td
(7825 //            kproc_start\(thread_stub, \(void *\)100, 0, \
0\);) 328.9439 Tj
-5.2213 -275.3075 Td
(7826 //            cprintf\("XXX faster!!\\n"\);) 234.9599 Tj
-5.2213 -284.8008 Td
(7827 /*        }) 83.5413 Tj
-5.2213 -294.2942 Td
(7828       } while \(ret\);*/) 140.976 Tj
-5.2213 -303.7875 Td
(7829     }) 52.2133 Tj
-5.2213 -313.2809 Td
(7830     c = input.buf[input.r++ % INPUT_BUF];) 240.1813 Tj
-5.2213 -322.7743 Td
(7831     if\(c == C\('D'\)\){  // EOF) 172.304 Tj
-5.2213 -332.2676 Td
(7832       if\(n < target\){) 135.7546 Tj
-5.2213 -341.761 Td
(7833         // Save ^D for next time, to make sure) 266.2879 Tj
-5.2213 -351.2543 Td
(7834         // caller gets a 0-byte result.) 229.7386 Tj
-5.2213 -360.7477 Td
(7835         input.r--;) 120.0906 Tj
-5.2213 -370.2411 Td
(7836       }) 62.656 Tj
-5.2213 -379.7344 Td
(7837       break;) 88.7626 Tj
-5.2213 -389.2278 Td
(7838     }) 52.2133 Tj
-5.2213 -398.7211 Td
(7839     *dst++ = c;) 104.4266 Tj
-5.2213 -408.2145 Td
(7840     --n;) 67.8773 Tj
-5.2213 -417.7079 Td
(7841     if\(c == '\\n'\)) 114.8693 Tj
-5.2213 -427.2012 Td
(7842       break;) 88.7626 Tj
-5.2213 -436.6946 Td
(7843   }) 41.7707 Tj
-5.2213 -446.1879 Td
(7844   release\(&input.lock\);) 146.1973 Tj
-5.2213 -455.6813 Td
(7845   ilock\(ip\);) 88.7626 Tj
-5.2213 -465.1747 Td
(7846 ) 26.1067 Tj
-5.2213 -474.668 Td
(7847   return target - n;) 130.5333 Tj
-5.2213 -484.1614 Td
(7848 }) 31.328 Tj
-5.2213 -493.6547 Td
(7849 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 78) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/console.c  Page 11) 203.6319 Tj
-5.2213 -28.4801 Td
(7850 void) 46.992 Tj
-5.2213 -37.9735 Td
(7851 console_init\(void\)) 120.0906 Tj
-5.2213 -47.4668 Td
(7852 {) 31.328 Tj
-5.2213 -56.9602 Td
(7853   initlock\(&console_lock, "console"\);) 219.2959 Tj
-5.2213 -66.4535 Td
(7854   initlock\(&input.lock, "console input"\);) 240.1813 Tj
-5.2213 -75.9469 Td
(7855 ) 26.1067 Tj
-5.2213 -85.4403 Td
(7856   devsw[CONSOLE].write = console_write;) 229.7386 Tj
-5.2213 -94.9336 Td
(7857   devsw[CONSOLE].read = console_read;) 219.2959 Tj
-5.2213 -104.427 Td
(7858   //use_console_lock = 1;) 156.64 Tj
-5.2213 -113.9203 Td
(7859 ) 26.1067 Tj
-5.2213 -123.4137 Td
(7860   pic_enable\(IRQ_KBD\);) 140.976 Tj
-5.2213 -132.9071 Td
(7861   ioapic_enable\(IRQ_KBD, 0\);) 172.304 Tj
-5.2213 -142.4004 Td
(7862 }) 31.328 Tj
-5.2213 -151.8938 Td
(7863 ) 26.1067 Tj
-5.2213 -161.3871 Td
(7864 void) 46.992 Tj
-5.2213 -170.8805 Td
(7865 printstack\(\)) 88.7626 Tj
-5.2213 -180.3739 Td
(7866 {) 31.328 Tj
-5.2213 -189.8672 Td
(7867   int i;) 67.8773 Tj
-5.2213 -199.3606 Td
(7868   uint ebp;) 83.5413 Tj
-5.2213 -208.8539 Td
(7869   uint pcs[10];) 104.4266 Tj
-5.2213 -218.3473 Td
(7870   cprintf\("Stack trace:\\n"\);) 172.304 Tj
-5.2213 -227.8407 Td
(7871   asm\("movl %%ebp, %0" : "=r"\(ebp\) : \);) 229.7386 Tj
-5.2213 -237.334 Td
(7872   getcallerpcs\(\(void*\)\(ebp+8\), pcs\);) 214.0746 Tj
-5.2213 -246.8274 Td
(7873   for\(i=0; i<10; i++\)) 135.7546 Tj
-5.2213 -256.3207 Td
(7874     cprintf\("0x%08x ", pcs[i]\);) 187.968 Tj
-5.2213 -265.8141 Td
(7875   cprintf\("\\n"\);) 109.648 Tj
-5.2213 -275.3075 Td
(7876 }) 31.328 Tj
-5.2213 -284.8008 Td
(7877 ) 26.1067 Tj
-5.2213 -294.2942 Td
(7878 ) 26.1067 Tj
-5.2213 -303.7875 Td
(7879 void) 46.992 Tj
-5.2213 -313.2809 Td
(7880 panic\(char *s\)) 99.2053 Tj
-5.2213 -322.7743 Td
(7881 {) 31.328 Tj
-5.2213 -332.2676 Td
(7882   int i;) 67.8773 Tj
-5.2213 -341.761 Td
(7883   uint pcs[10];) 104.4266 Tj
-5.2213 -351.2543 Td
(7884 ) 26.1067 Tj
-5.2213 -360.7477 Td
(7885   __asm __volatile\("cli"\);) 161.8613 Tj
-5.2213 -370.2411 Td
(7886   use_console_lock = 0;) 146.1973 Tj
-5.2213 -379.7344 Td
(7887   cprintf\("panic \(%d\): ", cpu\(\)\);) 198.4106 Tj
-5.2213 -389.2278 Td
(7888   cprintf\(s, 0\);) 109.648 Tj
-5.2213 -398.7211 Td
(7889   cprintf\("\\n", 0\);) 125.312 Tj
-5.2213 -408.2145 Td
(7890   getcallerpcs\(&s, pcs\);) 151.4186 Tj
-5.2213 -417.7079 Td
(7891   for\(i=0; i<10; i++\)) 135.7546 Tj
-5.2213 -427.2012 Td
(7892     cprintf\(" %p", pcs[i]\);) 167.0826 Tj
-5.2213 -436.6946 Td
(7893   panicked = 1; // freeze other CPU) 208.8533 Tj
-5.2213 -446.1879 Td
(7894   for\(;;\)) 73.0986 Tj
-5.2213 -455.6813 Td
(7895     ;) 52.2133 Tj
-5.2213 -465.1747 Td
(7896 }) 31.328 Tj
-5.2213 -474.668 Td
(7897 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7898 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 78) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 88 88
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/timer.c  Page 1) 187.968 Tj
-5.2213 -28.4801 Td
(7900 // Intel 8253/8254/82C54 Programmable Interval Timer \(PIT\
\).) 334.1652 Tj
-5.2213 -37.9735 Td
(7901 // Only used on uniprocessors;) 182.7466 Tj
-5.2213 -47.4668 Td
(7902 // SMP machines use the local APIC timer.) 240.1813 Tj
-5.2213 -56.9602 Td
(7903 ) 26.1067 Tj
-5.2213 -66.4535 Td
(7904 #include "types.h") 120.0906 Tj
-5.2213 -75.9469 Td
(7905 #include "defs.h") 114.8693 Tj
-5.2213 -85.4403 Td
(7906 #include "traps.h") 120.0906 Tj
-5.2213 -94.9336 Td
(7907 #include "x86.h") 109.648 Tj
-5.2213 -104.427 Td
(7908 ) 26.1067 Tj
-5.2213 -113.9203 Td
(7909 #define IO_TIMER1       0x040           // 8253 Timer #1) 318.5013 Tj
-5.2213 -123.4137 Td
(7910 ) 26.1067 Tj
-5.2213 -132.9071 Td
(7911 // Frequency of all three count-down timers;) 255.8453 Tj
-5.2213 -142.4004 Td
(7912 // \(TIMER_FREQ/freq\) is the appropriate count) 261.0666 Tj
-5.2213 -151.8938 Td
(7913 // to generate a frequency of freq Hz.) 224.5173 Tj
-5.2213 -161.3871 Td
(7914 ) 26.1067 Tj
-5.2213 -170.8805 Td
(7915 #define TIMER_FREQ      1193182) 187.968 Tj
-5.2213 -180.3739 Td
(7916 #define TIMER_DIV\(x\)    \(\(TIMER_FREQ+\(x\)/2\)/\(x\)\)) 276.7306 Tj
-5.2213 -189.8672 Td
(7917 ) 26.1067 Tj
-5.2213 -199.3606 Td
(7918 #define TIMER_MODE      \(IO_TIMER1 + 3\) // timer mode po\
rt) 328.9439 Tj
-5.2213 -208.8539 Td
(7919 #define TIMER_SEL0      0x00    // select counter 0) 292.3946 Tj
-5.2213 -218.3473 Td
(7920 #define TIMER_RATEGEN   0x04    // mode 2, rate generator) 323.7226 Tj
-5.2213 -227.8407 Td
(7921 #define TIMER_16BIT     0x30    // r/w counter 16 bits, LS\
B first) 365.4932 Tj
-5.2213 -237.334 Td
(7922 ) 26.1067 Tj
-5.2213 -246.8274 Td
(7923 void) 46.992 Tj
-5.2213 -256.3207 Td
(7924 timer_init\(void\)) 109.648 Tj
-5.2213 -265.8141 Td
(7925 {) 31.328 Tj
-5.2213 -275.3075 Td
(7926   // Interrupt 100 times/sec.) 177.5253 Tj
-5.2213 -284.8008 Td
(7927   outb\(TIMER_MODE, TIMER_SEL0 | TIMER_RATEGEN | TIMER_16B\
IT\);) 344.6079 Tj
-5.2213 -294.2942 Td
(7928   outb\(IO_TIMER1, TIMER_DIV\(100\) % 256\);) 234.9599 Tj
-5.2213 -303.7875 Td
(7929   outb\(IO_TIMER1, TIMER_DIV\(100\) / 256\);) 234.9599 Tj
-5.2213 -313.2809 Td
(7930   pic_enable\(IRQ_TIMER\);) 151.4186 Tj
-5.2213 -322.7743 Td
(7931 }) 31.328 Tj
-5.2213 -332.2676 Td
(7932 ) 26.1067 Tj
-5.2213 -341.761 Td
(7933 int) 41.7707 Tj
-5.2213 -351.2543 Td
(7934 millitime\(void\)) 104.4266 Tj
-5.2213 -360.7477 Td
(7935 {) 31.328 Tj
-5.2213 -370.2411 Td
(7936     return ticks * 10;) 140.976 Tj
-5.2213 -379.7344 Td
(7937 }) 31.328 Tj
-5.2213 -389.2278 Td
(7938 ) 26.1067 Tj
-5.2213 -398.7211 Td
(7939 ) 26.1067 Tj
-5.2213 -408.2145 Td
(7940 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7941 ) 26.1067 Tj
-5.2213 -427.2012 Td
(7942 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7943 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7944 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7945 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7946 ) 26.1067 Tj
-5.2213 -474.668 Td
(7947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 79) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.h  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(7950 #ifndef XV6_PCI_H_) 120.0906 Tj
-5.2213 -37.9735 Td
(7951 #define XV6_PCI_H_) 120.0906 Tj
-5.2213 -47.4668 Td
(7952 ) 26.1067 Tj
-5.2213 -56.9602 Td
(7953 #include "types.h") 120.0906 Tj
-5.2213 -66.4535 Td
(7954 ) 26.1067 Tj
-5.2213 -75.9469 Td
(7955 // PCI subsystem interface) 161.8613 Tj
-5.2213 -85.4403 Td
(7956 enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max }\
;) 334.1652 Tj
-5.2213 -94.9336 Td
(7957 ) 26.1067 Tj
-5.2213 -104.427 Td
(7958 struct pci_bus;) 104.4266 Tj
-5.2213 -113.9203 Td
(7959 ) 26.1067 Tj
-5.2213 -123.4137 Td
(7960 struct pci_func {) 114.8693 Tj
-5.2213 -132.9071 Td
(7961     struct pci_bus *bus;) 151.4186 Tj
-1800 TJm
(// Primary bus for bridges) 135.7546 Tj
-5.2213 -142.4004 Td
(7962 ) 26.1067 Tj
-5.2213 -151.8938 Td
(7963     uint32_t dev;) 114.8693 Tj
-5.2213 -161.3871 Td
(7964     uint32_t func;) 120.0906 Tj
-5.2213 -170.8805 Td
(7965 ) 26.1067 Tj
-5.2213 -180.3739 Td
(7966     uint32_t dev_id;) 130.5333 Tj
-5.2213 -189.8672 Td
(7967     uint32_t dev_class;) 146.1973 Tj
-5.2213 -199.3606 Td
(7968 ) 26.1067 Tj
-5.2213 -208.8539 Td
(7969     uint32_t reg_base[6];) 156.64 Tj
-5.2213 -218.3473 Td
(7970     uint32_t reg_size[6];) 156.64 Tj
-5.2213 -227.8407 Td
(7971     uint8_t irq_line;) 135.7546 Tj
-5.2213 -237.334 Td
(7972 };) 36.5493 Tj
-5.2213 -246.8274 Td
(7973 ) 26.1067 Tj
-5.2213 -256.3207 Td
(7974 struct pci_bus {) 109.648 Tj
-5.2213 -265.8141 Td
(7975     struct pci_func *parent_bridge;) 208.8533 Tj
-5.2213 -275.3075 Td
(7976     uint32_t busno;) 125.312 Tj
-5.2213 -284.8008 Td
(7977 };) 36.5493 Tj
-5.2213 -294.2942 Td
(7978 ) 26.1067 Tj
-5.2213 -303.7875 Td
(7979 int pci_init\(void\);) 125.312 Tj
-5.2213 -313.2809 Td
(7980 void pci_func_enable\(struct pci_func *f\);) 240.1813 Tj
-5.2213 -322.7743 Td
(7981 ) 26.1067 Tj
-5.2213 -332.2676 Td
(7982 int ether_send\(void *buffer, int len\);) 224.5173 Tj
-5.2213 -341.761 Td
(7983 int ether_receive\(void *buffer, int len\);) 240.1813 Tj
-5.2213 -351.2543 Td
(7984 ) 26.1067 Tj
-5.2213 -360.7477 Td
(7985 #endif) 57.4347 Tj
-5.2213 -370.2411 Td
(7986 ) 26.1067 Tj
-5.2213 -379.7344 Td
(7987 ) 26.1067 Tj
-5.2213 -389.2278 Td
(7988 ) 26.1067 Tj
-5.2213 -398.7211 Td
(7989 ) 26.1067 Tj
-5.2213 -408.2145 Td
(7990 ) 26.1067 Tj
-5.2213 -417.7079 Td
(7991 ) 26.1067 Tj
-5.2213 -427.2012 Td
(7992 ) 26.1067 Tj
-5.2213 -436.6946 Td
(7993 ) 26.1067 Tj
-5.2213 -446.1879 Td
(7994 ) 26.1067 Tj
-5.2213 -455.6813 Td
(7995 ) 26.1067 Tj
-5.2213 -465.1747 Td
(7996 ) 26.1067 Tj
-5.2213 -474.668 Td
(7997 ) 26.1067 Tj
-5.2213 -484.1614 Td
(7998 ) 26.1067 Tj
-5.2213 -493.6547 Td
(7999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 79) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 89 89
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 1) 193.1893 Tj
-5.2213 -28.4801 Td
(8000 /*) 36.5493 Tj
-600 TJm
($NetBSD: pcireg.h,v 1.45 2004/02/04 06:58:24 soren Exp $) 292.3946 Tj
-4800.01 TJm
(*/) 10.4427 Tj
-5.2213 -37.9735 Td
(8001 ) 26.1067 Tj
-5.2213 -47.4668 Td
(8002 /*) 36.5493 Tj
-5.2213 -56.9602 Td
(8003  * Copyright \(c\) 1995, 1996, 1999, 2000) 229.7386 Tj
-5.2213 -66.4535 Td
(8004  *     Christopher G. Demetriou.  All rights reserved.) 308.0586 Tj
-5.2213 -75.9469 Td
(8005  * Copyright \(c\) 1994, 1996 Charles M. Hannum.  All righ\
ts reserved.) 381.1572 Tj
-5.2213 -85.4403 Td
(8006  *) 36.5493 Tj
-5.2213 -94.9336 Td
(8007  * Redistribution and use in source and binary forms, with\
 or without) 386.3786 Tj
-5.2213 -104.427 Td
(8008  * modification, are permitted provided that the following\
 conditions) 386.3786 Tj
-5.2213 -113.9203 Td
(8009  * are met:) 83.5413 Tj
-5.2213 -123.4137 Td
(8010  * 1. Redistributions of source code must retain the above\
 copyright) 381.1572 Tj
-5.2213 -132.9071 Td
(8011  *    notice, this list of conditions and the following di\
sclaimer.) 375.9359 Tj
-5.2213 -142.4004 Td
(8012  * 2. Redistributions in binary form must reproduce the ab\
ove copyright) 396.8212 Tj
-5.2213 -151.8938 Td
(8013  *    notice, this list of conditions and the following di\
sclaimer in the) 407.2639 Tj
-5.2213 -161.3871 Td
(8014  *    documentation and/or other materials provided with t\
he distribution.) 412.4852 Tj
-5.2213 -170.8805 Td
(8015  * 3. All advertising materials mentioning features or use\
 of this software) 417.7066 Tj
-5.2213 -180.3739 Td
(8016  *    must display the following acknowledgement:) 281.9519 Tj
-5.2213 -189.8672 Td
(8017  *) 36.5493 Tj
-600 TJm
(This product includes software developed by Charles M. Hannum.) 323.7226 Tj
-5.2213 -199.3606 Td
(8018  * 4. The name of the author may not be used to endorse or\
 promote products) 417.7066 Tj
-5.2213 -208.8539 Td
(8019  *    derived from this software without specific prior wr\
itten permission.) 417.7066 Tj
-5.2213 -218.3473 Td
(8020  *) 36.5493 Tj
-5.2213 -227.8407 Td
(8021  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND A\
NY EXPRESS OR) 396.8212 Tj
-5.2213 -237.334 Td
(8022  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \
IMPLIED WARRANTIES) 422.9279 Tj
-5.2213 -246.8274 Td
(8023  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\
 ARE DISCLAIMED.) 412.4852 Tj
-5.2213 -256.3207 Td
(8024  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, \
INDIRECT,) 375.9359 Tj
-5.2213 -265.8141 Td
(8025  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGE\
S \(INCLUDING, BUT) 417.7066 Tj
-5.2213 -275.3075 Td
(8026  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERV\
ICES; LOSS OF USE,) 422.9279 Tj
-5.2213 -284.8008 Td
(8027  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION\) HOWEVER CA\
USED AND ON ANY) 402.0426 Tj
-5.2213 -294.2942 Td
(8028  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABIL\
ITY, OR TORT) 391.5999 Tj
-5.2213 -303.7875 Td
(8029  * \(INCLUDING NEGLIGENCE OR OTHERWISE\) ARISING IN ANY WA\
Y OUT OF THE USE OF) 417.7066 Tj
-5.2213 -313.2809 Td
(8030  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SU\
CH DAMAGE.) 381.1572 Tj
-5.2213 -322.7743 Td
(8031  */) 41.7707 Tj
-5.2213 -332.2676 Td
(8032 ) 26.1067 Tj
-5.2213 -341.761 Td
(8033 #ifndef _DEV_PCI_PCIREG_H_) 161.8613 Tj
-5.2213 -351.2543 Td
(8034 #define) 62.656 Tj
-2400 TJm
(_DEV_PCI_PCIREG_H_) 93.984 Tj
-5.2213 -360.7477 Td
(8035 ) 26.1067 Tj
-5.2213 -370.2411 Td
(8036 /*) 36.5493 Tj
-5.2213 -379.7344 Td
(8037  * Standardized PCI configuration information) 261.0666 Tj
-5.2213 -389.2278 Td
(8038  *) 36.5493 Tj
-5.2213 -398.7211 Td
(8039  * XXX This is not complete.) 172.304 Tj
-5.2213 -408.2145 Td
(8040  */) 41.7707 Tj
-5.2213 -417.7079 Td
(8041 ) 26.1067 Tj
-5.2213 -427.2012 Td
(8042 #include "types.h") 120.0906 Tj
-5.2213 -436.6946 Td
(8043 ) 26.1067 Tj
-5.2213 -446.1879 Td
(8044 /*) 36.5493 Tj
-5.2213 -455.6813 Td
(8045  * Device identification register; contains a vendor ID an\
d a device ID.) 402.0426 Tj
-5.2213 -465.1747 Td
(8046  */) 41.7707 Tj
-5.2213 -474.668 Td
(8047 #define) 62.656 Tj
-2400 TJm
(PCI_ID_REG) 52.2133 Tj
-13200 TJm
(0x00) 20.8853 Tj
-5.2213 -484.1614 Td
(8048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 80) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 2) 193.1893 Tj
-5.2213 -28.4801 Td
(8050 typedef uint16_t pci_vendor_id_t;) 198.4106 Tj
-5.2213 -37.9735 Td
(8051 typedef uint16_t pci_product_id_t;) 203.6319 Tj
-5.2213 -47.4668 Td
(8052 ) 26.1067 Tj
-5.2213 -56.9602 Td
(8053 #define) 62.656 Tj
-2400 TJm
(PCI_VENDOR_SHIFT) 83.5413 Tj
-14400 TJm
(0) 5.2213 Tj
-5.2213 -66.4535 Td
(8054 #define) 62.656 Tj
-2400 TJm
(PCI_VENDOR_MASK) 78.32 Tj
-15000 TJm
(0xffff) 31.328 Tj
-5.2213 -75.9469 Td
(8055 #define) 62.656 Tj
-2400 TJm
(PCI_VENDOR\(id\) \\) 83.5413 Tj
-5.2213 -85.4403 Td
(8056 ) 26.1067 Tj
-4200 TJm
(\(\(\(id\) >> PCI_VENDOR_SHIFT\) & PCI_VENDOR_MASK\)) 240.1813 Tj
-5.2213 -94.9336 Td
(8057 ) 26.1067 Tj
-5.2213 -104.427 Td
(8058 #define) 62.656 Tj
-2400 TJm
(PCI_PRODUCT_SHIFT) 88.7626 Tj
-13800 TJm
(16) 10.4427 Tj
-5.2213 -113.9203 Td
(8059 #define) 62.656 Tj
-2400 TJm
(PCI_PRODUCT_MASK) 83.5413 Tj
-14400 TJm
(0xffff) 31.328 Tj
-5.2213 -123.4137 Td
(8060 #define) 62.656 Tj
-2400 TJm
(PCI_PRODUCT\(id\) \\) 88.7626 Tj
-5.2213 -132.9071 Td
(8061 ) 26.1067 Tj
-4200 TJm
(\(\(\(id\) >> PCI_PRODUCT_SHIFT\) & PCI_PRODUCT_MASK\)) 250.6239 Tj
-5.2213 -142.4004 Td
(8062 ) 26.1067 Tj
-5.2213 -151.8938 Td
(8063 #define PCI_ID_CODE\(vid,pid\)) 172.304 Tj
370.7147 -151.8938 Td
(\\) 5.2213 Tj
-5.2213 -161.3871 Td
(8064 ) 26.1067 Tj
-1800 TJm
(\(\(\(\(vid\) & PCI_VENDOR_MASK\) << PCI_VENDOR_SHIFT\) |) 261.0666 Tj
-3600.01 TJm
(\\) 5.2213 Tj
-5.2213 -170.8805 Td
(8065 ) 26.1067 Tj
-2400 TJm
(\(\(\(pid\) & PCI_PRODUCT_MASK\) << PCI_PRODUCT_SHIFT\)\)) 261.0666 Tj
-3000.01 TJm
(\\) 5.2213 Tj
-5.2213 -180.3739 Td
(8066 ) 26.1067 Tj
-5.2213 -189.8672 Td
(8067 /*) 36.5493 Tj
-5.2213 -199.3606 Td
(8068  * Command and status register.) 187.968 Tj
-5.2213 -208.8539 Td
(8069  */) 41.7707 Tj
-5.2213 -218.3473 Td
(8070 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_STATUS_REG) 114.8693 Tj
-10800 TJm
(0x04) 20.8853 Tj
-5.2213 -227.8407 Td
(8071 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_SHIFT) 88.7626 Tj
-13800 TJm
(0) 5.2213 Tj
-5.2213 -237.334 Td
(8072 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_MASK) 83.5413 Tj
-14400 TJm
(0xffff) 31.328 Tj
-5.2213 -246.8274 Td
(8073 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_SHIFT) 83.5413 Tj
-14400 TJm
(16) 10.4427 Tj
-5.2213 -256.3207 Td
(8074 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_MASK) 78.32 Tj
-15000 TJm
(0xffff) 31.328 Tj
-5.2213 -265.8141 Td
(8075 ) 26.1067 Tj
-5.2213 -275.3075 Td
(8076 #define PCI_COMMAND_STATUS_CODE\(cmd,stat\)) 240.1813 Tj
-10800 TJm
(\\) 5.2213 Tj
-5.2213 -284.8008 Td
(8077 ) 26.1067 Tj
-1800 TJm
(\(\(\(\(cmd\) & PCI_COMMAND_MASK\) >> PCI_COMMAND_SHIFT\) |) 271.5093 Tj
-2400.01 TJm
(\\) 5.2213 Tj
-5.2213 -294.2942 Td
(8078 ) 26.1067 Tj
-2400 TJm
(\(\(\(stat\) & PCI_STATUS_MASK\) >> PCI_STATUS_SHIFT\)\)) 255.8453 Tj
-3600.01 TJm
(\\) 5.2213 Tj
-5.2213 -303.7875 Td
(8079 ) 26.1067 Tj
-5.2213 -313.2809 Td
(8080 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_IO_ENABLE) 109.648 Tj
-11400 TJm
(0x00000001) 52.2133 Tj
-5.2213 -322.7743 Td
(8081 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_MEM_ENABLE) 114.8693 Tj
-10800 TJm
(0x00000002) 52.2133 Tj
-5.2213 -332.2676 Td
(8082 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_MASTER_ENABLE) 130.5333 Tj
-9000 TJm
(0x00000004) 52.2133 Tj
-5.2213 -341.761 Td
(8083 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_SPECIAL_ENABLE) 135.7546 Tj
-8400 TJm
(0x00000008) 52.2133 Tj
-5.2213 -351.2543 Td
(8084 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_INVALIDATE_ENABLE) 151.4186 Tj
-6600 TJm
(0x00000010) 52.2133 Tj
-5.2213 -360.7477 Td
(8085 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_PALETTE_ENABLE) 135.7546 Tj
-8400 TJm
(0x00000020) 52.2133 Tj
-5.2213 -370.2411 Td
(8086 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_PARITY_ENABLE) 130.5333 Tj
-9000 TJm
(0x00000040) 52.2133 Tj
-5.2213 -379.7344 Td
(8087 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_STEPPING_ENABLE) 140.976 Tj
-7800 TJm
(0x00000080) 52.2133 Tj
-5.2213 -389.2278 Td
(8088 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_SERR_ENABLE) 120.0906 Tj
-10200 TJm
(0x00000100) 52.2133 Tj
-5.2213 -398.7211 Td
(8089 #define) 62.656 Tj
-2400 TJm
(PCI_COMMAND_BACKTOBACK_ENABLE) 151.4186 Tj
-6600 TJm
(0x00000200) 52.2133 Tj
-5.2213 -408.2145 Td
(8090 ) 26.1067 Tj
-5.2213 -417.7079 Td
(8091 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_CAPLIST_SUPPORT) 135.7546 Tj
-8400 TJm
(0x00100000) 52.2133 Tj
-5.2213 -427.2012 Td
(8092 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_66MHZ_SUPPORT) 125.312 Tj
-9600 TJm
(0x00200000) 52.2133 Tj
-5.2213 -436.6946 Td
(8093 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_UDF_SUPPORT) 114.8693 Tj
-10800 TJm
(0x00400000) 52.2133 Tj
-5.2213 -446.1879 Td
(8094 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_BACKTOBACK_SUPPORT) 151.4186 Tj
-6600 TJm
(0x00800000) 52.2133 Tj
-5.2213 -455.6813 Td
(8095 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_PARITY_ERROR) 120.0906 Tj
-10200 TJm
(0x01000000) 52.2133 Tj
-5.2213 -465.1747 Td
(8096 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_DEVSEL_FAST) 114.8693 Tj
-10800 TJm
(0x00000000) 52.2133 Tj
-5.2213 -474.668 Td
(8097 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_DEVSEL_MEDIUM) 125.312 Tj
-9600 TJm
(0x02000000) 52.2133 Tj
-5.2213 -484.1614 Td
(8098 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_DEVSEL_SLOW) 114.8693 Tj
-10800 TJm
(0x04000000) 52.2133 Tj
-5.2213 -493.6547 Td
(8099 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_DEVSEL_MASK) 114.8693 Tj
-10800 TJm
(0x06000000) 52.2133 Tj
-5.2213 -522.1348 Td
(Sheet 80) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 90 90
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 3) 193.1893 Tj
-5.2213 -28.4801 Td
(8100 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_TARGET_TARGET_ABORT) 156.64 Tj
-6000 TJm
(0x08000000) 52.2133 Tj
-5.2213 -37.9735 Td
(8101 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_MASTER_TARGET_ABORT) 156.64 Tj
-6000 TJm
(0x10000000) 52.2133 Tj
-5.2213 -47.4668 Td
(8102 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_MASTER_ABORT) 120.0906 Tj
-10200 TJm
(0x20000000) 52.2133 Tj
-5.2213 -56.9602 Td
(8103 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_SPECIAL_ERROR) 125.312 Tj
-9600 TJm
(0x40000000) 52.2133 Tj
-5.2213 -66.4535 Td
(8104 #define) 62.656 Tj
-2400 TJm
(PCI_STATUS_PARITY_DETECT) 125.312 Tj
-9600 TJm
(0x80000000) 52.2133 Tj
-5.2213 -75.9469 Td
(8105 ) 26.1067 Tj
-5.2213 -85.4403 Td
(8106 /*) 36.5493 Tj
-5.2213 -94.9336 Td
(8107  * PCI Class and Revision Register; defines type and revis\
ion of device.) 402.0426 Tj
-5.2213 -104.427 Td
(8108  */) 41.7707 Tj
-5.2213 -113.9203 Td
(8109 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_REG) 67.8773 Tj
-11400 TJm
(0x08) 20.8853 Tj
-5.2213 -123.4137 Td
(8110 ) 26.1067 Tj
-5.2213 -132.9071 Td
(8111 typedef uint8_t pci_class_t;) 172.304 Tj
-5.2213 -142.4004 Td
(8112 typedef uint8_t pci_subclass_t;) 187.968 Tj
-5.2213 -151.8938 Td
(8113 typedef uint8_t pci_interface_t;) 193.1893 Tj
-5.2213 -161.3871 Td
(8114 typedef uint8_t pci_revision_t;) 187.968 Tj
-5.2213 -170.8805 Td
(8115 ) 26.1067 Tj
-5.2213 -180.3739 Td
(8116 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_SHIFT) 78.32 Tj
-15000 TJm
(24) 10.4427 Tj
-5.2213 -189.8672 Td
(8117 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_MASK) 73.0986 Tj
-15600 TJm
(0xff) 20.8853 Tj
-5.2213 -199.3606 Td
(8118 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS\(cr\) \\) 78.32 Tj
-5.2213 -208.8539 Td
(8119 ) 26.1067 Tj
-4200 TJm
(\(\(\(cr\) >> PCI_CLASS_SHIFT\) & PCI_CLASS_MASK\)) 229.7386 Tj
-5.2213 -218.3473 Td
(8120 ) 26.1067 Tj
-5.2213 -227.8407 Td
(8121 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SHIFT) 93.984 Tj
-13200 TJm
(16) 10.4427 Tj
-5.2213 -237.334 Td
(8122 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASK) 88.7626 Tj
-13800 TJm
(0xff) 20.8853 Tj
-5.2213 -246.8274 Td
(8123 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS\(cr\) \\) 93.984 Tj
-5.2213 -256.3207 Td
(8124 ) 26.1067 Tj
-4200 TJm
(\(\(\(cr\) >> PCI_SUBCLASS_SHIFT\) & PCI_SUBCLASS_MASK\)) 261.0666 Tj
-5.2213 -265.8141 Td
(8125 ) 26.1067 Tj
-5.2213 -275.3075 Td
(8126 #define) 62.656 Tj
-2400 TJm
(PCI_INTERFACE_SHIFT) 99.2053 Tj
-12600 TJm
(8) 5.2213 Tj
-5.2213 -284.8008 Td
(8127 #define) 62.656 Tj
-2400 TJm
(PCI_INTERFACE_MASK) 93.984 Tj
-13200 TJm
(0xff) 20.8853 Tj
-5.2213 -294.2942 Td
(8128 #define) 62.656 Tj
-2400 TJm
(PCI_INTERFACE\(cr\) \\) 99.2053 Tj
-5.2213 -303.7875 Td
(8129 ) 26.1067 Tj
-4200 TJm
(\(\(\(cr\) >> PCI_INTERFACE_SHIFT\) & PCI_INTERFACE_MASK\)) 271.5093 Tj
-5.2213 -313.2809 Td
(8130 ) 26.1067 Tj
-5.2213 -322.7743 Td
(8131 #define) 62.656 Tj
-2400 TJm
(PCI_REVISION_SHIFT) 93.984 Tj
-13200 TJm
(0) 5.2213 Tj
-5.2213 -332.2676 Td
(8132 #define) 62.656 Tj
-2400 TJm
(PCI_REVISION_MASK) 88.7626 Tj
-13800 TJm
(0xff) 20.8853 Tj
-5.2213 -341.761 Td
(8133 #define) 62.656 Tj
-2400 TJm
(PCI_REVISION\(cr\) \\) 93.984 Tj
-5.2213 -351.2543 Td
(8134 ) 26.1067 Tj
-4200 TJm
(\(\(\(cr\) >> PCI_REVISION_SHIFT\) & PCI_REVISION_MASK\)) 261.0666 Tj
-5.2213 -360.7477 Td
(8135 ) 26.1067 Tj
-5.2213 -370.2411 Td
(8136 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_CODE\(mainclass, subclass, interface\) \\) 250.6239 Tj
-5.2213 -379.7344 Td
(8137 ) 26.1067 Tj
-4200 TJm
(\(\(\(\(mainclass\) & PCI_CLASS_MASK\) << PCI_CLASS_SHIFT\) | \\) 292.3946 Tj
-5.2213 -389.2278 Td
(8138 ) 26.1067 Tj
-4800 TJm
(\(\(\(subclass\) & PCI_SUBCLASS_MASK\) << PCI_SUBCLASS_SHIFT\) \
| \\) 313.2799 Tj
-5.2213 -398.7211 Td
(8139 ) 26.1067 Tj
-4800 TJm
(\(\(\(interface\) & PCI_INTERFACE_MASK\) << PCI_INTERFACE_SHIFT\
\)\)) 313.2799 Tj
-5.2213 -408.2145 Td
(8140 ) 26.1067 Tj
-5.2213 -417.7079 Td
(8141 /* base classes */) 120.0906 Tj
-5.2213 -427.2012 Td
(8142 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_PREHISTORIC) 109.648 Tj
-11400 TJm
(0x00) 20.8853 Tj
-5.2213 -436.6946 Td
(8143 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_MASS_STORAGE) 114.8693 Tj
-10800 TJm
(0x01) 20.8853 Tj
-5.2213 -446.1879 Td
(8144 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_NETWORK) 88.7626 Tj
-13800 TJm
(0x02) 20.8853 Tj
-5.2213 -455.6813 Td
(8145 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_DISPLAY) 88.7626 Tj
-13800 TJm
(0x03) 20.8853 Tj
-5.2213 -465.1747 Td
(8146 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_MULTIMEDIA) 104.4266 Tj
-12000 TJm
(0x04) 20.8853 Tj
-5.2213 -474.668 Td
(8147 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_MEMORY) 83.5413 Tj
-14400 TJm
(0x05) 20.8853 Tj
-5.2213 -484.1614 Td
(8148 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_BRIDGE) 83.5413 Tj
-14400 TJm
(0x06) 20.8853 Tj
-5.2213 -493.6547 Td
(8149 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_COMMUNICATIONS) 125.312 Tj
-9600 TJm
(0x07) 20.8853 Tj
-5.2213 -522.1348 Td
(Sheet 81) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 4) 193.1893 Tj
-5.2213 -28.4801 Td
(8150 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_SYSTEM) 83.5413 Tj
-14400 TJm
(0x08) 20.8853 Tj
-5.2213 -37.9735 Td
(8151 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_INPUT) 78.32 Tj
-15000 TJm
(0x09) 20.8853 Tj
-5.2213 -47.4668 Td
(8152 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_DOCK) 73.0986 Tj
-15600 TJm
(0x0a) 20.8853 Tj
-5.2213 -56.9602 Td
(8153 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_PROCESSOR) 99.2053 Tj
-12600 TJm
(0x0b) 20.8853 Tj
-5.2213 -66.4535 Td
(8154 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_SERIALBUS) 99.2053 Tj
-12600 TJm
(0x0c) 20.8853 Tj
-5.2213 -75.9469 Td
(8155 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_WIRELESS) 93.984 Tj
-13200 TJm
(0x0d) 20.8853 Tj
-5.2213 -85.4403 Td
(8156 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_I2O) 67.8773 Tj
-16200 TJm
(0x0e) 20.8853 Tj
-5.2213 -94.9336 Td
(8157 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_SATCOM) 83.5413 Tj
-14400 TJm
(0x0f) 20.8853 Tj
-5.2213 -104.427 Td
(8158 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_CRYPTO) 83.5413 Tj
-14400 TJm
(0x10) 20.8853 Tj
-5.2213 -113.9203 Td
(8159 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_DASP) 73.0986 Tj
-15600 TJm
(0x11) 20.8853 Tj
-5.2213 -123.4137 Td
(8160 #define) 62.656 Tj
-2400 TJm
(PCI_CLASS_UNDEFINED) 99.2053 Tj
-12600 TJm
(0xff) 20.8853 Tj
-5.2213 -132.9071 Td
(8161 ) 26.1067 Tj
-5.2213 -142.4004 Td
(8162 /* 0x00 prehistoric subclasses */) 198.4106 Tj
-5.2213 -151.8938 Td
(8163 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PREHISTORIC_MISC) 151.4186 Tj
-6600 TJm
(0x00) 20.8853 Tj
-5.2213 -161.3871 Td
(8164 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PREHISTORIC_VGA) 146.1973 Tj
-7200 TJm
(0x01) 20.8853 Tj
-5.2213 -170.8805 Td
(8165 ) 26.1067 Tj
-5.2213 -180.3739 Td
(8166 /* 0x01 mass storage subclasses */) 203.6319 Tj
-5.2213 -189.8672 Td
(8167 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_SCSI) 156.64 Tj
-6000 TJm
(0x00) 20.8853 Tj
-5.2213 -199.3606 Td
(8168 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_IDE) 151.4186 Tj
-6600 TJm
(0x01) 20.8853 Tj
-5.2213 -208.8539 Td
(8169 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_FLOPPY) 167.0826 Tj
-4800 TJm
(0x02) 20.8853 Tj
-5.2213 -218.3473 Td
(8170 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_IPI) 151.4186 Tj
-6600 TJm
(0x03) 20.8853 Tj
-5.2213 -227.8407 Td
(8171 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_RAID) 156.64 Tj
-6000 TJm
(0x04) 20.8853 Tj
-5.2213 -237.334 Td
(8172 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_ATA) 151.4186 Tj
-6600 TJm
(0x05) 20.8853 Tj
-5.2213 -246.8274 Td
(8173 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_SATA) 156.64 Tj
-6000 TJm
(0x06) 20.8853 Tj
-5.2213 -256.3207 Td
(8174 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MASS_STORAGE_MISC) 156.64 Tj
-6000 TJm
(0x80) 20.8853 Tj
-5.2213 -265.8141 Td
(8175 ) 26.1067 Tj
-5.2213 -275.3075 Td
(8176 /* 0x02 network subclasses */) 177.5253 Tj
-5.2213 -284.8008 Td
(8177 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_ETHERNET) 151.4186 Tj
-6600 TJm
(0x00) 20.8853 Tj
-5.2213 -294.2942 Td
(8178 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_TOKENRING) 156.64 Tj
-6000 TJm
(0x01) 20.8853 Tj
-5.2213 -303.7875 Td
(8179 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_FDDI) 130.5333 Tj
-9000 TJm
(0x02) 20.8853 Tj
-5.2213 -313.2809 Td
(8180 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_ATM) 125.312 Tj
-9600 TJm
(0x03) 20.8853 Tj
-5.2213 -322.7743 Td
(8181 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_ISDN) 130.5333 Tj
-9000 TJm
(0x04) 20.8853 Tj
-5.2213 -332.2676 Td
(8182 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_WORLDFIP) 151.4186 Tj
-6600 TJm
(0x05) 20.8853 Tj
-5.2213 -341.761 Td
(8183 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP) 182.7466 Tj
-3000 TJm
(0x06) 20.8853 Tj
-5.2213 -351.2543 Td
(8184 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_NETWORK_MISC) 130.5333 Tj
-9000 TJm
(0x80) 20.8853 Tj
-5.2213 -360.7477 Td
(8185 ) 26.1067 Tj
-5.2213 -370.2411 Td
(8186 /* 0x03 display subclasses */) 177.5253 Tj
-5.2213 -379.7344 Td
(8187 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DISPLAY_VGA) 125.312 Tj
-9600 TJm
(0x00) 20.8853 Tj
-5.2213 -389.2278 Td
(8188 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DISPLAY_XGA) 125.312 Tj
-9600 TJm
(0x01) 20.8853 Tj
-5.2213 -398.7211 Td
(8189 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DISPLAY_3D) 120.0906 Tj
-10200 TJm
(0x02) 20.8853 Tj
-5.2213 -408.2145 Td
(8190 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DISPLAY_MISC) 130.5333 Tj
-9000 TJm
(0x80) 20.8853 Tj
-5.2213 -417.7079 Td
(8191 ) 26.1067 Tj
-5.2213 -427.2012 Td
(8192 /* 0x04 multimedia subclasses */) 193.1893 Tj
-5.2213 -436.6946 Td
(8193 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MULTIMEDIA_VIDEO) 151.4186 Tj
-6600 TJm
(0x00) 20.8853 Tj
-5.2213 -446.1879 Td
(8194 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MULTIMEDIA_AUDIO) 151.4186 Tj
-6600 TJm
(0x01) 20.8853 Tj
-5.2213 -455.6813 Td
(8195 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MULTIMEDIA_TELEPHONY) 172.304 Tj
-4200 TJm
(0x02) 20.8853 Tj
-5.2213 -465.1747 Td
(8196 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MULTIMEDIA_MISC) 146.1973 Tj
-7200 TJm
(0x80) 20.8853 Tj
-5.2213 -474.668 Td
(8197 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8198 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 81) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 91 91
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 5) 193.1893 Tj
-5.2213 -28.4801 Td
(8200 /* 0x05 memory subclasses */) 172.304 Tj
-5.2213 -37.9735 Td
(8201 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MEMORY_RAM) 120.0906 Tj
-10200 TJm
(0x00) 20.8853 Tj
-5.2213 -47.4668 Td
(8202 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MEMORY_FLASH) 130.5333 Tj
-9000 TJm
(0x01) 20.8853 Tj
-5.2213 -56.9602 Td
(8203 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_MEMORY_MISC) 125.312 Tj
-9600 TJm
(0x80) 20.8853 Tj
-5.2213 -66.4535 Td
(8204 ) 26.1067 Tj
-5.2213 -75.9469 Td
(8205 /* 0x06 bridge subclasses */) 172.304 Tj
-5.2213 -85.4403 Td
(8206 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_HOST) 125.312 Tj
-9600 TJm
(0x00) 20.8853 Tj
-5.2213 -94.9336 Td
(8207 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_ISA) 120.0906 Tj
-10200 TJm
(0x01) 20.8853 Tj
-5.2213 -104.427 Td
(8208 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_EISA) 125.312 Tj
-9600 TJm
(0x02) 20.8853 Tj
-5.2213 -113.9203 Td
(8209 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_MC) 114.8693 Tj
-10800 TJm
(0x03) 20.8853 Tj
-2400 TJm
(/* XXX _MCA? */) 78.32 Tj
-5.2213 -123.4137 Td
(8210 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_PCI) 120.0906 Tj
-10200 TJm
(0x04) 20.8853 Tj
-5.2213 -132.9071 Td
(8211 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_PCMCIA) 135.7546 Tj
-8400 TJm
(0x05) 20.8853 Tj
-5.2213 -142.4004 Td
(8212 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_NUBUS) 130.5333 Tj
-9000 TJm
(0x06) 20.8853 Tj
-5.2213 -151.8938 Td
(8213 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_CARDBUS) 140.976 Tj
-7800 TJm
(0x07) 20.8853 Tj
-5.2213 -161.3871 Td
(8214 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_RACEWAY) 140.976 Tj
-7800 TJm
(0x08) 20.8853 Tj
-5.2213 -170.8805 Td
(8215 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_STPCI) 130.5333 Tj
-9000 TJm
(0x09) 20.8853 Tj
-5.2213 -180.3739 Td
(8216 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_INFINIBAND) 156.64 Tj
-6000 TJm
(0x0a) 20.8853 Tj
-5.2213 -189.8672 Td
(8217 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_BRIDGE_MISC) 125.312 Tj
-9600 TJm
(0x80) 20.8853 Tj
-5.2213 -199.3606 Td
(8218 ) 26.1067 Tj
-5.2213 -208.8539 Td
(8219 /* 0x07 communications subclasses */) 214.0746 Tj
-5.2213 -218.3473 Td
(8220 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_COMMUNICATIONS_SERIAL) 177.5253 Tj
-3600.01 TJm
(0x00) 20.8853 Tj
-5.2213 -227.8407 Td
(8221 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_COMMUNICATIONS_PARALLEL) 187.968 Tj
-2400.01 TJm
(0x01) 20.8853 Tj
-5.2213 -237.334 Td
(8222 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL) 187.968 Tj
-2400.01 TJm
(0x02) 20.8853 Tj
-5.2213 -246.8274 Td
(8223 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_COMMUNICATIONS_MODEM) 172.304 Tj
-4200.01 TJm
(0x03) 20.8853 Tj
-5.2213 -256.3207 Td
(8224 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_COMMUNICATIONS_GPIB) 167.0826 Tj
-4800.01 TJm
(0x04) 20.8853 Tj
-5.2213 -265.8141 Td
(8225 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD) 193.1893 Tj
-1800.01 TJm
(0x05) 20.8853 Tj
-5.2213 -275.3075 Td
(8226 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_COMMUNICATIONS_MISC) 167.0826 Tj
-4800.01 TJm
(0x80) 20.8853 Tj
-5.2213 -284.8008 Td
(8227 ) 26.1067 Tj
-5.2213 -294.2942 Td
(8228 /* 0x08 system subclasses */) 172.304 Tj
-5.2213 -303.7875 Td
(8229 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SYSTEM_PIC) 120.0906 Tj
-10200 TJm
(0x00) 20.8853 Tj
-5.2213 -313.2809 Td
(8230 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SYSTEM_DMA) 120.0906 Tj
-10200 TJm
(0x01) 20.8853 Tj
-5.2213 -322.7743 Td
(8231 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SYSTEM_TIMER) 130.5333 Tj
-9000 TJm
(0x02) 20.8853 Tj
-5.2213 -332.2676 Td
(8232 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SYSTEM_RTC) 120.0906 Tj
-10200 TJm
(0x03) 20.8853 Tj
-5.2213 -341.761 Td
(8233 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SYSTEM_PCIHOTPLUG) 156.64 Tj
-6000 TJm
(0x04) 20.8853 Tj
-5.2213 -351.2543 Td
(8234 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SYSTEM_MISC) 125.312 Tj
-9600 TJm
(0x80) 20.8853 Tj
-5.2213 -360.7477 Td
(8235 ) 26.1067 Tj
-5.2213 -370.2411 Td
(8236 /* 0x09 input subclasses */) 167.0826 Tj
-5.2213 -379.7344 Td
(8237 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_INPUT_KEYBOARD) 140.976 Tj
-7800 TJm
(0x00) 20.8853 Tj
-5.2213 -389.2278 Td
(8238 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_INPUT_DIGITIZER) 146.1973 Tj
-7200 TJm
(0x01) 20.8853 Tj
-5.2213 -398.7211 Td
(8239 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_INPUT_MOUSE) 125.312 Tj
-9600 TJm
(0x02) 20.8853 Tj
-5.2213 -408.2145 Td
(8240 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_INPUT_SCANNER) 135.7546 Tj
-8400 TJm
(0x03) 20.8853 Tj
-5.2213 -417.7079 Td
(8241 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_INPUT_GAMEPORT) 140.976 Tj
-7800 TJm
(0x04) 20.8853 Tj
-5.2213 -427.2012 Td
(8242 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_INPUT_MISC) 120.0906 Tj
-10200 TJm
(0x80) 20.8853 Tj
-5.2213 -436.6946 Td
(8243 ) 26.1067 Tj
-5.2213 -446.1879 Td
(8244 /* 0x0a dock subclasses */) 161.8613 Tj
-5.2213 -455.6813 Td
(8245 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DOCK_GENERIC) 130.5333 Tj
-9000 TJm
(0x00) 20.8853 Tj
-5.2213 -465.1747 Td
(8246 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DOCK_MISC) 114.8693 Tj
-10800 TJm
(0x80) 20.8853 Tj
-5.2213 -474.668 Td
(8247 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8248 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8249 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 82) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 6) 193.1893 Tj
-5.2213 -28.4801 Td
(8250 /* 0x0b processor subclasses */) 187.968 Tj
-5.2213 -37.9735 Td
(8251 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PROCESSOR_386) 135.7546 Tj
-8400 TJm
(0x00) 20.8853 Tj
-5.2213 -47.4668 Td
(8252 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PROCESSOR_486) 135.7546 Tj
-8400 TJm
(0x01) 20.8853 Tj
-5.2213 -56.9602 Td
(8253 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PROCESSOR_PENTIUM) 156.64 Tj
-6000 TJm
(0x02) 20.8853 Tj
-5.2213 -66.4535 Td
(8254 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PROCESSOR_ALPHA) 146.1973 Tj
-7200 TJm
(0x10) 20.8853 Tj
-5.2213 -75.9469 Td
(8255 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PROCESSOR_POWERPC) 156.64 Tj
-6000 TJm
(0x20) 20.8853 Tj
-5.2213 -85.4403 Td
(8256 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PROCESSOR_MIPS) 140.976 Tj
-7800 TJm
(0x30) 20.8853 Tj
-5.2213 -94.9336 Td
(8257 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_PROCESSOR_COPROC) 151.4186 Tj
-6600 TJm
(0x40) 20.8853 Tj
-5.2213 -104.427 Td
(8258 ) 26.1067 Tj
-5.2213 -113.9203 Td
(8259 /* 0x0c serial bus subclasses */) 193.1893 Tj
-5.2213 -123.4137 Td
(8260 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_FIREWIRE) 161.8613 Tj
-5400 TJm
(0x00) 20.8853 Tj
-5.2213 -132.9071 Td
(8261 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_ACCESS) 151.4186 Tj
-6600 TJm
(0x01) 20.8853 Tj
-5.2213 -142.4004 Td
(8262 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_SSA) 135.7546 Tj
-8400 TJm
(0x02) 20.8853 Tj
-5.2213 -151.8938 Td
(8263 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_USB) 135.7546 Tj
-8400 TJm
(0x03) 20.8853 Tj
-5.2213 -161.3871 Td
(8264 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_FIBER) 146.1973 Tj
-7200 TJm
(0x04) 20.8853 Tj
-2400 TJm
(/* XXX _FIBRECHANNEL */) 120.0906 Tj
-5.2213 -170.8805 Td
(8265 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_SMBUS) 146.1973 Tj
-7200 TJm
(0x05) 20.8853 Tj
-5.2213 -180.3739 Td
(8266 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_INFINIBAND) 172.304 Tj
-4200 TJm
(0x06) 20.8853 Tj
-5.2213 -189.8672 Td
(8267 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_IPMI) 140.976 Tj
-7800 TJm
(0x07) 20.8853 Tj
-5.2213 -199.3606 Td
(8268 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_SERCOS) 151.4186 Tj
-6600 TJm
(0x08) 20.8853 Tj
-5.2213 -208.8539 Td
(8269 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SERIALBUS_CANBUS) 151.4186 Tj
-6600 TJm
(0x09) 20.8853 Tj
-5.2213 -218.3473 Td
(8270 ) 26.1067 Tj
-5.2213 -227.8407 Td
(8271 /* 0x0d wireless subclasses */) 182.7466 Tj
-5.2213 -237.334 Td
(8272 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_IRDA) 135.7546 Tj
-8400 TJm
(0x00) 20.8853 Tj
-5.2213 -246.8274 Td
(8273 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_CONSUMERIR) 167.0826 Tj
-4800 TJm
(0x01) 20.8853 Tj
-5.2213 -256.3207 Td
(8274 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_RF) 125.312 Tj
-9600 TJm
(0x10) 20.8853 Tj
-5.2213 -265.8141 Td
(8275 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_BLUETOOTH) 161.8613 Tj
-5400 TJm
(0x11) 20.8853 Tj
-5.2213 -275.3075 Td
(8276 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_BROADBAND) 161.8613 Tj
-5400 TJm
(0x12) 20.8853 Tj
-5.2213 -284.8008 Td
(8277 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_802_11A) 151.4186 Tj
-6600 TJm
(0x20) 20.8853 Tj
-5.2213 -294.2942 Td
(8278 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_802_11B) 151.4186 Tj
-6600 TJm
(0x21) 20.8853 Tj
-5.2213 -303.7875 Td
(8279 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_WIRELESS_MISC) 135.7546 Tj
-8400 TJm
(0x80) 20.8853 Tj
-5.2213 -313.2809 Td
(8280 ) 26.1067 Tj
-5.2213 -322.7743 Td
(8281 /* 0x0e I2O \(Intelligent I/O\) subclasses */) 250.6239 Tj
-5.2213 -332.2676 Td
(8282 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_I2O_STANDARD) 130.5333 Tj
-9000 TJm
(0x00) 20.8853 Tj
-5.2213 -341.761 Td
(8283 ) 26.1067 Tj
-5.2213 -351.2543 Td
(8284 /* 0x0f satellite communication subclasses */) 261.0666 Tj
-5.2213 -360.7477 Td
(8285 /*) 36.5493 Tj
-600 TJm
(PCI_SUBCLASS_SATCOM_???) 120.0906 Tj
-10200 TJm
(0x00) 20.8853 Tj
-2400 TJm
(/ * XXX ??? */) 73.0986 Tj
-5.2213 -370.2411 Td
(8286 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SATCOM_TV) 114.8693 Tj
-10800 TJm
(0x01) 20.8853 Tj
-5.2213 -379.7344 Td
(8287 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SATCOM_AUDIO) 130.5333 Tj
-9000 TJm
(0x02) 20.8853 Tj
-5.2213 -389.2278 Td
(8288 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SATCOM_VOICE) 130.5333 Tj
-9000 TJm
(0x03) 20.8853 Tj
-5.2213 -398.7211 Td
(8289 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_SATCOM_DATA) 125.312 Tj
-9600 TJm
(0x04) 20.8853 Tj
-5.2213 -408.2145 Td
(8290 ) 26.1067 Tj
-5.2213 -417.7079 Td
(8291 /* 0x10 encryption/decryption subclasses */) 250.6239 Tj
-5.2213 -427.2012 Td
(8292 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_CRYPTO_NETCOMP) 140.976 Tj
-7800 TJm
(0x00) 20.8853 Tj
-5.2213 -436.6946 Td
(8293 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_CRYPTO_ENTERTAINMENT) 172.304 Tj
-4200 TJm
(0x10) 20.8853 Tj
-5.2213 -446.1879 Td
(8294 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_CRYPTO_MISC) 125.312 Tj
-9600 TJm
(0x80) 20.8853 Tj
-5.2213 -455.6813 Td
(8295 ) 26.1067 Tj
-5.2213 -465.1747 Td
(8296 ) 26.1067 Tj
-5.2213 -474.668 Td
(8297 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8298 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8299 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 82) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 92 92
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 7) 193.1893 Tj
-5.2213 -28.4801 Td
(8300 /* 0x11 data acquisition and signal processing subclasses \
*/) 339.3866 Tj
-5.2213 -37.9735 Td
(8301 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DASP_DPIO) 114.8693 Tj
-10800 TJm
(0x00) 20.8853 Tj
-5.2213 -47.4668 Td
(8302 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DASP_TIMEFREQ) 135.7546 Tj
-8400 TJm
(0x01) 20.8853 Tj
-5.2213 -56.9602 Td
(8303 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DASP_SYNC) 114.8693 Tj
-10800 TJm
(0x10) 20.8853 Tj
-5.2213 -66.4535 Td
(8304 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DASP_MGMT) 114.8693 Tj
-10800 TJm
(0x20) 20.8853 Tj
-5.2213 -75.9469 Td
(8305 #define) 62.656 Tj
-2400 TJm
(PCI_SUBCLASS_DASP_MISC) 114.8693 Tj
-10800 TJm
(0x80) 20.8853 Tj
-5.2213 -85.4403 Td
(8306 ) 26.1067 Tj
-5.2213 -94.9336 Td
(8307 /*) 36.5493 Tj
-5.2213 -104.427 Td
(8308  * PCI BIST/Header Type/Latency Timer/Cache Line Size Regi\
ster.) 355.0506 Tj
-5.2213 -113.9203 Td
(8309  */) 41.7707 Tj
-5.2213 -123.4137 Td
(8310 #define) 62.656 Tj
-2400 TJm
(PCI_BHLC_REG) 62.656 Tj
-12000 TJm
(0x0c) 20.8853 Tj
-5.2213 -132.9071 Td
(8311 ) 26.1067 Tj
-5.2213 -142.4004 Td
(8312 #define) 62.656 Tj
-2400 TJm
(PCI_BIST_SHIFT) 73.0986 Tj
-15600 TJm
(24) 10.4427 Tj
-5.2213 -151.8938 Td
(8313 #define) 62.656 Tj
-2400 TJm
(PCI_BIST_MASK) 67.8773 Tj
-16200 TJm
(0xff) 20.8853 Tj
-5.2213 -161.3871 Td
(8314 #define) 62.656 Tj
-2400 TJm
(PCI_BIST\(bhlcr\) \\) 88.7626 Tj
-5.2213 -170.8805 Td
(8315 ) 26.1067 Tj
-4200 TJm
(\(\(\(bhlcr\) >> PCI_BIST_SHIFT\) & PCI_BIST_MASK\)) 234.9599 Tj
-5.2213 -180.3739 Td
(8316 ) 26.1067 Tj
-5.2213 -189.8672 Td
(8317 #define) 62.656 Tj
-2400 TJm
(PCI_HDRTYPE_SHIFT) 88.7626 Tj
-13800 TJm
(16) 10.4427 Tj
-5.2213 -199.3606 Td
(8318 #define) 62.656 Tj
-2400 TJm
(PCI_HDRTYPE_MASK) 83.5413 Tj
-14400 TJm
(0xff) 20.8853 Tj
-5.2213 -208.8539 Td
(8319 #define) 62.656 Tj
-2400 TJm
(PCI_HDRTYPE\(bhlcr\) \\) 104.4266 Tj
-5.2213 -218.3473 Td
(8320 ) 26.1067 Tj
-4200 TJm
(\(\(\(bhlcr\) >> PCI_HDRTYPE_SHIFT\) & PCI_HDRTYPE_MASK\)) 266.2879 Tj
-5.2213 -227.8407 Td
(8321 ) 26.1067 Tj
-5.2213 -237.334 Td
(8322 #define) 62.656 Tj
-2400 TJm
(PCI_HDRTYPE_TYPE\(bhlcr\) \\) 130.5333 Tj
-5.2213 -246.8274 Td
(8323 ) 26.1067 Tj
-4200 TJm
(\(PCI_HDRTYPE\(bhlcr\) & 0x7f\)) 140.976 Tj
-5.2213 -256.3207 Td
(8324 #define) 62.656 Tj
-2400 TJm
(PCI_HDRTYPE_MULTIFN\(bhlcr\) \\) 146.1973 Tj
-5.2213 -265.8141 Td
(8325 ) 26.1067 Tj
-4200 TJm
(\(\(PCI_HDRTYPE\(bhlcr\) & 0x80\) != 0\)) 177.5253 Tj
-5.2213 -275.3075 Td
(8326 ) 26.1067 Tj
-5.2213 -284.8008 Td
(8327 #define) 62.656 Tj
-2400 TJm
(PCI_LATTIMER_SHIFT) 93.984 Tj
-13200 TJm
(8) 5.2213 Tj
-5.2213 -294.2942 Td
(8328 #define) 62.656 Tj
-2400 TJm
(PCI_LATTIMER_MASK) 88.7626 Tj
-13800 TJm
(0xff) 20.8853 Tj
-5.2213 -303.7875 Td
(8329 #define) 62.656 Tj
-2400 TJm
(PCI_LATTIMER\(bhlcr\) \\) 109.648 Tj
-5.2213 -313.2809 Td
(8330 ) 26.1067 Tj
-4200 TJm
(\(\(\(bhlcr\) >> PCI_LATTIMER_SHIFT\) & PCI_LATTIMER_MASK\)) 276.7306 Tj
-5.2213 -322.7743 Td
(8331 ) 26.1067 Tj
-5.2213 -332.2676 Td
(8332 #define) 62.656 Tj
-2400 TJm
(PCI_CACHELINE_SHIFT) 99.2053 Tj
-12600 TJm
(0) 5.2213 Tj
-5.2213 -341.761 Td
(8333 #define) 62.656 Tj
-2400 TJm
(PCI_CACHELINE_MASK) 93.984 Tj
-13200 TJm
(0xff) 20.8853 Tj
-5.2213 -351.2543 Td
(8334 #define) 62.656 Tj
-2400 TJm
(PCI_CACHELINE\(bhlcr\) \\) 114.8693 Tj
-5.2213 -360.7477 Td
(8335 ) 26.1067 Tj
-4200 TJm
(\(\(\(bhlcr\) >> PCI_CACHELINE_SHIFT\) & PCI_CACHELINE_MASK\)) 287.1733 Tj
-5.2213 -370.2411 Td
(8336 ) 26.1067 Tj
-5.2213 -379.7344 Td
(8337 #define PCI_BHLC_CODE\(bist,type,multi,latency,cacheline\)) 318.5013 Tj
-6600.01 TJm
(\\) 5.2213 Tj
-5.2213 -389.2278 Td
(8338 ) 26.1067 Tj
-4200 TJm
(\(\(\(\(bist\) & PCI_BIST_MASK\) << PCI_BIST_SHIFT\) |) 245.4026 Tj
-7800.01 TJm
(\\) 5.2213 Tj
-5.2213 -398.7211 Td
(8339 ) 26.1067 Tj
-4800 TJm
(\(\(\(type\) & PCI_HDRTYPE_MASK\) << PCI_HDRTYPE_SHIFT\) |) 271.5093 Tj
-4200.01 TJm
(\\) 5.2213 Tj
-5.2213 -408.2145 Td
(8340 ) 26.1067 Tj
-4800 TJm
(\(\(\(multi\)?0x80:0\) << PCI_HDRTYPE_SHIFT\) |) 214.0746 Tj
-10800 TJm
(\\) 5.2213 Tj
-5.2213 -417.7079 Td
(8341 ) 26.1067 Tj
-4800 TJm
(\(\(\(latency\) & PCI_LATTIMER_MASK\) << PCI_LATTIMER_SHIFT\) |) 297.6159 Tj
-1200.01 TJm
(\\) 5.2213 Tj
-5.2213 -427.2012 Td
(8342 ) 26.1067 Tj
-4800 TJm
(\(\(\(cacheline\) & PCI_CACHELINE_MASK\) << PCI_CACHELINE_SHIFT\
\)\)) 313.2799 Tj
-5.2213 -436.6946 Td
(8343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(8344 /*) 36.5493 Tj
-5.2213 -455.6813 Td
(8345  * PCI header type) 120.0906 Tj
-5.2213 -465.1747 Td
(8346  */) 41.7707 Tj
-5.2213 -474.668 Td
(8347 #define PCI_HDRTYPE_DEVICE) 161.8613 Tj
-600.007 TJm
(0) 5.2213 Tj
-5.2213 -484.1614 Td
(8348 #define PCI_HDRTYPE_PPB) 146.1973 Tj
-7200 TJm
(1) 5.2213 Tj
-5.2213 -493.6547 Td
(8349 #define PCI_HDRTYPE_PCB) 146.1973 Tj
-7200 TJm
(2) 5.2213 Tj
-5.2213 -522.1348 Td
(Sheet 83) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 8) 193.1893 Tj
-5.2213 -28.4801 Td
(8350 /*) 36.5493 Tj
-5.2213 -37.9735 Td
(8351  * Mapping registers) 130.5333 Tj
-5.2213 -47.4668 Td
(8352  */) 41.7707 Tj
-5.2213 -56.9602 Td
(8353 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_START) 83.5413 Tj
-9600 TJm
(0x10) 20.8853 Tj
-5.2213 -66.4535 Td
(8354 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_END) 73.0986 Tj
-10800 TJm
(0x28) 20.8853 Tj
-5.2213 -75.9469 Td
(8355 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_ROM) 73.0986 Tj
-10800 TJm
(0x30) 20.8853 Tj
-5.2213 -85.4403 Td
(8356 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_PPB_END) 93.984 Tj
-8400 TJm
(0x18) 20.8853 Tj
-5.2213 -94.9336 Td
(8357 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_PCB_END) 93.984 Tj
-8400 TJm
(0x14) 20.8853 Tj
-5.2213 -104.427 Td
(8358 ) 26.1067 Tj
-5.2213 -113.9203 Td
(8359 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_TYPE\(mr\)) 99.2053 Tj
412.4857 -113.9203 Td
(\\) 5.2213 Tj
-5.2213 -123.4137 Td
(8360 ) 26.1067 Tj
-4200 TJm
(\(\(mr\) & PCI_MAPREG_TYPE_MASK\)) 151.4186 Tj
-5.2213 -132.9071 Td
(8361 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_TYPE_MASK) 104.4266 Tj
-12000 TJm
(0x00000001) 52.2133 Tj
-5.2213 -142.4004 Td
(8362 ) 26.1067 Tj
-5.2213 -151.8938 Td
(8363 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_TYPE_MEM) 99.2053 Tj
-12600 TJm
(0x00000000) 52.2133 Tj
-5.2213 -161.3871 Td
(8364 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_TYPE_IO) 93.984 Tj
-13200 TJm
(0x00000001) 52.2133 Tj
-5.2213 -170.8805 Td
(8365 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_ROM_ENABLE) 109.648 Tj
-11400 TJm
(0x00000001) 52.2133 Tj
-5.2213 -180.3739 Td
(8366 ) 26.1067 Tj
-5.2213 -189.8672 Td
(8367 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_TYPE\(mr\)) 120.0906 Tj
412.4857 -189.8672 Td
(\\) 5.2213 Tj
-5.2213 -199.3606 Td
(8368 ) 26.1067 Tj
-4200 TJm
(\(\(mr\) & PCI_MAPREG_MEM_TYPE_MASK\)) 172.304 Tj
-5.2213 -208.8539 Td
(8369 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_TYPE_MASK) 125.312 Tj
-9600 TJm
(0x00000006) 52.2133 Tj
-5.2213 -218.3473 Td
(8370 ) 26.1067 Tj
-5.2213 -227.8407 Td
(8371 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_TYPE_32BIT) 130.5333 Tj
-9000 TJm
(0x00000000) 52.2133 Tj
-5.2213 -237.334 Td
(8372 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_TYPE_32BIT_1M) 146.1973 Tj
-7200 TJm
(0x00000002) 52.2133 Tj
-5.2213 -246.8274 Td
(8373 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_TYPE_64BIT) 130.5333 Tj
-9000 TJm
(0x00000004) 52.2133 Tj
-5.2213 -256.3207 Td
(8374 ) 26.1067 Tj
-5.2213 -265.8141 Td
(8375 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_PREFETCHABLE\(mr\)) 161.8613 Tj
-15000 TJm
(\\) 5.2213 Tj
-5.2213 -275.3075 Td
(8376 ) 26.1067 Tj
-4200 TJm
(\(\(\(mr\) & PCI_MAPREG_MEM_PREFETCHABLE_MASK\) != 0\)) 250.6239 Tj
-5.2213 -284.8008 Td
(8377 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_PREFETCHABLE_MASK) 167.0826 Tj
-4800 TJm
(0x00000008) 52.2133 Tj
-5.2213 -294.2942 Td
(8378 ) 26.1067 Tj
-5.2213 -303.7875 Td
(8379 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_ADDR\(mr\)) 120.0906 Tj
412.4857 -303.7875 Td
(\\) 5.2213 Tj
-5.2213 -313.2809 Td
(8380 ) 26.1067 Tj
-4200 TJm
(\(\(mr\) & PCI_MAPREG_MEM_ADDR_MASK\)) 172.304 Tj
-5.2213 -322.7743 Td
(8381 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_SIZE\(mr\)) 120.0906 Tj
412.4857 -322.7743 Td
(\\) 5.2213 Tj
-5.2213 -332.2672 Td
(8382 ) 26.1067 Tj
-4200 TJm
(\(PCI_MAPREG_MEM_ADDR\(mr\) & -PCI_MAPREG_MEM_ADDR\(mr\)\)) 271.5093 Tj
-5.2213 -341.7606 Td
(8383 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM_ADDR_MASK) 125.312 Tj
-9600 TJm
(0xfffffff0) 52.2133 Tj
-5.2213 -351.2539 Td
(8384 ) 26.1067 Tj
-5.2213 -360.7473 Td
(8385 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM64_ADDR\(mr\)) 130.5333 Tj
412.4857 -360.7473 Td
(\\) 5.2213 Tj
-5.2213 -370.2407 Td
(8386 ) 26.1067 Tj
-4200 TJm
(\(\(mr\) & PCI_MAPREG_MEM64_ADDR_MASK\)) 182.7466 Tj
-5.2213 -379.734 Td
(8387 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM64_SIZE\(mr\)) 130.5333 Tj
412.4857 -379.734 Td
(\\) 5.2213 Tj
-5.2213 -389.2274 Td
(8388 ) 26.1067 Tj
-4200 TJm
(\(PCI_MAPREG_MEM64_ADDR\(mr\) & -PCI_MAPREG_MEM64_ADDR\(mr\)\)) 292.3946 Tj
-5.2213 -398.7207 Td
(8389 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_MEM64_ADDR_MASK) 135.7546 Tj
-8400 TJm
(0xfffffffffffffff0ULL) 109.648 Tj
-5.2213 -408.2141 Td
(8390 ) 26.1067 Tj
-5.2213 -417.7075 Td
(8391 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_IO_ADDR\(mr\)) 114.8693 Tj
412.4857 -417.7075 Td
(\\) 5.2213 Tj
-5.2213 -427.2008 Td
(8392 ) 26.1067 Tj
-4200 TJm
(\(\(mr\) & PCI_MAPREG_IO_ADDR_MASK\)) 167.0826 Tj
-5.2213 -436.6942 Td
(8393 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_IO_SIZE\(mr\)) 114.8693 Tj
412.4857 -436.6942 Td
(\\) 5.2213 Tj
-5.2213 -446.1875 Td
(8394 ) 26.1067 Tj
-4200 TJm
(\(PCI_MAPREG_IO_ADDR\(mr\) & -PCI_MAPREG_IO_ADDR\(mr\)\)) 261.0666 Tj
-5.2213 -455.6809 Td
(8395 #define) 62.656 Tj
-2400 TJm
(PCI_MAPREG_IO_ADDR_MASK) 120.0906 Tj
-10200 TJm
(0xfffffffc) 52.2133 Tj
-5.2213 -465.1743 Td
(8396 ) 26.1067 Tj
-5.2213 -474.6676 Td
(8397 #define PCI_MAPREG_SIZE_TO_MASK\(size\)) 219.2959 Tj
412.4857 -474.6676 Td
(\\) 5.2213 Tj
-5.2213 -484.161 Td
(8398 ) 26.1067 Tj
-4200 TJm
(\(-\(size\)\)) 46.992 Tj
-5.2213 -493.6543 Td
(8399 ) 26.1067 Tj
-5.2213 -522.1344 Td
(Sheet 83) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 93 93
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 9) 193.1893 Tj
-5.2213 -28.4801 Td
(8400 #define PCI_MAPREG_NUM\(offset\)) 182.7466 Tj
412.4857 -28.4801 Td
(\\) 5.2213 Tj
-5.2213 -37.9735 Td
(8401 ) 26.1067 Tj
-4200 TJm
(\(\(\(unsigned\)\(offset\)-PCI_MAPREG_START\)/4\)) 214.0746 Tj
-5.2213 -47.4664 Td
(8402 ) 26.1067 Tj
-5.2213 -56.9594 Td
(8403 ) 26.1067 Tj
-5.2213 -66.4524 Td
(8404 /*) 36.5493 Tj
-5.2213 -75.9453 Td
(8405  * Cardbus CIS pointer \(PCI rev. 2.1\)) 219.2959 Tj
-5.2213 -85.4383 Td
(8406  */) 41.7707 Tj
-5.2213 -94.9313 Td
(8407 #define PCI_CARDBUS_CIS_REG 0x28) 193.1893 Tj
-5.2213 -104.4243 Td
(8408 ) 26.1067 Tj
-5.2213 -113.9172 Td
(8409 /*) 36.5493 Tj
-5.2213 -123.4102 Td
(8410  * Subsystem identification register; contains a vendor ID\
 and a device ID.) 417.7066 Tj
-5.2213 -132.9032 Td
(8411  * Types/macros for PCI_ID_REG apply.) 219.2959 Tj
-5.2213 -142.3961 Td
(8412  * \(PCI rev. 2.1\)) 114.8693 Tj
-5.2213 -151.8891 Td
(8413  */) 41.7707 Tj
-5.2213 -161.3821 Td
(8414 #define PCI_SUBSYS_ID_REG 0x2c) 182.7466 Tj
-5.2213 -170.875 Td
(8415 ) 26.1067 Tj
-5.2213 -180.368 Td
(8416 /*) 36.5493 Tj
-5.2213 -189.861 Td
(8417  * Capabilities link list \(PCI rev. 2.2\)) 234.9599 Tj
-5.2213 -199.354 Td
(8418  */) 41.7707 Tj
-5.2213 -208.8469 Td
(8419 #define) 62.656 Tj
-2400 TJm
(PCI_CAPLISTPTR_REG) 93.984 Tj
-8400 TJm
(0x34) 20.8853 Tj
-2400 TJm
(/* header type 0 */) 99.2053 Tj
-5.2213 -218.3399 Td
(8420 #define) 62.656 Tj
-2400 TJm
(PCI_CARDBUS_CAPLISTPTR_REG) 135.7546 Tj
-3600 TJm
(0x14) 20.8853 Tj
-2400 TJm
(/* header type 2 */) 99.2053 Tj
-5.2213 -227.8329 Td
(8421 #define) 62.656 Tj
-2400 TJm
(PCI_CAPLIST_PTR\(cpr\)) 104.4266 Tj
-2400 TJm
(\(\(cpr\) & 0xff\)) 73.0986 Tj
-5.2213 -237.3258 Td
(8422 #define) 62.656 Tj
-2400 TJm
(PCI_CAPLIST_NEXT\(cr\)) 104.4266 Tj
-2400 TJm
(\(\(\(cr\) >> 8\) & 0xff\)) 104.4266 Tj
-5.2213 -246.8188 Td
(8423 #define) 62.656 Tj
-2400 TJm
(PCI_CAPLIST_CAP\(cr\)) 99.2053 Tj
-3000 TJm
(\(\(cr\) & 0xff\)) 67.8773 Tj
-5.2213 -256.3118 Td
(8424 ) 26.1067 Tj
-5.2213 -265.8047 Td
(8425 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_RESERVED0) 88.7626 Tj
-4200 TJm
(0x00) 20.8853 Tj
-5.2213 -275.2977 Td
(8426 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_PWRMGMT) 78.32 Tj
-5400 TJm
(0x01) 20.8853 Tj
-5.2213 -284.7907 Td
(8427 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_AGP) 57.4347 Tj
-7800 TJm
(0x02) 20.8853 Tj
-5.2213 -294.2837 Td
(8428 #define PCI_CAP_AGP_MAJOR\(cr\)) 177.5253 Tj
-3600.01 TJm
(\(\(\(cr\) >> 20\) & 0xf\)) 104.4266 Tj
-5.2213 -303.7766 Td
(8429 #define PCI_CAP_AGP_MINOR\(cr\)) 177.5253 Tj
-3600.01 TJm
(\(\(\(cr\) >> 16\) & 0xf\)) 104.4266 Tj
-5.2213 -313.2696 Td
(8430 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_VPD) 57.4347 Tj
-7800 TJm
(0x03) 20.8853 Tj
-5.2213 -322.7626 Td
(8431 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_SLOTID) 73.0986 Tj
-6000 TJm
(0x04) 20.8853 Tj
-5.2213 -332.2555 Td
(8432 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_MSI) 57.4347 Tj
-7800 TJm
(0x05) 20.8853 Tj
-5.2213 -341.7485 Td
(8433 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_CPCI_HOTSWAP) 104.4266 Tj
-2400 TJm
(0x06) 20.8853 Tj
-5.2213 -351.2415 Td
(8434 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_PCIX) 62.656 Tj
-7200 TJm
(0x07) 20.8853 Tj
-5.2213 -360.7344 Td
(8435 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_LDT) 57.4347 Tj
-7800 TJm
(0x08) 20.8853 Tj
-5.2213 -370.2274 Td
(8436 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_VENDSPEC) 83.5413 Tj
-4800 TJm
(0x09) 20.8853 Tj
-5.2213 -379.7204 Td
(8437 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_DEBUGPORT) 88.7626 Tj
-4200 TJm
(0x0a) 20.8853 Tj
-5.2213 -389.2134 Td
(8438 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_CPCI_RSRCCTL) 104.4266 Tj
-2400 TJm
(0x0b) 20.8853 Tj
-5.2213 -398.7063 Td
(8439 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_HOTPLUG) 78.32 Tj
-5400 TJm
(0x0c) 20.8853 Tj
-5.2213 -408.1993 Td
(8440 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_AGP8) 62.656 Tj
-7200 TJm
(0x0e) 20.8853 Tj
-5.2213 -417.6923 Td
(8441 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_SECURE) 73.0986 Tj
-6000 TJm
(0x0f) 20.8853 Tj
-5.2213 -427.1852 Td
(8442 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_PCIEXPRESS     ) 120.0906 Tj
-600 TJm
(0x10) 20.8853 Tj
-5.2213 -436.6782 Td
(8443 #define) 62.656 Tj
-2400 TJm
(PCI_CAP_MSIX) 62.656 Tj
-7200 TJm
(0x11) 20.8853 Tj
-5.2213 -446.1712 Td
(8444 ) 26.1067 Tj
-5.2213 -455.6641 Td
(8445 /*) 36.5493 Tj
-5.2213 -465.1571 Td
(8446  * Vital Product Data; access via capability pointer \(PCI\
 rev 2.2\).) 375.9359 Tj
-5.2213 -474.6501 Td
(8447  */) 41.7707 Tj
-5.2213 -484.1431 Td
(8448 #define) 62.656 Tj
-2400 TJm
(PCI_VPD_ADDRESS_MASK) 104.4266 Tj
-2400 TJm
(0x7fff) 31.328 Tj
-5.2213 -493.636 Td
(8449 #define) 62.656 Tj
-2400 TJm
(PCI_VPD_ADDRESS_SHIFT) 109.648 Tj
-1800 TJm
(16) 10.4427 Tj
-5.2213 -522.1161 Td
(Sheet 84) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 10) 198.4106 Tj
-5.2213 -28.4801 Td
(8450 #define) 62.656 Tj
-2400 TJm
(PCI_VPD_ADDRESS\(ofs\)) 104.4266 Tj
-2400 TJm
(\\) 5.2213 Tj
-5.2213 -37.9735 Td
(8451 ) 26.1067 Tj
-1800 TJm
(\(\(\(ofs\) & PCI_VPD_ADDRESS_MASK\) << PCI_VPD_ADDRESS_SHIFT\)) 297.6159 Tj
-5.2213 -47.4668 Td
(8452 #define) 62.656 Tj
-2400 TJm
(PCI_VPD_DATAREG\(ofs\)) 104.4266 Tj
-2400 TJm
(\(\(ofs\) + 4\)) 57.4347 Tj
-5.2213 -56.9602 Td
(8453 #define) 62.656 Tj
-2400 TJm
(PCI_VPD_OPFLAG) 73.0986 Tj
-6000 TJm
(0x80000000) 52.2133 Tj
-5.2213 -66.4535 Td
(8454 ) 26.1067 Tj
-5.2213 -75.9469 Td
(8455 /*) 36.5493 Tj
-5.2213 -85.4403 Td
(8456  * Power Management Capability; access via capability poin\
ter.) 349.8292 Tj
-5.2213 -94.9336 Td
(8457  */) 41.7707 Tj
-5.2213 -104.427 Td
(8458 ) 26.1067 Tj
-5.2213 -113.9203 Td
(8459 /* Power Management Capability Register */) 245.4026 Tj
-5.2213 -123.4137 Td
(8460 #define PCI_PMCR) 109.648 Tj
-6600 TJm
(0x02) 20.8853 Tj
-5.2213 -132.9071 Td
(8461 #define PCI_PMCR_D1SUPP) 146.1973 Tj
-7200 TJm
(0x0200) 31.328 Tj
-5.2213 -142.4004 Td
(8462 #define PCI_PMCR_D2SUPP) 146.1973 Tj
-7200 TJm
(0x0400) 31.328 Tj
-5.2213 -151.8938 Td
(8463 /* Power Management Control Status Register */) 266.2879 Tj
-5.2213 -161.3871 Td
(8464 #define PCI_PMCSR) 114.8693 Tj
-6000 TJm
(0x04) 20.8853 Tj
-5.2213 -170.8805 Td
(8465 #define PCI_PMCSR_STATE_MASK) 172.304 Tj
-4200 TJm
(0x03) 20.8853 Tj
-5.2213 -180.3739 Td
(8466 #define PCI_PMCSR_STATE_D0      0x00) 214.0746 Tj
-5.2213 -189.8672 Td
(8467 #define PCI_PMCSR_STATE_D1      0x01) 214.0746 Tj
-5.2213 -199.3606 Td
(8468 #define PCI_PMCSR_STATE_D2      0x02) 214.0746 Tj
-5.2213 -208.8539 Td
(8469 #define PCI_PMCSR_STATE_D3      0x03) 214.0746 Tj
-5.2213 -218.3473 Td
(8470 ) 26.1067 Tj
-5.2213 -227.8407 Td
(8471 /*) 36.5493 Tj
-5.2213 -237.334 Td
(8472  * PCI-X capability.) 130.5333 Tj
-5.2213 -246.8274 Td
(8473  */) 41.7707 Tj
-5.2213 -256.3207 Td
(8474 ) 26.1067 Tj
-5.2213 -265.8141 Td
(8475 /*) 36.5493 Tj
-5.2213 -275.3075 Td
(8476  * Command. 16 bits at offset 2 \(e.g. upper 16 bits of th\
e first 32-bit) 396.8212 Tj
-5.2213 -284.8008 Td
(8477  * word at the capability; the lower 16 bits are the capab\
ility ID and) 391.5999 Tj
-5.2213 -294.2942 Td
(8478  * next capability pointer\).) 172.304 Tj
-5.2213 -303.7875 Td
(8479  *) 36.5493 Tj
-5.2213 -313.2809 Td
(8480  * Since we always read PCI config space in 32-bit words, \
we define these) 407.2639 Tj
-5.2213 -322.7743 Td
(8481  * as 32-bit values, offset and shifted appropriately.  Ma\
ke sure you perform) 428.1492 Tj
-5.2213 -332.2676 Td
(8482  * the appropriate R/M/W cycles!) 193.1893 Tj
-5.2213 -341.761 Td
(8483  */) 41.7707 Tj
-5.2213 -351.2543 Td
(8484 #define PCI_PCIX_CMD) 130.5333 Tj
-13800 TJm
(0x00) 20.8853 Tj
-5.2213 -360.7477 Td
(8485 #define PCI_PCIX_CMD_PERR_RECOVER) 198.4106 Tj
-1200 TJm
(0x00010000) 52.2133 Tj
-5.2213 -370.2411 Td
(8486 #define PCI_PCIX_CMD_RELAXED_ORDER) 203.6319 Tj
-600.004 TJm
(0x00020000) 52.2133 Tj
-5.2213 -379.7344 Td
(8487 #define PCI_PCIX_CMD_BYTECNT_MASK) 198.4106 Tj
-1200 TJm
(0x000c0000) 52.2133 Tj
-5.2213 -389.2278 Td
(8488 #define) 62.656 Tj
-2400 TJm
(PCI_PCIX_CMD_BYTECNT_SHIFT) 135.7546 Tj
-3600 TJm
(18) 10.4427 Tj
-5.2213 -398.7211 Td
(8489 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_BCNT_512) 109.648 Tj
-6600 TJm
(0x00000000) 52.2133 Tj
-5.2213 -408.2145 Td
(8490 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_BCNT_1024) 114.8693 Tj
-6000 TJm
(0x00040000) 52.2133 Tj
-5.2213 -417.7079 Td
(8491 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_BCNT_2048) 114.8693 Tj
-6000 TJm
(0x00080000) 52.2133 Tj
-5.2213 -427.2012 Td
(8492 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_BCNT_4096) 114.8693 Tj
-6000 TJm
(0x000c0000) 52.2133 Tj
-5.2213 -436.6946 Td
(8493 #define PCI_PCIX_CMD_SPLTRANS_MASK) 203.6319 Tj
-600.004 TJm
(0x00700000) 52.2133 Tj
-5.2213 -446.1879 Td
(8494 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_1) 120.0906 Tj
-5400 TJm
(0x00000000) 52.2133 Tj
-5.2213 -455.6813 Td
(8495 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_2) 120.0906 Tj
-5400 TJm
(0x00100000) 52.2133 Tj
-5.2213 -465.1747 Td
(8496 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_3) 120.0906 Tj
-5400 TJm
(0x00200000) 52.2133 Tj
-5.2213 -474.668 Td
(8497 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_4) 120.0906 Tj
-5400 TJm
(0x00300000) 52.2133 Tj
-5.2213 -484.1614 Td
(8498 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_8) 120.0906 Tj
-5400 TJm
(0x00400000) 52.2133 Tj
-5.2213 -493.6547 Td
(8499 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_12) 125.312 Tj
-4800 TJm
(0x00500000) 52.2133 Tj
-5.2213 -522.1348 Td
(Sheet 84) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 94 94
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 11) 198.4106 Tj
-5.2213 -28.4801 Td
(8500 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_16) 125.312 Tj
-4800 TJm
(0x00600000) 52.2133 Tj
-5.2213 -37.9735 Td
(8501 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_CMD_SPLTRANS_32) 125.312 Tj
-4800 TJm
(0x00700000) 52.2133 Tj
-5.2213 -47.4668 Td
(8502 ) 26.1067 Tj
-5.2213 -56.9602 Td
(8503 /*) 36.5493 Tj
-5.2213 -66.4535 Td
(8504  * Status. 32 bits at offset 4.) 187.968 Tj
-5.2213 -75.9469 Td
(8505  */) 41.7707 Tj
-5.2213 -85.4403 Td
(8506 #define PCI_PCIX_STATUS) 146.1973 Tj
-12000 TJm
(0x04) 20.8853 Tj
-5.2213 -94.9336 Td
(8507 #define PCI_PCIX_STATUS_FN_MASK) 187.968 Tj
-7200.01 TJm
(0x00000007) 52.2133 Tj
-5.2213 -104.427 Td
(8508 #define PCI_PCIX_STATUS_DEV_MASK) 193.1893 Tj
-1800.01 TJm
(0x000000f8) 52.2133 Tj
-5.2213 -113.9203 Td
(8509 #define PCI_PCIX_STATUS_BUS_MASK) 193.1893 Tj
-1800.01 TJm
(0x0000ff00) 52.2133 Tj
-5.2213 -123.4137 Td
(8510 #define PCI_PCIX_STATUS_64BIT) 177.5253 Tj
-8400.01 TJm
(0x00010000) 52.2133 Tj
-5.2213 -132.9071 Td
(8511 #define PCI_PCIX_STATUS_133) 167.0826 Tj
-9600.01 TJm
(0x00020000) 52.2133 Tj
-5.2213 -142.4004 Td
(8512 #define PCI_PCIX_STATUS_SPLDISC) 187.968 Tj
-7200.01 TJm
(0x00040000) 52.2133 Tj
-5.2213 -151.8938 Td
(8513 #define PCI_PCIX_STATUS_SPLUNEX) 187.968 Tj
-7200.01 TJm
(0x00080000) 52.2133 Tj
-5.2213 -161.3871 Td
(8514 #define PCI_PCIX_STATUS_DEVCPLX) 187.968 Tj
-7200.01 TJm
(0x00100000) 52.2133 Tj
-5.2213 -170.8805 Td
(8515 #define PCI_PCIX_STATUS_MAXB_MASK) 198.4106 Tj
-1200.01 TJm
(0x00600000) 52.2133 Tj
-5.2213 -180.3739 Td
(8516 #define) 62.656 Tj
-2400 TJm
(PCI_PCIX_STATUS_MAXB_SHIFT) 135.7546 Tj
-3600 TJm
(21) 10.4427 Tj
-5.2213 -189.8672 Td
(8517 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXB_512) 125.312 Tj
-4800 TJm
(0x00000000) 52.2133 Tj
-5.2213 -199.3606 Td
(8518 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXB_1024) 130.5333 Tj
-4200 TJm
(0x00200000) 52.2133 Tj
-5.2213 -208.8539 Td
(8519 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXB_2048) 130.5333 Tj
-4200 TJm
(0x00400000) 52.2133 Tj
-5.2213 -218.3473 Td
(8520 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXB_4096) 130.5333 Tj
-4200 TJm
(0x00600000) 52.2133 Tj
-5.2213 -227.8407 Td
(8521 #define PCI_PCIX_STATUS_MAXST_MASK) 203.6319 Tj
-600.007 TJm
(0x03800000) 52.2133 Tj
-5.2213 -237.334 Td
(8522 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_1) 120.0906 Tj
-5400 TJm
(0x00000000) 52.2133 Tj
-5.2213 -246.8274 Td
(8523 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_2) 120.0906 Tj
-5400 TJm
(0x00800000) 52.2133 Tj
-5.2213 -256.3207 Td
(8524 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_3) 120.0906 Tj
-5400 TJm
(0x01000000) 52.2133 Tj
-5.2213 -265.8141 Td
(8525 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_4) 120.0906 Tj
-5400 TJm
(0x01800000) 52.2133 Tj
-5.2213 -275.3075 Td
(8526 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_8) 120.0906 Tj
-5400 TJm
(0x02000000) 52.2133 Tj
-5.2213 -284.8008 Td
(8527 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_12) 125.312 Tj
-4800 TJm
(0x02800000) 52.2133 Tj
-5.2213 -294.2942 Td
(8528 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_16) 125.312 Tj
-4800 TJm
(0x03000000) 52.2133 Tj
-5.2213 -303.7875 Td
(8529 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXST_32) 125.312 Tj
-4800 TJm
(0x03800000) 52.2133 Tj
-5.2213 -313.2809 Td
(8530 #define PCI_PCIX_STATUS_MAXRS_MASK) 203.6319 Tj
-600.007 TJm
(0x1c000000) 52.2133 Tj
-5.2213 -322.7743 Td
(8531 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_1K) 125.312 Tj
-4800 TJm
(0x00000000) 52.2133 Tj
-5.2213 -332.2676 Td
(8532 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_2K) 125.312 Tj
-4800 TJm
(0x04000000) 52.2133 Tj
-5.2213 -341.761 Td
(8533 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_4K) 125.312 Tj
-4800 TJm
(0x08000000) 52.2133 Tj
-5.2213 -351.2543 Td
(8534 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_8K) 125.312 Tj
-4800 TJm
(0x0c000000) 52.2133 Tj
-5.2213 -360.7477 Td
(8535 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_16K) 130.5333 Tj
-4200 TJm
(0x10000000) 52.2133 Tj
-5.2213 -370.2411 Td
(8536 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_32K) 130.5333 Tj
-4200 TJm
(0x14000000) 52.2133 Tj
-5.2213 -379.7344 Td
(8537 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_64K) 130.5333 Tj
-4200 TJm
(0x18000000) 52.2133 Tj
-5.2213 -389.2278 Td
(8538 #define) 62.656 Tj
-7200 TJm
(PCI_PCIX_STATUS_MAXRS_128K) 135.7546 Tj
-3600 TJm
(0x1c000000) 52.2133 Tj
-5.2213 -398.7211 Td
(8539 #define PCI_PCIX_STATUS_SCERR) 177.5253 Tj
-13200 TJm
(0x20000000) 52.2133 Tj
-5.2213 -408.2145 Td
(8540 ) 26.1067 Tj
-5.2213 -417.7079 Td
(8541 ) 26.1067 Tj
-5.2213 -427.2012 Td
(8542 /*) 36.5493 Tj
-5.2213 -436.6946 Td
(8543  * Interrupt Configuration Register; contains interrupt pi\
n and line.) 386.3786 Tj
-5.2213 -446.1879 Td
(8544  */) 41.7707 Tj
-5.2213 -455.6813 Td
(8545 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_REG) 88.7626 Tj
-9000 TJm
(0x3c) 20.8853 Tj
-5.2213 -465.1747 Td
(8546 ) 26.1067 Tj
-5.2213 -474.668 Td
(8547 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8548 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8549 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 85) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 12) 198.4106 Tj
-5.2213 -28.4801 Td
(8550 typedef uint8_t pci_intr_latency_t;) 208.8533 Tj
-5.2213 -37.9735 Td
(8551 typedef uint8_t pci_intr_grant_t;) 198.4106 Tj
-5.2213 -47.4668 Td
(8552 typedef uint8_t pci_intr_pin_t;) 187.968 Tj
-5.2213 -56.9602 Td
(8553 typedef uint8_t pci_intr_line_t;) 193.1893 Tj
-5.2213 -66.4535 Td
(8554 ) 26.1067 Tj
-5.2213 -75.9469 Td
(8555 #define PCI_MAX_LAT_SHIFT) 156.64 Tj
-10800 TJm
(24) 10.4427 Tj
-5.2213 -85.4403 Td
(8556 #define) 62.656 Tj
-2400 TJm
(PCI_MAX_LAT_MASK) 83.5413 Tj
-14400 TJm
(0xff) 20.8853 Tj
-5.2213 -94.9336 Td
(8557 #define) 62.656 Tj
-2400 TJm
(PCI_MAX_LAT\(icr\) \\) 93.984 Tj
-5.2213 -104.427 Td
(8558 ) 26.1067 Tj
-4200 TJm
(\(\(\(icr\) >> PCI_MAX_LAT_SHIFT\) & PCI_MAX_LAT_MASK\)) 255.8453 Tj
-5.2213 -113.9203 Td
(8559 ) 26.1067 Tj
-5.2213 -123.4137 Td
(8560 #define PCI_MIN_GNT_SHIFT) 156.64 Tj
-10800 TJm
(16) 10.4427 Tj
-5.2213 -132.9071 Td
(8561 #define) 62.656 Tj
-2400 TJm
(PCI_MIN_GNT_MASK) 83.5413 Tj
-14400 TJm
(0xff) 20.8853 Tj
-5.2213 -142.4004 Td
(8562 #define) 62.656 Tj
-2400 TJm
(PCI_MIN_GNT\(icr\) \\) 93.984 Tj
-5.2213 -151.8938 Td
(8563 ) 26.1067 Tj
-4200 TJm
(\(\(\(icr\) >> PCI_MIN_GNT_SHIFT\) & PCI_MIN_GNT_MASK\)) 255.8453 Tj
-5.2213 -161.3871 Td
(8564 ) 26.1067 Tj
-5.2213 -170.8805 Td
(8565 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_GRANT_SHIFT) 130.5333 Tj
-9000 TJm
(24) 10.4427 Tj
-5.2213 -180.3739 Td
(8566 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_GRANT_MASK) 125.312 Tj
-9600 TJm
(0xff) 20.8853 Tj
-5.2213 -189.8672 Td
(8567 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_GRANT\(icr\) \\) 135.7546 Tj
-5.2213 -199.3606 Td
(8568 ) 26.1067 Tj
-4200 TJm
(\(\(\(icr\) >> PCI_INTERRUPT_GRANT_SHIFT\) & PCI_INTERRUPT_GRAN\
T_MASK\)) 339.3866 Tj
-5.2213 -208.8539 Td
(8569 ) 26.1067 Tj
-5.2213 -218.3473 Td
(8570 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_LATENCY_SHIFT) 140.976 Tj
-7800 TJm
(16) 10.4427 Tj
-5.2213 -227.8407 Td
(8571 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_LATENCY_MASK) 135.7546 Tj
-8400 TJm
(0xff) 20.8853 Tj
-5.2213 -237.334 Td
(8572 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_LATENCY\(icr\) \\) 146.1973 Tj
-5.2213 -246.8274 Td
(8573 ) 26.1067 Tj
-4200 TJm
(\(\(\(icr\) >> PCI_INTERRUPT_LATENCY_SHIFT\) & PCI_INTERRUPT_LA\
TENCY_MASK\)) 360.2719 Tj
-5.2213 -256.3207 Td
(8574 ) 26.1067 Tj
-5.2213 -265.8141 Td
(8575 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_SHIFT) 120.0906 Tj
-10200 TJm
(8) 5.2213 Tj
-5.2213 -275.3075 Td
(8576 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_MASK) 114.8693 Tj
-10800 TJm
(0xff) 20.8853 Tj
-5.2213 -284.8008 Td
(8577 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN\(icr\) \\) 125.312 Tj
-5.2213 -294.2942 Td
(8578 ) 26.1067 Tj
-4200 TJm
(\(\(\(icr\) >> PCI_INTERRUPT_PIN_SHIFT\) & PCI_INTERRUPT_PIN_MA\
SK\)) 318.5013 Tj
-5.2213 -303.7875 Td
(8579 ) 26.1067 Tj
-5.2213 -313.2809 Td
(8580 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_LINE_SHIFT) 125.312 Tj
-9600 TJm
(0) 5.2213 Tj
-5.2213 -322.7743 Td
(8581 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_LINE_MASK) 120.0906 Tj
-10200 TJm
(0xff) 20.8853 Tj
-5.2213 -332.2676 Td
(8582 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_LINE\(icr\) \\) 130.5333 Tj
-5.2213 -341.761 Td
(8583 ) 26.1067 Tj
-4200 TJm
(\(\(\(icr\) >> PCI_INTERRUPT_LINE_SHIFT\) & PCI_INTERRUPT_LINE_\
MASK\)) 328.9439 Tj
-5.2213 -351.2543 Td
(8584 ) 26.1067 Tj
-5.2213 -360.7477 Td
(8585 #define PCI_INTERRUPT_CODE\(lat,gnt,pin,line\)) 255.8453 Tj
-9000.01 TJm
(\\) 5.2213 Tj
-5.2213 -370.2411 Td
(8586 ) 26.1067 Tj
-3000 TJm
(\(\(\(\(lat\)&PCI_INTERRUPT_LATENCY_MASK\)<<PCI_INTERRUPT_LATEN\
CY_SHIFT\)| \\) 360.2719 Tj
-5.2213 -379.7344 Td
(8587 ) 26.1067 Tj
-3600 TJm
(\(\(\(gnt\)&PCI_INTERRUPT_GRANT_MASK\)  <<PCI_INTERRUPT_GRANT_S\
HIFT\)  | \\) 355.0506 Tj
-5.2213 -389.2278 Td
(8588 ) 26.1067 Tj
-3600 TJm
(\(\(\(pin\)&PCI_INTERRUPT_PIN_MASK\)    <<PCI_INTERRUPT_PIN_SHI\
FT\)    | \\) 355.0506 Tj
-5.2213 -398.7211 Td
(8589 ) 26.1067 Tj
-3600 TJm
(\(\(\(line\)&PCI_INTERRUPT_LINE_MASK\)  <<PCI_INTERRUPT_LINE_SH\
IFT\)\)) 328.9439 Tj
-5.2213 -408.2145 Td
(8590 ) 26.1067 Tj
-5.2213 -417.7079 Td
(8591 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_NONE) 114.8693 Tj
-10800 TJm
(0x00) 20.8853 Tj
-5.2213 -427.2012 Td
(8592 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_A) 99.2053 Tj
-12600 TJm
(0x01) 20.8853 Tj
-5.2213 -436.6946 Td
(8593 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_B) 99.2053 Tj
-12600 TJm
(0x02) 20.8853 Tj
-5.2213 -446.1879 Td
(8594 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_C) 99.2053 Tj
-12600 TJm
(0x03) 20.8853 Tj
-5.2213 -455.6813 Td
(8595 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_D) 99.2053 Tj
-12600 TJm
(0x04) 20.8853 Tj
-5.2213 -465.1747 Td
(8596 #define) 62.656 Tj
-2400 TJm
(PCI_INTERRUPT_PIN_MAX) 109.648 Tj
-11400 TJm
(0x04) 20.8853 Tj
-5.2213 -474.668 Td
(8597 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8598 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8599 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 85) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 95 95
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 13) 198.4106 Tj
-5.2213 -28.4801 Td
(8600 /* Header Type 1 \(Bridge\) configuration registers */) 297.6159 Tj
-5.2213 -37.9735 Td
(8601 #define PCI_BRIDGE_BUS_REG) 161.8613 Tj
-5400.01 TJm
(0x18) 20.8853 Tj
-5.2213 -47.4668 Td
(8602 #define   PCI_BRIDGE_BUS_PRIMARY_SHIFT) 224.5173 Tj
-7800.01 TJm
(0) 5.2213 Tj
-5.2213 -56.9602 Td
(8603 #define   PCI_BRIDGE_BUS_SECONDARY_SHIFT) 234.9599 Tj
-1800.01 TJm
(8) 5.2213 Tj
-5.2213 -66.4535 Td
(8604 #define   PCI_BRIDGE_BUS_SUBORDINATE_SHIFT) 245.4026 Tj
-600.007 TJm
(16) 10.4427 Tj
-5.2213 -75.9469 Td
(8605 ) 26.1067 Tj
-5.2213 -85.4403 Td
(8606 #define PCI_BRIDGE_STATIO_REG) 177.5253 Tj
-8400.01 TJm
(0x1C) 20.8853 Tj
-5.2213 -94.9336 Td
(8607 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_STATIO_IOBASE_SHIFT) 156.64 Tj
-4800 TJm
(0) 5.2213 Tj
-5.2213 -104.427 Td
(8608 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_STATIO_IOLIMIT_SHIFT) 161.8613 Tj
-4200.01 TJm
(8) 5.2213 Tj
-5.2213 -113.9203 Td
(8609 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_STATIO_STATUS_SHIFT) 156.64 Tj
-4800 TJm
(16) 10.4427 Tj
-5.2213 -123.4137 Td
(8610 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_STATIO_IOBASE_MASK) 151.4186 Tj
-5400 TJm
(0xf0) 20.8853 Tj
-5.2213 -132.9071 Td
(8611 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_STATIO_IOLIMIT_MASK) 156.64 Tj
-4800 TJm
(0xf0) 20.8853 Tj
-5.2213 -142.4004 Td
(8612 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_STATIO_STATUS_MASK) 151.4186 Tj
-5400 TJm
(0xffff) 31.328 Tj
-5.2213 -151.8938 Td
(8613 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_IO_32BITS\(reg\)) 130.5333 Tj
-7800 TJm
(\(\(\(reg\) & 0xf\) == 1\)) 104.4266 Tj
-5.2213 -161.3871 Td
(8614 ) 26.1067 Tj
-5.2213 -170.8805 Td
(8615 #define PCI_BRIDGE_MEMORY_REG) 177.5253 Tj
-8400.01 TJm
(0x20) 20.8853 Tj
-5.2213 -180.3739 Td
(8616 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_MEMORY_BASE_SHIFT) 146.1973 Tj
-6000 TJm
(4) 5.2213 Tj
-5.2213 -189.8672 Td
(8617 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_MEMORY_LIMIT_SHIFT) 151.4186 Tj
-5400 TJm
(20) 10.4427 Tj
-5.2213 -199.3606 Td
(8618 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_MEMORY_BASE_MASK) 140.976 Tj
-6600 TJm
(0xffff) 31.328 Tj
-5.2213 -208.8539 Td
(8619 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_MEMORY_LIMIT_MASK) 146.1973 Tj
-6000 TJm
(0xffff) 31.328 Tj
-5.2213 -218.3473 Td
(8620 ) 26.1067 Tj
-5.2213 -227.8407 Td
(8621 #define PCI_BRIDGE_PREFETCHMEM_REG) 203.6319 Tj
-600.007 TJm
(0x24) 20.8853 Tj
-5.2213 -237.334 Td
(8622 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT) 172.304 Tj
-3000.01 TJm
(4) 5.2213 Tj
-5.2213 -246.8274 Td
(8623 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT) 177.5253 Tj
-2400.01 TJm
(20) 10.4427 Tj
-5.2213 -256.3207 Td
(8624 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_PREFETCHMEM_BASE_MASK) 167.0826 Tj
-3600.01 TJm
(0xffff) 31.328 Tj
-5.2213 -265.8141 Td
(8625 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK) 172.304 Tj
-3000.01 TJm
(0xffff) 31.328 Tj
-5.2213 -275.3075 Td
(8626 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_PREFETCHMEM_64BITS\(reg\)) 177.5253 Tj
-2400.01 TJm
(\(\(reg\) & 0xf\)) 67.8773 Tj
-5.2213 -284.8008 Td
(8627 ) 26.1067 Tj
-5.2213 -294.2942 Td
(8628 #define PCI_BRIDGE_PREFETCHBASE32_REG) 219.2959 Tj
-3600.01 TJm
(0x28) 20.8853 Tj
-5.2213 -303.7875 Td
(8629 #define PCI_BRIDGE_PREFETCHLIMIT32_REG) 224.5173 Tj
-3000.01 TJm
(0x2C) 20.8853 Tj
-5.2213 -313.2809 Td
(8630 ) 26.1067 Tj
-5.2213 -322.7743 Td
(8631 #define PCI_BRIDGE_IOHIGH_REG) 177.5253 Tj
-8400.01 TJm
(0x30) 20.8853 Tj
-5.2213 -332.2676 Td
(8632 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_IOHIGH_BASE_SHIFT) 146.1973 Tj
-6000 TJm
(0) 5.2213 Tj
-5.2213 -341.761 Td
(8633 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_IOHIGH_LIMIT_SHIFT) 151.4186 Tj
-5400 TJm
(16) 10.4427 Tj
-5.2213 -351.2543 Td
(8634 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_IOHIGH_BASE_MASK) 140.976 Tj
-6600 TJm
(0xffff) 31.328 Tj
-5.2213 -360.7477 Td
(8635 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_IOHIGH_LIMIT_MASK) 146.1973 Tj
-6000 TJm
(0xffff) 31.328 Tj
-5.2213 -370.2411 Td
(8636 ) 26.1067 Tj
-5.2213 -379.7344 Td
(8637 #define PCI_BRIDGE_CONTROL_REG) 182.7466 Tj
-7800.01 TJm
(0x3C) 20.8853 Tj
-5.2213 -389.2278 Td
(8638 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_CONTROL_SHIFT) 125.312 Tj
-8400 TJm
(16) 10.4427 Tj
-5.2213 -398.7211 Td
(8639 #define) 62.656 Tj
-3600 TJm
(PCI_BRIDGE_CONTROL_MASK) 120.0906 Tj
-9000 TJm
(0xffff) 31.328 Tj
-5.2213 -408.2145 Td
(8640 #define   PCI_BRIDGE_CONTROL_PERE) 198.4106 Tj
-6000.01 TJm
(\(1 <<  0\)) 46.992 Tj
-5.2213 -417.7079 Td
(8641 #define   PCI_BRIDGE_CONTROL_SERR) 198.4106 Tj
-6000.01 TJm
(\(1 <<  1\)) 46.992 Tj
-5.2213 -427.2012 Td
(8642 #define   PCI_BRIDGE_CONTROL_ISA) 193.1893 Tj
-6600.01 TJm
(\(1 <<  2\)) 46.992 Tj
-5.2213 -436.6946 Td
(8643 #define   PCI_BRIDGE_CONTROL_VGA) 193.1893 Tj
-6600.01 TJm
(\(1 <<  3\)) 46.992 Tj
-5.2213 -446.1879 Td
(8644 /* Reserved) 83.5413 Tj
287.1737 -446.1879 Td
(\(1 <<  4\) */) 62.656 Tj
-5.2213 -455.6813 Td
(8645 #define   PCI_BRIDGE_CONTROL_MABRT) 203.6319 Tj
-5400.01 TJm
(\(1 <<  5\)) 46.992 Tj
-5.2213 -465.1747 Td
(8646 #define   PCI_BRIDGE_CONTROL_SECBR) 203.6319 Tj
-5400.01 TJm
(\(1 <<  6\)) 46.992 Tj
-5.2213 -474.668 Td
(8647 #define   PCI_BRIDGE_CONTROL_SECFASTB2B) 229.7386 Tj
-7200.01 TJm
(\(1 <<  7\)) 46.992 Tj
-5.2213 -484.1614 Td
(8648 #define   PCI_BRIDGE_CONTROL_PRI_DISC_TIMER) 250.6239 Tj
-4800.01 TJm
(\(1 <<  8\)) 46.992 Tj
-5.2213 -493.6547 Td
(8649 #define   PCI_BRIDGE_CONTROL_SEC_DISC_TIMER) 250.6239 Tj
-4800.01 TJm
(\(1 <<  9\)) 46.992 Tj
-5.2213 -522.1348 Td
(Sheet 86) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 14) 198.4106 Tj
-5.2213 -28.4801 Td
(8650 #define   PCI_BRIDGE_CONTROL_DISC_TIMER_STAT) 255.8453 Tj
-4200.01 TJm
(\(1 << 10\)) 46.992 Tj
-5.2213 -37.9735 Td
(8651 #define   PCI_BRIDGE_CONTROL_DISC_TIMER_SERR) 255.8453 Tj
-4200.01 TJm
(\(1 << 11\)) 46.992 Tj
-5.2213 -47.4668 Td
(8652 /* Reserved) 83.5413 Tj
287.1737 -47.4668 Td
(\(1 << 12\) - \(1 << 15\) */) 125.312 Tj
-5.2213 -56.9602 Td
(8653 ) 26.1067 Tj
-5.2213 -66.4535 Td
(8654 /*) 36.5493 Tj
-5.2213 -75.9469 Td
(8655  * Vital Product Data resource tags.) 214.0746 Tj
-5.2213 -85.4403 Td
(8656  */) 41.7707 Tj
-5.2213 -94.9336 Td
(8657 struct pci_vpd_smallres {) 156.64 Tj
-5.2213 -104.427 Td
(8658 ) 26.1067 Tj
-1800 TJm
(uint8_t) 36.5493 Tj
-5400 TJm
(vpdres_byte0;) 67.8773 Tj
-6600 TJm
(/* length of data + tag */) 135.7546 Tj
-5.2213 -113.9203 Td
(8659 ) 26.1067 Tj
-1800 TJm
(/* Actual data. */) 93.984 Tj
-5.2213 -123.4137 Td
(8660 } __attribute__\(\(__packed__\)\);) 182.7466 Tj
-5.2213 -132.9071 Td
(8661 ) 26.1067 Tj
-5.2213 -142.4004 Td
(8662 struct pci_vpd_largeres {) 156.64 Tj
-5.2213 -151.8938 Td
(8663 ) 26.1067 Tj
-1800 TJm
(uint8_t) 36.5493 Tj
-5400 TJm
(vpdres_byte0;) 67.8773 Tj
-5.2213 -161.3871 Td
(8664 ) 26.1067 Tj
-1800 TJm
(uint8_t) 36.5493 Tj
-5400 TJm
(vpdres_len_lsb;) 78.32 Tj
-5400 TJm
(/* length of data only */) 130.5333 Tj
-5.2213 -170.8805 Td
(8665 ) 26.1067 Tj
-1800 TJm
(uint8_t) 36.5493 Tj
-5400 TJm
(vpdres_len_msb;) 78.32 Tj
-5.2213 -180.3739 Td
(8666 ) 26.1067 Tj
-1800 TJm
(/* Actual data. */) 93.984 Tj
-5.2213 -189.8672 Td
(8667 } __attribute__\(\(__packed__\)\);) 182.7466 Tj
-5.2213 -199.3606 Td
(8668 ) 26.1067 Tj
-5.2213 -208.8539 Td
(8669 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_ISLARGE\(x\)) 109.648 Tj
-11400 TJm
(\(\(x\) & 0x80\)) 62.656 Tj
-5.2213 -218.3473 Td
(8670 ) 26.1067 Tj
-5.2213 -227.8407 Td
(8671 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_SMALL_LENGTH\(x\)) 135.7546 Tj
-8400 TJm
(\(\(x\) & 0x7\)) 57.4347 Tj
-5.2213 -237.334 Td
(8672 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_SMALL_NAME\(x\)) 125.312 Tj
-9600 TJm
(\(\(\(x\) >> 3\) & 0xf\)) 93.984 Tj
-5.2213 -246.8274 Td
(8673 ) 26.1067 Tj
-5.2213 -256.3207 Td
(8674 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_LARGE_NAME\(x\)) 125.312 Tj
-9600 TJm
(\(\(x\) & 0x7f\)) 62.656 Tj
-5.2213 -265.8141 Td
(8675 ) 26.1067 Tj
-5.2213 -275.3075 Td
(8676 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID) 187.968 Tj
-2400 TJm
(0x3) 15.664 Tj
-3000 TJm
(/* small */) 57.4347 Tj
-5.2213 -284.8008 Td
(8677 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_TYPE_VENDOR_DEFINED) 156.64 Tj
-6000 TJm
(0xe) 15.664 Tj
-3000 TJm
(/* small */) 57.4347 Tj
-5.2213 -294.2942 Td
(8678 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_TYPE_END_TAG) 120.0906 Tj
-10200 TJm
(0xf) 15.664 Tj
-3000 TJm
(/* small */) 57.4347 Tj
-5.2213 -303.7875 Td
(8679 ) 26.1067 Tj
-5.2213 -313.2809 Td
(8680 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_TYPE_IDENTIFIER_STRING) 172.304 Tj
-4200 TJm
(0x02) 20.8853 Tj
-2400 TJm
(/* large */) 57.4347 Tj
-5.2213 -322.7743 Td
(8681 #define) 62.656 Tj
-2400 TJm
(PCI_VPDRES_TYPE_VPD) 99.2053 Tj
-12600 TJm
(0x10) 20.8853 Tj
-2400 TJm
(/* large */) 57.4347 Tj
-5.2213 -332.2676 Td
(8682 ) 26.1067 Tj
-5.2213 -341.761 Td
(8683 struct pci_vpd {) 109.648 Tj
-5.2213 -351.2543 Td
(8684 ) 26.1067 Tj
-1800 TJm
(uint8_t) 36.5493 Tj
-5400 TJm
(vpd_key0;) 46.992 Tj
-5.2213 -360.7477 Td
(8685 ) 26.1067 Tj
-1800 TJm
(uint8_t) 36.5493 Tj
-5400 TJm
(vpd_key1;) 46.992 Tj
-5.2213 -370.2411 Td
(8686 ) 26.1067 Tj
-1800 TJm
(uint8_t) 36.5493 Tj
-5400 TJm
(vpd_len;) 41.7707 Tj
-9600 TJm
(/* length of data only */) 130.5333 Tj
-5.2213 -379.7344 Td
(8687 ) 26.1067 Tj
-1800 TJm
(/* Actual data. */) 93.984 Tj
-5.2213 -389.2278 Td
(8688 } __attribute__\(\(__packed__\)\);) 182.7466 Tj
-5.2213 -398.7211 Td
(8689 ) 26.1067 Tj
-5.2213 -408.2145 Td
(8690 /*) 36.5493 Tj
-5.2213 -417.7079 Td
(8691  * Recommended VPD fields:) 161.8613 Tj
-5.2213 -427.2012 Td
(8692  *) 36.5493 Tj
-5.2213 -436.6946 Td
(8693  *) 36.5493 Tj
-600 TJm
(PN) 10.4427 Tj
-8400 TJm
(Part number of assembly) 120.0906 Tj
-5.2213 -446.1879 Td
(8694  *) 36.5493 Tj
-600 TJm
(FN) 10.4427 Tj
-8400 TJm
(FRU part number) 78.32 Tj
-5.2213 -455.6813 Td
(8695  *) 36.5493 Tj
-600 TJm
(EC) 10.4427 Tj
-8400 TJm
(EC level of assembly) 104.4266 Tj
-5.2213 -465.1747 Td
(8696  *) 36.5493 Tj
-600 TJm
(MN) 10.4427 Tj
-8400 TJm
(Manufacture ID) 73.0986 Tj
-5.2213 -474.668 Td
(8697  *) 36.5493 Tj
-600 TJm
(SN) 10.4427 Tj
-8400 TJm
(Serial Number) 67.8773 Tj
-5.2213 -484.1614 Td
(8698  *) 36.5493 Tj
-5.2213 -493.6547 Td
(8699  * Conditionally recommended VPD fields:) 234.9599 Tj
-5.2213 -522.1348 Td
(Sheet 86) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 96 96
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pcireg.h  Page 15) 198.4106 Tj
-5.2213 -28.4801 Td
(8700  *) 36.5493 Tj
-5.2213 -37.9735 Td
(8701  *) 36.5493 Tj
-600 TJm
(LI) 10.4427 Tj
-8400 TJm
(Load ID) 36.5493 Tj
-5.2213 -47.4668 Td
(8702  *) 36.5493 Tj
-600 TJm
(RL) 10.4427 Tj
-8400 TJm
(ROM Level) 46.992 Tj
-5.2213 -56.9602 Td
(8703  *) 36.5493 Tj
-600 TJm
(RM) 10.4427 Tj
-8400 TJm
(Alterable ROM Level) 99.2053 Tj
-5.2213 -66.4535 Td
(8704  *) 36.5493 Tj
-600 TJm
(NA) 10.4427 Tj
-8400 TJm
(Network Address) 78.32 Tj
-5.2213 -75.9469 Td
(8705  *) 36.5493 Tj
-600 TJm
(DD) 10.4427 Tj
-8400 TJm
(Device Driver Level) 99.2053 Tj
-5.2213 -85.4403 Td
(8706  *) 36.5493 Tj
-600 TJm
(DG) 10.4427 Tj
-8400 TJm
(Diagnostic Level) 83.5413 Tj
-5.2213 -94.9336 Td
(8707  *) 36.5493 Tj
-600 TJm
(LL) 10.4427 Tj
-8400 TJm
(Loadable Microcode Level) 125.312 Tj
-5.2213 -104.427 Td
(8708  *) 36.5493 Tj
-600 TJm
(VI) 10.4427 Tj
-8400 TJm
(Vendor ID/Device ID) 99.2053 Tj
-5.2213 -113.9203 Td
(8709  *) 36.5493 Tj
-600 TJm
(FU) 10.4427 Tj
-8400 TJm
(Function Number) 78.32 Tj
-5.2213 -123.4137 Td
(8710  *) 36.5493 Tj
-600 TJm
(SI) 10.4427 Tj
-8400 TJm
(Subsystem Vendor ID/Subsystem ID) 167.0826 Tj
-5.2213 -132.9071 Td
(8711  *) 36.5493 Tj
-5.2213 -142.4004 Td
(8712  * Additional VPD fields:) 156.64 Tj
-5.2213 -151.8938 Td
(8713  *) 36.5493 Tj
-5.2213 -161.3871 Td
(8714  *) 36.5493 Tj
-600 TJm
(Z0-ZZ) 26.1067 Tj
-6600 TJm
(User/Product Specific) 109.648 Tj
-5.2213 -170.8805 Td
(8715  */) 41.7707 Tj
-5.2213 -180.3739 Td
(8716 ) 26.1067 Tj
-5.2213 -189.8672 Td
(8717 /*) 36.5493 Tj
-5.2213 -199.3606 Td
(8718  * Threshold below which 32bit PCI DMA needs bouncing.) 308.0586 Tj
-5.2213 -208.8539 Td
(8719  */) 41.7707 Tj
-5.2213 -218.3473 Td
(8720 #define PCI32_DMA_BOUNCE_THRESHOLD) 203.6319 Tj
-600.007 TJm
(0x100000000ULL) 73.0986 Tj
-5.2213 -227.8407 Td
(8721 ) 26.1067 Tj
-5.2213 -237.334 Td
(8722 #endif /* _DEV_PCI_PCIREG_H_ */) 187.968 Tj
-5.2213 -246.8274 Td
(8723 ) 26.1067 Tj
-5.2213 -256.3207 Td
(8724 ) 26.1067 Tj
-5.2213 -265.8141 Td
(8725 ) 26.1067 Tj
-5.2213 -275.3075 Td
(8726 ) 26.1067 Tj
-5.2213 -284.8008 Td
(8727 ) 26.1067 Tj
-5.2213 -294.2942 Td
(8728 ) 26.1067 Tj
-5.2213 -303.7875 Td
(8729 ) 26.1067 Tj
-5.2213 -313.2809 Td
(8730 ) 26.1067 Tj
-5.2213 -322.7743 Td
(8731 ) 26.1067 Tj
-5.2213 -332.2676 Td
(8732 ) 26.1067 Tj
-5.2213 -341.761 Td
(8733 ) 26.1067 Tj
-5.2213 -351.2543 Td
(8734 ) 26.1067 Tj
-5.2213 -360.7477 Td
(8735 ) 26.1067 Tj
-5.2213 -370.2411 Td
(8736 ) 26.1067 Tj
-5.2213 -379.7344 Td
(8737 ) 26.1067 Tj
-5.2213 -389.2278 Td
(8738 ) 26.1067 Tj
-5.2213 -398.7211 Td
(8739 ) 26.1067 Tj
-5.2213 -408.2145 Td
(8740 ) 26.1067 Tj
-5.2213 -417.7079 Td
(8741 ) 26.1067 Tj
-5.2213 -427.2012 Td
(8742 ) 26.1067 Tj
-5.2213 -436.6946 Td
(8743 ) 26.1067 Tj
-5.2213 -446.1879 Td
(8744 ) 26.1067 Tj
-5.2213 -455.6813 Td
(8745 ) 26.1067 Tj
-5.2213 -465.1747 Td
(8746 ) 26.1067 Tj
-5.2213 -474.668 Td
(8747 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8748 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8749 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 87) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.c  Page 1) 177.5253 Tj
-5.2213 -28.4801 Td
(8750 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(8751 #include "x86.h") 109.648 Tj
-5.2213 -47.4668 Td
(8752 #include "defs.h") 114.8693 Tj
-5.2213 -56.9602 Td
(8753 #include "pci.h") 109.648 Tj
-5.2213 -66.4535 Td
(8754 #include "pcireg.h") 125.312 Tj
-5.2213 -75.9469 Td
(8755 #include "assert.h") 125.312 Tj
-5.2213 -85.4403 Td
(8756 #include "e100.h") 114.8693 Tj
-5.2213 -94.9336 Td
(8757 ) 26.1067 Tj
-5.2213 -104.427 Td
(8758 // Flag to do "lspci" at bootup) 187.968 Tj
-5.2213 -113.9203 Td
(8759 static int pci_show_devs = 1;) 177.5253 Tj
-5.2213 -123.4137 Td
(8760 static int pci_show_addrs = 1;) 182.7466 Tj
-5.2213 -132.9071 Td
(8761 ) 26.1067 Tj
-5.2213 -142.4004 Td
(8762 // PCI "configuration mechanism one") 214.0746 Tj
-5.2213 -151.8938 Td
(8763 static uint32_t pci_conf1_addr_ioport = 0x0cf8;) 271.5093 Tj
-5.2213 -161.3871 Td
(8764 static uint32_t pci_conf1_data_ioport = 0x0cfc;) 271.5093 Tj
-5.2213 -170.8805 Td
(8765 ) 26.1067 Tj
-5.2213 -180.3739 Td
(8766 // Forward declarations) 146.1973 Tj
-5.2213 -189.8672 Td
(8767 static int pci_bridge_attach\(struct pci_func *pcif\);) 297.6159 Tj
-5.2213 -199.3606 Td
(8768 static int pci_bridge_pci_attach\(struct pci_func *pcif\);) 318.5013 Tj
-5.2213 -208.8539 Td
(8769 static int pci_display_attach\(struct pci_func *pcif\);) 302.8373 Tj
-5.2213 -218.3473 Td
(8770 static int pci_net_ether_attach\(struct pci_func *pcif\);) 313.2799 Tj
-5.2213 -227.8407 Td
(8771 ) 26.1067 Tj
-5.2213 -237.334 Td
(8772 // PCI driver table) 125.312 Tj
-5.2213 -246.8274 Td
(8773 struct pci_driver {) 125.312 Tj
-5.2213 -256.3207 Td
(8774     uint32_t key1, key2;) 151.4186 Tj
-5.2213 -265.8141 Td
(8775     int \(*attachfn\) \(struct pci_func *pcif\);) 255.8453 Tj
-5.2213 -275.3075 Td
(8776 };) 36.5493 Tj
-5.2213 -284.8008 Td
(8777 ) 26.1067 Tj
-5.2213 -294.2942 Td
(8778 #define PCI_SUBCLASS_ANY 0xffff) 187.968 Tj
-5.2213 -303.7875 Td
(8779 ) 26.1067 Tj
-5.2213 -313.2809 Td
(8780 struct pci_driver pci_attach_class[] = {) 234.9599 Tj
-5.2213 -322.7743 Td
(8781     { PCI_CLASS_BRIDGE, PCI_SUBCLASS_ANY, &pci_bridge_atta\
ch },) 355.0506 Tj
-5.2213 -332.2676 Td
(8782     { PCI_CLASS_BRIDGE, PCI_SUBCLASS_BRIDGE_PCI, &pci_brid\
ge_pci_attach },) 412.4852 Tj
-5.2213 -341.761 Td
(8783     { PCI_CLASS_DISPLAY, PCI_SUBCLASS_ANY, &pci_display_at\
tach },) 365.4932 Tj
-5.2213 -351.2543 Td
(8784     { PCI_CLASS_NETWORK, PCI_SUBCLASS_NETWORK_ETHERNET,) 313.2799 Tj
-5.2213 -360.7477 Td
(8785         &pci_net_ether_attach },) 193.1893 Tj
-5.2213 -370.2411 Td
(8786     { 0, 0, 0 },) 109.648 Tj
-5.2213 -379.7344 Td
(8787 };) 36.5493 Tj
-5.2213 -389.2278 Td
(8788 ) 26.1067 Tj
-5.2213 -398.7211 Td
(8789 struct pci_driver pci_attach_vendor[] = {) 240.1813 Tj
-5.2213 -408.2145 Td
(8790     { PCI_VENDOR_INTEL, PCI_PRODUCT_E100, &ether_e100_atta\
ch },) 355.0506 Tj
-5.2213 -417.7079 Td
(8791     { 0, 0, 0 },) 109.648 Tj
-5.2213 -427.2012 Td
(8792 };) 36.5493 Tj
-5.2213 -436.6946 Td
(8793 ) 26.1067 Tj
-5.2213 -446.1879 Td
(8794 ) 26.1067 Tj
-5.2213 -455.6813 Td
(8795 ) 26.1067 Tj
-5.2213 -465.1747 Td
(8796 ) 26.1067 Tj
-5.2213 -474.668 Td
(8797 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8798 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 87) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 97 97
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.c  Page 2) 177.5253 Tj
-5.2213 -28.4801 Td
(8800 static void) 83.5413 Tj
-5.2213 -37.9735 Td
(8801 pci_conf1_set_addr\(uint32_t bus,) 193.1893 Tj
-5.2213 -47.4668 Td
(8802 ) 26.1067 Tj
-8400 TJm
(uint32_t dev,) 67.8773 Tj
-5.2213 -56.9602 Td
(8803 ) 26.1067 Tj
-8400 TJm
(uint32_t func,) 73.0986 Tj
-5.2213 -66.4535 Td
(8804 ) 26.1067 Tj
-8400 TJm
(uint32_t offset\)) 83.5413 Tj
-5.2213 -75.9469 Td
(8805 {) 31.328 Tj
-5.2213 -85.4403 Td
(8806     assert\(bus < 256\);) 140.976 Tj
-5.2213 -94.9336 Td
(8807     assert\(dev < 32\);) 135.7546 Tj
-5.2213 -104.427 Td
(8808     assert\(func < 8\);) 135.7546 Tj
-5.2213 -113.9203 Td
(8809     assert\(offset < 256\);) 156.64 Tj
-5.2213 -123.4137 Td
(8810     assert\(\(offset & 0x3\) == 0\);) 193.1893 Tj
-5.2213 -132.9071 Td
(8811 ) 26.1067 Tj
-5.2213 -142.4004 Td
(8812     uint32_t v = \(1 << 31\) |) 172.304 Tj
-9000.01 TJm
(// config-space) 78.32 Tj
-5.2213 -151.8938 Td
(8813 ) 26.1067 Tj
-7200 TJm
(\(bus << 16\) | \(dev << 11\) | \(func << 8\) | \(offset\);) 266.2879 Tj
-5.2213 -161.3871 Td
(8814     outl\(pci_conf1_addr_ioport, v\);) 208.8533 Tj
-5.2213 -170.8805 Td
(8815 }) 31.328 Tj
-5.2213 -180.3739 Td
(8816 ) 26.1067 Tj
-5.2213 -189.8672 Td
(8817 static uint32_t) 104.4266 Tj
-5.2213 -199.3606 Td
(8818 pci_conf_read\(struct pci_func *f, uint32_t off\)) 271.5093 Tj
-5.2213 -208.8539 Td
(8819 {) 31.328 Tj
-5.2213 -218.3473 Td
(8820     pci_conf1_set_addr\(f->bus->busno, f->dev, f->func, of\
f\);) 339.3866 Tj
-5.2213 -227.8407 Td
(8821     return inl\(pci_conf1_data_ioport\);) 224.5173 Tj
-5.2213 -237.334 Td
(8822 }) 31.328 Tj
-5.2213 -246.8274 Td
(8823 ) 26.1067 Tj
-5.2213 -256.3207 Td
(8824 static void) 83.5413 Tj
-5.2213 -265.8141 Td
(8825 pci_conf_write\(struct pci_func *f, uint32_t off, uint32_t\
 v\)) 339.3866 Tj
-5.2213 -275.3075 Td
(8826 {) 31.328 Tj
-5.2213 -284.8008 Td
(8827     pci_conf1_set_addr\(f->bus->busno, f->dev, f->func, of\
f\);) 339.3866 Tj
-5.2213 -294.2942 Td
(8828     outl\(pci_conf1_data_ioport, v\);) 208.8533 Tj
-5.2213 -303.7875 Td
(8829 }) 31.328 Tj
-5.2213 -313.2809 Td
(8830 ) 26.1067 Tj
-5.2213 -322.7743 Td
(8831 static int __attribute__\(\(warn_unused_result\)\)) 266.2879 Tj
-5.2213 -332.2676 Td
(8832 pci_attach_match\(uint32_t key1, uint32_t key2,) 266.2879 Tj
-5.2213 -341.761 Td
(8833 ) 26.1067 Tj
-7200 TJm
(struct pci_driver *list, struct pci_func *pcif\)) 245.4026 Tj
-5.2213 -351.2543 Td
(8834 {) 31.328 Tj
-5.2213 -360.7477 Td
(8835     uint32_t i;) 104.4266 Tj
-5.2213 -370.2411 Td
(8836 ) 26.1067 Tj
-5.2213 -379.7344 Td
(8837     for \(i = 0; list[i].attachfn; i++\) {) 234.9599 Tj
-5.2213 -389.2278 Td
(8838 ) 26.1067 Tj
-1800 TJm
(if \(list[i].key1 == key1 \)) 135.7546 Tj
-5.2213 -398.7211 Td
(8839         if \(\(list[i].key2 == key2\) || \(list[i].key2 ==\
 0xffff\)\) {) 365.4932 Tj
-5.2213 -408.2145 Td
(8840 ) 26.1067 Tj
-6600 TJm
(int r = list[i].attachfn\(pcif\);) 161.8613 Tj
-5.2213 -417.7079 Td
(8841 ) 26.1067 Tj
-6600 TJm
(if \(r > 0\)) 52.2133 Tj
-5.2213 -427.2012 Td
(8842 ) 26.1067 Tj
-11400 TJm
(return r;) 46.992 Tj
-5.2213 -436.6946 Td
(8843 ) 26.1067 Tj
-6600 TJm
(if \(r < 0\)) 52.2133 Tj
-5.2213 -446.1879 Td
(8844 ) 26.1067 Tj
-6600 TJm
(///cprintf\("pci_attach_match: attaching %x.%x \(%p\): %s\\n",) 302.8373 Tj
-5.2213 -455.6813 Td
(8845 ) 26.1067 Tj
-6600 TJm
(//) 10.4427 Tj
-3600 TJm
(key1, key2, list[i].attachfn, e2s\(r\)\);) 198.4106 Tj
-5.2213 -465.1747 Td
(8846 ) 26.1067 Tj
-11400 TJm
(cprintf\("pci_attach_match: attaching %x.%x \(%p\): SOME ERROR\\\
n",) 328.9439 Tj
-5.2213 -474.668 Td
(8847 ) 26.1067 Tj
-16200 TJm
(key1, key2, list[i].attachfn\);) 156.64 Tj
-5.2213 -484.1614 Td
(8848 ) 26.1067 Tj
-4200 TJm
(}) 5.2213 Tj
-5.2213 -493.6547 Td
(8849     }) 52.2133 Tj
-5.2213 -522.1348 Td
(Sheet 88) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.c  Page 3) 177.5253 Tj
-5.2213 -28.4801 Td
(8850     return 0;) 93.984 Tj
-5.2213 -37.9735 Td
(8851 }) 31.328 Tj
-5.2213 -47.4668 Td
(8852 ) 26.1067 Tj
-5.2213 -56.9602 Td
(8853 static int) 78.32 Tj
-5.2213 -66.4535 Td
(8854 pci_attach\(struct pci_func *f\)) 182.7466 Tj
-5.2213 -75.9469 Td
(8855 {) 31.328 Tj
-5.2213 -85.4403 Td
(8856     return) 78.32 Tj
-5.2213 -94.9336 Td
(8857 ) 26.1067 Tj
-1800 TJm
(pci_attach_match\(PCI_CLASS\(f->dev_class\), PCI_SUBCLASS\(f->d\
ev_class\),) 360.2719 Tj
-5.2213 -104.427 Td
(8858 ) 26.1067 Tj
-12000 TJm
(&pci_attach_class[0], f\) ||) 140.976 Tj
-5.2213 -113.9203 Td
(8859 ) 26.1067 Tj
-1800 TJm
(pci_attach_match\(PCI_VENDOR\(f->dev_id\), PCI_PRODUCT\(f->dev_\
id\),) 328.9439 Tj
-5.2213 -123.4137 Td
(8860 ) 26.1067 Tj
-12000 TJm
(&pci_attach_vendor[0], f\);) 135.7546 Tj
-5.2213 -132.9071 Td
(8861 }) 31.328 Tj
-5.2213 -142.4004 Td
(8862 ) 26.1067 Tj
-5.2213 -151.8938 Td
(8863 static int) 78.32 Tj
-5.2213 -161.3871 Td
(8864 pci_scan_bus\(struct pci_bus *bus\)) 198.4106 Tj
-5.2213 -170.8805 Td
(8865 {) 31.328 Tj
-5.2213 -180.3739 Td
(8866     int totaldev = 0;) 135.7546 Tj
-5.2213 -189.8672 Td
(8867     struct pci_func df;) 146.1973 Tj
-5.2213 -199.3606 Td
(8868     memset\(&df, 0, sizeof\(df\)\);) 187.968 Tj
-5.2213 -208.8539 Td
(8869     df.bus = bus;) 114.8693 Tj
-5.2213 -218.3473 Td
(8870 ) 26.1067 Tj
-5.2213 -227.8407 Td
(8871     for \(df.dev = 0; df.dev < 32; df.dev++\) {) 261.0666 Tj
-5.2213 -237.334 Td
(8872 ) 26.1067 Tj
-1800 TJm
(uint32_t bhlc = pci_conf_read\(&df, PCI_BHLC_REG\);) 255.8453 Tj
-5.2213 -246.8274 Td
(8873 ) 26.1067 Tj
-1800 TJm
(if \(PCI_HDRTYPE_TYPE\(bhlc\) > 1\)) 161.8613 Tj
-3000 TJm
(// Unsupported or no device) 140.976 Tj
-5.2213 -256.3207 Td
(8874 ) 26.1067 Tj
-4200 TJm
(continue;) 46.992 Tj
-5.2213 -265.8141 Td
(8875 ) 26.1067 Tj
-5.2213 -275.3075 Td
(8876 ) 26.1067 Tj
-1800 TJm
(totaldev++;) 57.4347 Tj
-5.2213 -284.8008 Td
(8877 ) 26.1067 Tj
-5.2213 -294.2942 Td
(8878 ) 26.1067 Tj
-1800 TJm
(struct pci_func f = df;) 120.0906 Tj
-5.2213 -303.7875 Td
(8879 ) 26.1067 Tj
-1800 TJm
(for \(f.func = 0; f.func < \(PCI_HDRTYPE_MULTIFN\(bhlc\) ? 8 : \
1\);) 323.7226 Tj
-5.2213 -313.2809 Td
(8880 ) 26.1067 Tj
-12000 TJm
(f.func++\) {) 57.4347 Tj
-5.2213 -322.7743 Td
(8881 ) 26.1067 Tj
-4200 TJm
(struct pci_func af = f;) 120.0906 Tj
-5.2213 -332.2676 Td
(8882 ) 26.1067 Tj
-5.2213 -341.761 Td
(8883 ) 26.1067 Tj
-4200 TJm
(af.dev_id = pci_conf_read\(&f, PCI_ID_REG\);) 219.2959 Tj
-5.2213 -351.2543 Td
(8884 ) 26.1067 Tj
-4200 TJm
(if \(PCI_VENDOR\(af.dev_id\) == 0xffff\)) 187.968 Tj
-5.2213 -360.7477 Td
(8885 ) 26.1067 Tj
-6600 TJm
(continue;) 46.992 Tj
-5.2213 -370.2411 Td
(8886 ) 26.1067 Tj
-5.2213 -379.7344 Td
(8887 ) 26.1067 Tj
-4200 TJm
(uint32_t intr = pci_conf_read\(&af, PCI_INTERRUPT_REG\);) 281.9519 Tj
-5.2213 -389.2278 Td
(8888 ) 26.1067 Tj
-4200 TJm
(af.irq_line = PCI_INTERRUPT_LINE\(intr\);) 203.6319 Tj
-5.2213 -398.7211 Td
(8889 ) 26.1067 Tj
-5.2213 -408.2145 Td
(8890 ) 26.1067 Tj
-4200 TJm
(af.dev_class = pci_conf_read\(&af, PCI_CLASS_REG\);) 255.8453 Tj
-5.2213 -417.7079 Td
(8891 ) 26.1067 Tj
-4200 TJm
(if \(pci_show_devs\)) 93.984 Tj
-5.2213 -427.2012 Td
(8892 ) 26.1067 Tj
-6600 TJm
(cprintf\("PCI: %02x:%02x.%d: %04x:%04x: class %x.%x irq %d\\n",) 318.5013 Tj
-5.2213 -436.6946 Td
(8893 ) 26.1067 Tj
-11400 TJm
(af.bus->busno, af.dev, af.func,) 161.8613 Tj
-5.2213 -446.1879 Td
(8894 ) 26.1067 Tj
-11400 TJm
(PCI_VENDOR\(af.dev_id\), PCI_PRODUCT\(af.dev_id\),) 240.1813 Tj
-5.2213 -455.6813 Td
(8895 ) 26.1067 Tj
-11400 TJm
(PCI_CLASS\(af.dev_class\), PCI_SUBCLASS\(af.dev_class\),) 271.5093 Tj
-5.2213 -465.1747 Td
(8896 ) 26.1067 Tj
-11400 TJm
(af.irq_line\);) 67.8773 Tj
-5.2213 -474.668 Td
(8897 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8898 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8899 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 88) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 98 98
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.c  Page 4) 177.5253 Tj
-5.2213 -28.4801 Td
(8900 ) 26.1067 Tj
-4200 TJm
(pci_attach\(&af\);) 83.5413 Tj
-5.2213 -37.9735 Td
(8901 ) 26.1067 Tj
-1800 TJm
(}) 5.2213 Tj
-5.2213 -47.4668 Td
(8902     }) 52.2133 Tj
-5.2213 -56.9602 Td
(8903 ) 26.1067 Tj
-5.2213 -66.4535 Td
(8904     return totaldev;) 130.5333 Tj
-5.2213 -75.9469 Td
(8905 }) 31.328 Tj
-5.2213 -85.4403 Td
(8906 ) 26.1067 Tj
-5.2213 -94.9336 Td
(8907 static int) 78.32 Tj
-5.2213 -104.427 Td
(8908 pci_net_ether_attach\(struct pci_func *pcif\)) 250.6239 Tj
-5.2213 -113.9203 Td
(8909 {) 31.328 Tj
-5.2213 -123.4137 Td
(8910     cprintf\("PCI: %02x:%02x.%d: Network \(ethernet\) %04x\
:%04x\\n",) 360.2719 Tj
-5.2213 -132.9071 Td
(8911 ) 26.1067 Tj
-6600 TJm
(pcif->bus->busno, pcif->dev, pcif->func,) 208.8533 Tj
-5.2213 -142.4004 Td
(8912         PCI_VENDOR\(pcif->dev_id\), PCI_PRODUCT\(pcif->dev\
_id\)\);) 344.6079 Tj
-5.2213 -151.8938 Td
(8913     return 0;) 93.984 Tj
-5.2213 -161.3871 Td
(8914 }) 31.328 Tj
-5.2213 -170.8805 Td
(8915 ) 26.1067 Tj
-5.2213 -180.3739 Td
(8916 static int) 78.32 Tj
-5.2213 -189.8672 Td
(8917 pci_bridge_attach\(struct pci_func *pcif\)) 234.9599 Tj
-5.2213 -199.3606 Td
(8918 {) 31.328 Tj
-5.2213 -208.8539 Td
(8919     cprintf\("PCI: %02x:%02x.%d: Bridge %04x:%04x\\n",) 297.6159 Tj
-5.2213 -218.3473 Td
(8920 ) 26.1067 Tj
-6600 TJm
(pcif->bus->busno, pcif->dev, pcif->func,) 208.8533 Tj
-5.2213 -227.8407 Td
(8921         PCI_VENDOR\(pcif->dev_id\), PCI_PRODUCT\(pcif->dev\
_id\)\);) 344.6079 Tj
-5.2213 -237.334 Td
(8922     return 0;) 93.984 Tj
-5.2213 -246.8274 Td
(8923 }) 31.328 Tj
-5.2213 -256.3207 Td
(8924 ) 26.1067 Tj
-5.2213 -265.8141 Td
(8925 static int) 78.32 Tj
-5.2213 -275.3075 Td
(8926 pci_bridge_pci_attach\(struct pci_func *pcif\)) 255.8453 Tj
-5.2213 -284.8008 Td
(8927 {) 31.328 Tj
-5.2213 -294.2942 Td
(8928     uint32_t ioreg  = pci_conf_read\(pcif, PCI_BRIDGE_STAT\
IO_REG\);) 365.4932 Tj
-5.2213 -303.7875 Td
(8929     uint32_t busreg = pci_conf_read\(pcif, PCI_BRIDGE_BUS_\
REG\);) 349.8292 Tj
-5.2213 -313.2809 Td
(8930 ) 26.1067 Tj
-5.2213 -322.7743 Td
(8931     if \(PCI_BRIDGE_IO_32BITS\(ioreg\)\) {) 224.5173 Tj
-5.2213 -332.2676 Td
(8932 ) 26.1067 Tj
-1800 TJm
(cprintf\("PCI: %02x:%02x.%d: 32-bit bridge IO not supported.\\n\
",) 328.9439 Tj
-5.2213 -341.761 Td
(8933 ) 26.1067 Tj
-6600 TJm
(pcif->bus->busno, pcif->dev, pcif->func\);) 214.0746 Tj
-5.2213 -351.2543 Td
(8934 ) 26.1067 Tj
-1800 TJm
(return 0;) 46.992 Tj
-5.2213 -360.7477 Td
(8935     }) 52.2133 Tj
-5.2213 -370.2411 Td
(8936 ) 26.1067 Tj
-5.2213 -379.7344 Td
(8937     struct pci_bus nbus;) 151.4186 Tj
-5.2213 -389.2278 Td
(8938     memset\(&nbus, 0, sizeof\(nbus\)\);) 208.8533 Tj
-5.2213 -398.7211 Td
(8939     nbus.parent_bridge = pcif;) 182.7466 Tj
-5.2213 -408.2145 Td
(8940     nbus.busno = \(busreg >> PCI_BRIDGE_BUS_SECONDARY_SHIF\
T\) & 0xff;) 375.9359 Tj
-5.2213 -417.7079 Td
(8941 ) 26.1067 Tj
-5.2213 -427.2012 Td
(8942     if \(pci_show_devs\)) 140.976 Tj
-5.2213 -436.6946 Td
(8943 ) 26.1067 Tj
-1800 TJm
(cprintf\("PCI: %02x:%02x.%d: bridge to PCI bus %d--%d\\n",) 292.3946 Tj
-5.2213 -446.1879 Td
(8944 ) 26.1067 Tj
-6600 TJm
(pcif->bus->busno, pcif->dev, pcif->func,) 208.8533 Tj
-5.2213 -455.6813 Td
(8945 ) 26.1067 Tj
-6600 TJm
(nbus.busno,) 57.4347 Tj
-5.2213 -465.1747 Td
(8946 ) 26.1067 Tj
-6600 TJm
(\(busreg >> PCI_BRIDGE_BUS_SUBORDINATE_SHIFT\) & 0xff\);) 276.7306 Tj
-5.2213 -474.668 Td
(8947 ) 26.1067 Tj
-5.2213 -484.1614 Td
(8948 ) 26.1067 Tj
-5.2213 -493.6547 Td
(8949 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 89) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.c  Page 5) 177.5253 Tj
-5.2213 -28.4801 Td
(8950     pci_scan_bus\(&nbus\);) 151.4186 Tj
-5.2213 -37.9735 Td
(8951     return 1;) 93.984 Tj
-5.2213 -47.4668 Td
(8952 }) 31.328 Tj
-5.2213 -56.9602 Td
(8953 ) 26.1067 Tj
-5.2213 -66.4535 Td
(8954 static int) 78.32 Tj
-5.2213 -75.9469 Td
(8955 pci_display_attach\(struct pci_func *pcif\)) 240.1813 Tj
-5.2213 -85.4403 Td
(8956 {) 31.328 Tj
-5.2213 -94.9336 Td
(8957     cprintf\("PCI: %02x:%02x.%d: Display %04x:%04x\\n",) 302.8373 Tj
-5.2213 -104.427 Td
(8958 ) 26.1067 Tj
-6600 TJm
(pcif->bus->busno, pcif->dev, pcif->func,) 208.8533 Tj
-5.2213 -113.9203 Td
(8959         PCI_VENDOR\(pcif->dev_id\), PCI_PRODUCT\(pcif->dev\
_id\)\);) 344.6079 Tj
-5.2213 -123.4137 Td
(8960     return 0;) 93.984 Tj
-5.2213 -132.9071 Td
(8961 }) 31.328 Tj
-5.2213 -142.4004 Td
(8962 ) 26.1067 Tj
-5.2213 -151.8938 Td
(8963 // External PCI subsystem interface) 208.8533 Tj
-5.2213 -161.3871 Td
(8964 ) 26.1067 Tj
-5.2213 -170.8805 Td
(8965 void) 46.992 Tj
-5.2213 -180.3739 Td
(8966 pci_func_enable\(struct pci_func *f\)) 208.8533 Tj
-5.2213 -189.8672 Td
(8967 {) 31.328 Tj
-5.2213 -199.3606 Td
(8968     pci_conf_write\(f, PCI_COMMAND_STATUS_REG,) 261.0666 Tj
-5.2213 -208.8539 Td
(8969 ) 26.1067 Tj
-8400 TJm
(PCI_COMMAND_IO_ENABLE |) 120.0906 Tj
-5.2213 -218.3473 Td
(8970 ) 26.1067 Tj
-8400 TJm
(PCI_COMMAND_MEM_ENABLE |) 125.312 Tj
-5.2213 -227.8407 Td
(8971 ) 26.1067 Tj
-8400 TJm
(PCI_COMMAND_MASTER_ENABLE\);) 140.976 Tj
-5.2213 -237.334 Td
(8972 ) 26.1067 Tj
-5.2213 -246.8274 Td
(8973     uint32_t bar_width;) 146.1973 Tj
-5.2213 -256.3207 Td
(8974     uint32_t bar;) 114.8693 Tj
-5.2213 -265.8141 Td
(8975     for \(bar = PCI_MAPREG_START; bar < PCI_MAPREG_END;) 308.0586 Tj
-5.2213 -275.3075 Td
(8976 ) 26.1067 Tj
-2400 TJm
(bar += bar_width\)) 88.7626 Tj
-5.2213 -284.8008 Td
(8977     {) 52.2133 Tj
-5.2213 -294.2942 Td
(8978 ) 26.1067 Tj
-1800 TJm
(uint32_t oldv = pci_conf_read\(f, bar\);) 198.4106 Tj
-5.2213 -303.7875 Td
(8979 ) 26.1067 Tj
-5.2213 -313.2809 Td
(8980 ) 26.1067 Tj
-1800 TJm
(bar_width = 4;) 73.0986 Tj
-5.2213 -322.7743 Td
(8981 ) 26.1067 Tj
-1800 TJm
(pci_conf_write\(f, bar, 0xffffffff\);) 182.7466 Tj
-5.2213 -332.2676 Td
(8982 ) 26.1067 Tj
-1800 TJm
(uint32_t rv = pci_conf_read\(f, bar\);) 187.968 Tj
-5.2213 -341.761 Td
(8983 ) 26.1067 Tj
-5.2213 -351.2543 Td
(8984 ) 26.1067 Tj
-1800 TJm
(if \(rv == 0\)) 62.656 Tj
-5.2213 -360.7477 Td
(8985 ) 26.1067 Tj
-4200 TJm
(continue;) 46.992 Tj
-5.2213 -370.2411 Td
(8986 ) 26.1067 Tj
-5.2213 -379.7344 Td
(8987 ) 26.1067 Tj
-1800 TJm
(int regnum = PCI_MAPREG_NUM\(bar\);) 172.304 Tj
-5.2213 -389.2278 Td
(8988 ) 26.1067 Tj
-1800 TJm
(uint32_t base, size;) 104.4266 Tj
-5.2213 -398.7211 Td
(8989 ) 26.1067 Tj
-1800 TJm
(if \(PCI_MAPREG_TYPE\(rv\) == PCI_MAPREG_TYPE_MEM\) {) 255.8453 Tj
-5.2213 -408.2145 Td
(8990 ) 26.1067 Tj
-4200 TJm
(if \(PCI_MAPREG_MEM_TYPE\(rv\) == PCI_MAPREG_MEM_TYPE_64BIT\)) 297.6159 Tj
-5.2213 -417.7079 Td
(8991 ) 26.1067 Tj
-6600 TJm
(bar_width = 8;) 73.0986 Tj
-5.2213 -427.2012 Td
(8992 ) 26.1067 Tj
-5.2213 -436.6946 Td
(8993 ) 26.1067 Tj
-4200 TJm
(size = PCI_MAPREG_MEM_SIZE\(rv\);) 161.8613 Tj
-5.2213 -446.1879 Td
(8994 ) 26.1067 Tj
-4200 TJm
(base = PCI_MAPREG_MEM_ADDR\(oldv\);) 172.304 Tj
-5.2213 -455.6813 Td
(8995 ) 26.1067 Tj
-4200 TJm
(if \(pci_show_addrs\)) 99.2053 Tj
-5.2213 -465.1747 Td
(8996 ) 26.1067 Tj
-6600 TJm
(cprintf\("  mem region %d: %d bytes at 0x%x\\n",) 240.1813 Tj
-5.2213 -474.668 Td
(8997 ) 26.1067 Tj
-11400 TJm
(regnum, size, base\);) 104.4266 Tj
-5.2213 -484.1614 Td
(8998 ) 26.1067 Tj
-1800 TJm
(} else {) 41.7707 Tj
-5.2213 -493.6547 Td
(8999 ) 26.1067 Tj
-4200 TJm
(size = PCI_MAPREG_IO_SIZE\(rv\);) 156.64 Tj
-5.2213 -522.1348 Td
(Sheet 89) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 99 99
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.c  Page 6) 177.5253 Tj
-5.2213 -28.4801 Td
(9000 ) 26.1067 Tj
-4200 TJm
(base = PCI_MAPREG_IO_ADDR\(oldv\);) 167.0826 Tj
-5.2213 -37.9735 Td
(9001 ) 26.1067 Tj
-4200 TJm
(if \(pci_show_addrs\)) 99.2053 Tj
-5.2213 -47.4668 Td
(9002 ) 26.1067 Tj
-6600 TJm
(cprintf\("  io region %d: %d bytes at 0x%x\\n",) 234.9599 Tj
-5.2213 -56.9602 Td
(9003 ) 26.1067 Tj
-11400 TJm
(regnum, size, base\);) 104.4266 Tj
-5.2213 -66.4535 Td
(9004 ) 26.1067 Tj
-1800 TJm
(}) 5.2213 Tj
-5.2213 -75.9469 Td
(9005 ) 26.1067 Tj
-5.2213 -85.4403 Td
(9006 ) 26.1067 Tj
-1800 TJm
(pci_conf_write\(f, bar, oldv\);) 151.4186 Tj
-5.2213 -94.9336 Td
(9007 ) 26.1067 Tj
-1800 TJm
(f->reg_base[regnum] = base;) 140.976 Tj
-5.2213 -104.427 Td
(9008 ) 26.1067 Tj
-1800 TJm
(f->reg_size[regnum] = size;) 140.976 Tj
-5.2213 -113.9203 Td
(9009 ) 26.1067 Tj
-5.2213 -123.4137 Td
(9010 ) 26.1067 Tj
-1800 TJm
(cprintf\("  -> reg_base[%d] = %08x\\n", regnum, base\);) 271.5093 Tj
-5.2213 -132.9071 Td
(9011 ) 26.1067 Tj
-1800 TJm
(cprintf\("  -> reg_size[%d] = %08x\\n", regnum, size\);) 271.5093 Tj
-5.2213 -142.4004 Td
(9012 ) 26.1067 Tj
-5.2213 -151.8938 Td
(9013 ) 26.1067 Tj
-1800 TJm
(if \(size && !base\)) 93.984 Tj
-5.2213 -161.3871 Td
(9014 ) 26.1067 Tj
-4200 TJm
(cprintf\("PCI device %02x:%02x.%d \(%04x:%04x\) may be misconfi\
gured: ") 355.0506 Tj
-5.2213 -170.8805 Td
(9015 ) 26.1067 Tj
-9000 TJm
("region %d: base 0x%x, size %d\\n",) 177.5253 Tj
-5.2213 -180.3739 Td
(9016 ) 26.1067 Tj
-9000 TJm
(f->bus->busno, f->dev, f->func,) 161.8613 Tj
-5.2213 -189.8672 Td
(9017 ) 26.1067 Tj
-9000 TJm
(PCI_VENDOR\(f->dev_id\), PCI_PRODUCT\(f->dev_id\),) 240.1813 Tj
-5.2213 -199.3606 Td
(9018 ) 26.1067 Tj
-9000 TJm
(regnum, base, size\);) 104.4266 Tj
-5.2213 -208.8539 Td
(9019     }) 52.2133 Tj
-5.2213 -218.3473 Td
(9020 }) 31.328 Tj
-5.2213 -227.8407 Td
(9021 ) 26.1067 Tj
-5.2213 -237.334 Td
(9022 int ether_receive\(void *buffer, int len\)) 234.9599 Tj
-5.2213 -246.8274 Td
(9023 {) 31.328 Tj
-5.2213 -256.3207 Td
(9024     if \(len == 0\)) 114.8693 Tj
-5.2213 -265.8141 Td
(9025         return 0;) 114.8693 Tj
-5.2213 -275.3075 Td
(9026     int ret;) 88.7626 Tj
-5.2213 -284.8008 Td
(9027     ret = e100_receive\(buffer, len\);) 214.0746 Tj
-5.2213 -294.2942 Td
(9028     if \(ret > 0\)) 109.648 Tj
-5.2213 -303.7875 Td
(9029         return ret;) 125.312 Tj
-5.2213 -313.2809 Td
(9030     return -2;) 99.2053 Tj
-5.2213 -322.7743 Td
(9031 }) 31.328 Tj
-5.2213 -332.2676 Td
(9032 ) 26.1067 Tj
-5.2213 -341.761 Td
(9033 int ether_send\(void *buffer, int len\)) 219.2959 Tj
-5.2213 -351.2543 Td
(9034 {) 31.328 Tj
-5.2213 -360.7477 Td
(9035     if \(len == 0\)) 114.8693 Tj
-5.2213 -370.2411 Td
(9036         return 0;) 114.8693 Tj
-5.2213 -379.7344 Td
(9037     int ret;) 88.7626 Tj
-5.2213 -389.2278 Td
(9038     ret = e100_send\(buffer, len\);) 198.4106 Tj
-5.2213 -398.7211 Td
(9039     if \(ret > 0\)) 109.648 Tj
-5.2213 -408.2145 Td
(9040         return ret;) 125.312 Tj
-5.2213 -417.7079 Td
(9041     return -2;) 99.2053 Tj
-5.2213 -427.2012 Td
(9042 }) 31.328 Tj
-5.2213 -436.6946 Td
(9043 ) 26.1067 Tj
-5.2213 -446.1879 Td
(9044 ) 26.1067 Tj
-5.2213 -455.6813 Td
(9045 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9046 ) 26.1067 Tj
-5.2213 -474.668 Td
(9047 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9048 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9049 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 90) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/pci.c  Page 7) 177.5253 Tj
-5.2213 -28.4801 Td
(9050 int) 41.7707 Tj
-5.2213 -37.9735 Td
(9051 pci_init\(void\)) 99.2053 Tj
-5.2213 -47.4668 Td
(9052 {) 31.328 Tj
-5.2213 -56.9602 Td
(9053     static struct pci_bus root_bus;) 208.8533 Tj
-5.2213 -66.4535 Td
(9054     memset\(&root_bus, 0, sizeof\(root_bus\)\);) 250.6239 Tj
-5.2213 -75.9469 Td
(9055 ) 26.1067 Tj
-5.2213 -85.4403 Td
(9056     return pci_scan_bus\(&root_bus\);) 208.8533 Tj
-5.2213 -94.9336 Td
(9057 }) 31.328 Tj
-5.2213 -104.427 Td
(9058 ) 26.1067 Tj
-5.2213 -113.9203 Td
(9059 ) 26.1067 Tj
-5.2213 -123.4137 Td
(9060 ) 26.1067 Tj
-5.2213 -132.9071 Td
(9061 ) 26.1067 Tj
-5.2213 -142.4004 Td
(9062 ) 26.1067 Tj
-5.2213 -151.8938 Td
(9063 ) 26.1067 Tj
-5.2213 -161.3871 Td
(9064 ) 26.1067 Tj
-5.2213 -170.8805 Td
(9065 ) 26.1067 Tj
-5.2213 -180.3739 Td
(9066 ) 26.1067 Tj
-5.2213 -189.8672 Td
(9067 ) 26.1067 Tj
-5.2213 -199.3606 Td
(9068 ) 26.1067 Tj
-5.2213 -208.8539 Td
(9069 ) 26.1067 Tj
-5.2213 -218.3473 Td
(9070 ) 26.1067 Tj
-5.2213 -227.8407 Td
(9071 ) 26.1067 Tj
-5.2213 -237.334 Td
(9072 ) 26.1067 Tj
-5.2213 -246.8274 Td
(9073 ) 26.1067 Tj
-5.2213 -256.3207 Td
(9074 ) 26.1067 Tj
-5.2213 -265.8141 Td
(9075 ) 26.1067 Tj
-5.2213 -275.3075 Td
(9076 ) 26.1067 Tj
-5.2213 -284.8008 Td
(9077 ) 26.1067 Tj
-5.2213 -294.2942 Td
(9078 ) 26.1067 Tj
-5.2213 -303.7875 Td
(9079 ) 26.1067 Tj
-5.2213 -313.2809 Td
(9080 ) 26.1067 Tj
-5.2213 -322.7743 Td
(9081 ) 26.1067 Tj
-5.2213 -332.2676 Td
(9082 ) 26.1067 Tj
-5.2213 -341.761 Td
(9083 ) 26.1067 Tj
-5.2213 -351.2543 Td
(9084 ) 26.1067 Tj
-5.2213 -360.7477 Td
(9085 ) 26.1067 Tj
-5.2213 -370.2411 Td
(9086 ) 26.1067 Tj
-5.2213 -379.7344 Td
(9087 ) 26.1067 Tj
-5.2213 -389.2278 Td
(9088 ) 26.1067 Tj
-5.2213 -398.7211 Td
(9089 ) 26.1067 Tj
-5.2213 -408.2145 Td
(9090 ) 26.1067 Tj
-5.2213 -417.7079 Td
(9091 ) 26.1067 Tj
-5.2213 -427.2012 Td
(9092 ) 26.1067 Tj
-5.2213 -436.6946 Td
(9093 ) 26.1067 Tj
-5.2213 -446.1879 Td
(9094 ) 26.1067 Tj
-5.2213 -455.6813 Td
(9095 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9096 ) 26.1067 Tj
-5.2213 -474.668 Td
(9097 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9098 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9099 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 90) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 100 100
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.h  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(9100 #ifndef XV6_E100_H_) 125.312 Tj
-5.2213 -37.9735 Td
(9101 #define XV6_E100_H_) 125.312 Tj
-5.2213 -47.4668 Td
(9102 #include "pci.h") 109.648 Tj
-5.2213 -56.9602 Td
(9103 ) 26.1067 Tj
-5.2213 -66.4535 Td
(9104 int ether_e100_attach\(struct pci_func *pcif\);) 261.0666 Tj
-5.2213 -75.9469 Td
(9105 int e100_send\(void *buffer, uint32_t len\);) 245.4026 Tj
-5.2213 -85.4403 Td
(9106 int e100_receive\(void *buffer, uint32_t len\);) 261.0666 Tj
-5.2213 -94.9336 Td
(9107 ) 26.1067 Tj
-5.2213 -104.427 Td
(9108 #define PCI_VENDOR_INTEL    0x8086) 203.6319 Tj
-5.2213 -113.9203 Td
(9109 #define PCI_PRODUCT_E100    0x1209) 203.6319 Tj
-5.2213 -123.4137 Td
(9110 ) 26.1067 Tj
-5.2213 -132.9071 Td
(9111 #define E100_MAX_DEVS       10) 182.7466 Tj
-5.2213 -142.4004 Td
(9112 ) 26.1067 Tj
-5.2213 -151.8938 Td
(9113 #define E100_IOPORT_SIZE    64) 182.7466 Tj
-5.2213 -161.3871 Td
(9114 #define E100_CU_RING_SIZE   32) 182.7466 Tj
-5.2213 -170.8805 Td
(9115 #define E100_RU_RING_SIZE   32) 182.7466 Tj
-5.2213 -180.3739 Td
(9116 #define E100_CB_SIZE       2048) 187.968 Tj
-5.2213 -189.8672 Td
(9117 #define E100_RFD_SIZE      2048) 187.968 Tj
-5.2213 -199.3606 Td
(9118 ) 26.1067 Tj
-5.2213 -208.8539 Td
(9119 // Control / Status Register) 172.304 Tj
-5.2213 -218.3473 Td
(9120 #define SCB_STATUS          0x0 // Status) 240.1813 Tj
-5.2213 -227.8407 Td
(9121 #define SCB_COMMAND         0x2 // Command) 245.4026 Tj
-5.2213 -237.334 Td
(9122 #define SCB_GENPTR          0x4 // General Pointer) 287.1733 Tj
-5.2213 -246.8274 Td
(9123 #define SCB_PORT            0x8 // PORT) 229.7386 Tj
-5.2213 -256.3207 Td
(9124 #define SCB_EEPROM_CTL      0xE // EEPROM Control) 281.9519 Tj
-5.2213 -265.8141 Td
(9125 #define SCB_MDI_CTL         0x10    // MDI Control) 287.1733 Tj
-5.2213 -275.3075 Td
(9126 #define SCB_RX_COUNT        0x14    // RX DMA Byte Count) 318.5013 Tj
-5.2213 -284.8008 Td
(9127 #define SCB_FLOW_CTL        0x19    // Flow Control) 292.3946 Tj
-5.2213 -294.2942 Td
(9128 #define SCB_PMDR            0x21    // PMDR) 250.6239 Tj
-5.2213 -303.7875 Td
(9129 #define SCB_GEN_CTL         0x1C    // General Control) 308.0586 Tj
-5.2213 -313.2809 Td
(9130 #define SCB_GEN_STATUS      0x1D    // General Status) 302.8373 Tj
-5.2213 -322.7743 Td
(9131 #define SCB_FUNC_EVT        0x30    // Function Event) 302.8373 Tj
-5.2213 -332.2676 Td
(9132 #define SCB_FUN_MASK        0x34    // Function Event Mask) 328.9439 Tj
-5.2213 -341.761 Td
(9133 #define SCB_FUNC_STATE      0x38    // Function Present St\
ate) 344.6079 Tj
-5.2213 -351.2543 Td
(9134 #define SCB_FORCE_EVT       0x3C    // Force Event) 287.1733 Tj
-5.2213 -360.7477 Td
(9135 ) 26.1067 Tj
-5.2213 -370.2411 Td
(9136 // CU Command) 93.984 Tj
-5.2213 -379.7344 Td
(9137 #define CUC_NOP             0x0) 187.968 Tj
-5.2213 -389.2278 Td
(9138 #define CUC_START           0x1) 187.968 Tj
-5.2213 -398.7211 Td
(9139 #define CUC_RESUME          0x2) 187.968 Tj
-5.2213 -408.2145 Td
(9140 #define CUC_LOAD_DC_ADDR    0x4) 187.968 Tj
-5.2213 -417.7079 Td
(9141 #define CUC_DUMP            0x5) 187.968 Tj
-5.2213 -427.2012 Td
(9142 #define CUC_LOAD_BASE       0x6) 187.968 Tj
-5.2213 -436.6946 Td
(9143 #define CUC_DUMP_RESET      0x7) 187.968 Tj
-5.2213 -446.1879 Td
(9144 #define CUC_STAT_RESUME     0xA) 187.968 Tj
-5.2213 -455.6813 Td
(9145 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9146 ) 26.1067 Tj
-5.2213 -474.668 Td
(9147 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9148 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9149 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 91) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.h  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(9150 // RU Command) 93.984 Tj
-5.2213 -37.9735 Td
(9151 #define RUC_NOP             0x0) 187.968 Tj
-5.2213 -47.4668 Td
(9152 #define RUC_START           0x1) 187.968 Tj
-5.2213 -56.9602 Td
(9153 #define RUC_RESUME          0x2) 187.968 Tj
-5.2213 -66.4535 Td
(9154 #define RUC_RCV_DMA         0x3) 187.968 Tj
-5.2213 -75.9469 Td
(9155 #define RUC_ABORT           0x4) 187.968 Tj
-5.2213 -85.4403 Td
(9156 #define RUC_LOAD_HDS        0x5) 187.968 Tj
-5.2213 -94.9336 Td
(9157 #define RUC_LOAD_BASE       0x6) 187.968 Tj
-5.2213 -104.427 Td
(9158 ) 26.1067 Tj
-5.2213 -113.9203 Td
(9159 // PORT Function) 109.648 Tj
-5.2213 -123.4137 Td
(9160 #define PORT_SOFT_RESET     0) 177.5253 Tj
-5.2213 -132.9071 Td
(9161 #define PORT_SELF_TEST      1) 177.5253 Tj
-5.2213 -142.4004 Td
(9162 #define PORT_SElECT_TEST    2) 177.5253 Tj
-5.2213 -151.8938 Td
(9163 #define PORT_DUMP           3) 177.5253 Tj
-5.2213 -161.3871 Td
(9164 #define PORT_DUMP_WAKE      7) 177.5253 Tj
-5.2213 -170.8805 Td
(9165 ) 26.1067 Tj
-5.2213 -180.3739 Td
(9166 // Operation Codes) 120.0906 Tj
-5.2213 -189.8672 Td
(9167 #define OP_NOP              0) 177.5253 Tj
-5.2213 -199.3606 Td
(9168 #define OP_ADDR_SETUP       1) 177.5253 Tj
-5.2213 -208.8539 Td
(9169 #define OP_CONFIG           2) 177.5253 Tj
-5.2213 -218.3473 Td
(9170 #define OP_MUL_ADDR_SETUP   3) 177.5253 Tj
-5.2213 -227.8407 Td
(9171 #define OP_TRANSMIT         4) 177.5253 Tj
-5.2213 -237.334 Td
(9172 #define OP_LOAD_MC          5) 177.5253 Tj
-5.2213 -246.8274 Td
(9173 #define OP_DUMP             6) 177.5253 Tj
-5.2213 -256.3207 Td
(9174 #define OP_DIAG             7) 177.5253 Tj
-5.2213 -265.8141 Td
(9175 ) 26.1067 Tj
-5.2213 -275.3075 Td
(9176 // CU Status) 88.7626 Tj
-5.2213 -284.8008 Td
(9177 #define CUS_IDLE            0) 177.5253 Tj
-5.2213 -294.2942 Td
(9178 #define CUS_SUSPENDED       1) 177.5253 Tj
-5.2213 -303.7875 Td
(9179 #define CUS_LPQ             2) 177.5253 Tj
-5.2213 -313.2809 Td
(9180 #define CUS_HQP             3) 177.5253 Tj
-5.2213 -322.7743 Td
(9181 ) 26.1067 Tj
-5.2213 -332.2676 Td
(9182 struct scb_status_word {) 151.4186 Tj
-5.2213 -341.761 Td
(9183     char zero : 2;) 120.0906 Tj
-5.2213 -351.2543 Td
(9184     char rus  : 4;) 120.0906 Tj
-5.2213 -360.7477 Td
(9185     char cus  : 2;) 120.0906 Tj
-5.2213 -370.2411 Td
(9186     // STAT / ACK) 114.8693 Tj
-5.2213 -379.7344 Td
(9187     char fcp  : 1;) 120.0906 Tj
-5.2213 -389.2278 Td
(9188     char rsv  : 1;) 120.0906 Tj
-5.2213 -398.7211 Td
(9189     char swi  : 1;) 120.0906 Tj
-5.2213 -408.2145 Td
(9190     char mdi  : 1;) 120.0906 Tj
-5.2213 -417.7079 Td
(9191     char rnr  : 1;) 120.0906 Tj
-5.2213 -427.2012 Td
(9192     char cna  : 1;) 120.0906 Tj
-5.2213 -436.6946 Td
(9193     char fr   : 1;) 120.0906 Tj
-5.2213 -446.1879 Td
(9194     char cx   : 1;) 120.0906 Tj
-5.2213 -455.6813 Td
(9195 };) 36.5493 Tj
-5.2213 -465.1747 Td
(9196 ) 26.1067 Tj
-5.2213 -474.668 Td
(9197 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9198 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9199 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 91) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 101 101
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.h  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(9200 typedef union scb_status_word_tag {) 208.8533 Tj
-5.2213 -37.9735 Td
(9201     uint16_t word;) 120.0906 Tj
-5.2213 -47.4668 Td
(9202     struct scb_status_word status;) 203.6319 Tj
-5.2213 -56.9602 Td
(9203 } scb_status_word;) 120.0906 Tj
-5.2213 -66.4535 Td
(9204 ) 26.1067 Tj
-5.2213 -75.9469 Td
(9205 struct scb_command_word {) 156.64 Tj
-5.2213 -85.4403 Td
(9206     char ru_command : 3;) 151.4186 Tj
-5.2213 -94.9336 Td
(9207     char res : 1;) 114.8693 Tj
-5.2213 -104.427 Td
(9208     char cu_command : 4;) 151.4186 Tj
-5.2213 -113.9203 Td
(9209     // Interrupt Masks) 140.976 Tj
-5.2213 -123.4137 Td
(9210     char m : 1;) 104.4266 Tj
-5.2213 -132.9071 Td
(9211     char si : 1;) 109.648 Tj
-5.2213 -142.4004 Td
(9212     char fcp_mask : 1;) 140.976 Tj
-5.2213 -151.8938 Td
(9213     char er_mask : 1;) 135.7546 Tj
-5.2213 -161.3871 Td
(9214     char rnr_mask : 1;) 140.976 Tj
-5.2213 -170.8805 Td
(9215     char cna_mask : 1;) 140.976 Tj
-5.2213 -180.3739 Td
(9216     char fr_mask : 1;) 135.7546 Tj
-5.2213 -189.8672 Td
(9217     char cx_mask : 1;) 135.7546 Tj
-5.2213 -199.3606 Td
(9218 };) 36.5493 Tj
-5.2213 -208.8539 Td
(9219 ) 26.1067 Tj
-5.2213 -218.3473 Td
(9220 typedef union scb_command_word_tag {) 214.0746 Tj
-5.2213 -227.8407 Td
(9221     uint16_t word;) 120.0906 Tj
-5.2213 -237.334 Td
(9222     struct scb_command_word cmd;) 193.1893 Tj
-5.2213 -246.8274 Td
(9223 } scb_command_word;) 125.312 Tj
-5.2213 -256.3207 Td
(9224 ) 26.1067 Tj
-5.2213 -265.8141 Td
(9225 typedef struct command_block_tag {) 203.6319 Tj
-5.2213 -275.3075 Td
(9226     volatile union {) 130.5333 Tj
-5.2213 -284.8008 Td
(9227         uint16_t status_word;) 177.5253 Tj
-5.2213 -294.2942 Td
(9228         struct {) 109.648 Tj
-5.2213 -303.7875 Td
(9229             short stat :    13;) 187.968 Tj
-5.2213 -313.2809 Td
(9230             char ok :       1;    // No Error) 261.0666 Tj
-5.2213 -322.7743 Td
(9231             char x :        1;) 182.7466 Tj
-5.2213 -332.2676 Td
(9232             char c :        1;     // Completed) 271.5093 Tj
-5.2213 -341.761 Td
(9233         };) 78.32 Tj
-5.2213 -351.2543 Td
(9234     };) 57.4347 Tj
-5.2213 -360.7477 Td
(9235     union {) 83.5413 Tj
-5.2213 -370.2411 Td
(9236         uint16_t cmd_word;) 161.8613 Tj
-5.2213 -379.7344 Td
(9237         struct {) 109.648 Tj
-5.2213 -389.2278 Td
(9238             char cmd :  3;) 161.8613 Tj
-5.2213 -398.7211 Td
(9239             short res : 10;) 167.0826 Tj
-5.2213 -408.2145 Td
(9240             char i :    1;     // Interrupt after finish) 318.5013 Tj
-5.2213 -417.7079 Td
(9241             char s :    1;     // Suspend after complete) 318.5013 Tj
-5.2213 -427.2012 Td
(9242             char el :   1;    // Last one) 240.1813 Tj
-5.2213 -436.6946 Td
(9243         };) 78.32 Tj
-5.2213 -446.1879 Td
(9244     };) 57.4347 Tj
-5.2213 -455.6813 Td
(9245     struct command_block_tag * link;) 214.0746 Tj
-5.2213 -465.1747 Td
(9246 } command_block;) 109.648 Tj
-5.2213 -474.668 Td
(9247 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9248 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9249 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 92) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.h  Page 4) 182.7466 Tj
-5.2213 -28.4801 Td
(9250 typedef struct op_transmit_cmd_cmd_tag {) 234.9599 Tj
-5.2213 -37.9735 Td
(9251     union {) 83.5413 Tj
-5.2213 -47.4668 Td
(9252         uint16_t word;) 140.976 Tj
-5.2213 -56.9602 Td
(9253         struct {) 109.648 Tj
-5.2213 -66.4535 Td
(9254             char cmd    : 3;) 172.304 Tj
-5.2213 -75.9469 Td
(9255             char sf     : 1;) 172.304 Tj
-5.2213 -85.4403 Td
(9256             char nc     : 1;) 172.304 Tj
-5.2213 -94.9336 Td
(9257             char res    : 3;) 172.304 Tj
-5.2213 -104.427 Td
(9258             char cid    : 5;) 172.304 Tj
-5.2213 -113.9203 Td
(9259             char i      : 1;) 172.304 Tj
-5.2213 -123.4137 Td
(9260             char s      : 1;) 172.304 Tj
-5.2213 -132.9071 Td
(9261             char el     : 1;) 172.304 Tj
-5.2213 -142.4004 Td
(9262         };) 78.32 Tj
-5.2213 -151.8938 Td
(9263     };) 57.4347 Tj
-5.2213 -161.3871 Td
(9264 } op_transmit_cmd_cmd;) 140.976 Tj
-5.2213 -170.8805 Td
(9265 ) 26.1067 Tj
-5.2213 -180.3739 Td
(9266 typedef struct op_transmit_cmd {) 193.1893 Tj
-5.2213 -189.8672 Td
(9267     command_block base_cmd;) 167.0826 Tj
-5.2213 -199.3606 Td
(9268     uint32_t tbd_addr;) 140.976 Tj
-5.2213 -208.8539 Td
(9269     struct {) 88.7626 Tj
-5.2213 -218.3473 Td
(9270         int byte_count :14;) 167.0826 Tj
-5.2213 -227.8407 Td
(9271         char res :      1;) 161.8613 Tj
-5.2213 -237.334 Td
(9272         char eof :      1;) 161.8613 Tj
-5.2213 -246.8274 Td
(9273         uint8_t trans_thres;) 172.304 Tj
-5.2213 -256.3207 Td
(9274         uint8_t tbd_num;) 151.4186 Tj
-5.2213 -265.8141 Td
(9275     };) 57.4347 Tj
-5.2213 -275.3075 Td
(9276 } op_transmit_cmd;) 120.0906 Tj
-5.2213 -284.8008 Td
(9277 ) 26.1067 Tj
-5.2213 -294.2942 Td
(9278 typedef struct rf_desc {) 151.4186 Tj
-5.2213 -303.7875 Td
(9279     volatile command_block head;) 193.1893 Tj
-5.2213 -313.2809 Td
(9280     uint32_t res;) 114.8693 Tj
-5.2213 -322.7743 Td
(9281     volatile struct {) 135.7546 Tj
-5.2213 -332.2676 Td
(9282         uint16_t count :    14;) 187.968 Tj
-5.2213 -341.761 Td
(9283         char f :            1;) 182.7466 Tj
-5.2213 -351.2543 Td
(9284         char eof :          1;) 182.7466 Tj
-5.2213 -360.7477 Td
(9285         uint16_t size :     14;) 187.968 Tj
-5.2213 -370.2411 Td
(9286         char res2 :         2;) 182.7466 Tj
-5.2213 -379.7344 Td
(9287     };) 57.4347 Tj
-5.2213 -389.2278 Td
(9288 } rf_desc;) 78.32 Tj
-5.2213 -398.7211 Td
(9289 ) 26.1067 Tj
-5.2213 -408.2145 Td
(9290 typedef struct rf_status {) 161.8613 Tj
-5.2213 -417.7079 Td
(9291     char tco :      1;) 140.976 Tj
-5.2213 -427.2012 Td
(9292     char ia :       1;) 140.976 Tj
-5.2213 -436.6946 Td
(9293     char nomatch :  1;) 140.976 Tj
-5.2213 -446.1879 Td
(9294     char res :      1;) 140.976 Tj
-5.2213 -455.6813 Td
(9295     char rcv_err :  1;) 140.976 Tj
-5.2213 -465.1747 Td
(9296     char type :     1;) 140.976 Tj
-5.2213 -474.668 Td
(9297     char res2 :     1;) 140.976 Tj
-5.2213 -484.1614 Td
(9298     char tooshort : 1;) 140.976 Tj
-5.2213 -493.6547 Td
(9299     char dma_err :  1;) 140.976 Tj
-5.2213 -522.1348 Td
(Sheet 92) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 102 102
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.h  Page 5) 182.7466 Tj
-5.2213 -28.4801 Td
(9300     char no_buf :   1;) 140.976 Tj
-5.2213 -37.9735 Td
(9301     char align_err :1;) 140.976 Tj
-5.2213 -47.4668 Td
(9302     char crc_err :  1;) 140.976 Tj
-5.2213 -56.9602 Td
(9303     char res3 :     1;) 140.976 Tj
-5.2213 -66.4535 Td
(9304 } rf_status;) 88.7626 Tj
-5.2213 -75.9469 Td
(9305 ) 26.1067 Tj
-5.2213 -85.4403 Td
(9306 #define TBD_DATA_LIMIT  1600) 172.304 Tj
-5.2213 -94.9336 Td
(9307 ) 26.1067 Tj
-5.2213 -104.427 Td
(9308 ) 26.1067 Tj
-5.2213 -113.9203 Td
(9309 #endif) 57.4347 Tj
-3000 TJm
(// XV6_E100_H_) 73.0986 Tj
-5.2213 -123.4137 Td
(9310 ) 26.1067 Tj
-5.2213 -132.9071 Td
(9311 ) 26.1067 Tj
-5.2213 -142.4004 Td
(9312 ) 26.1067 Tj
-5.2213 -151.8938 Td
(9313 ) 26.1067 Tj
-5.2213 -161.3871 Td
(9314 ) 26.1067 Tj
-5.2213 -170.8805 Td
(9315 ) 26.1067 Tj
-5.2213 -180.3739 Td
(9316 ) 26.1067 Tj
-5.2213 -189.8672 Td
(9317 ) 26.1067 Tj
-5.2213 -199.3606 Td
(9318 ) 26.1067 Tj
-5.2213 -208.8539 Td
(9319 ) 26.1067 Tj
-5.2213 -218.3473 Td
(9320 ) 26.1067 Tj
-5.2213 -227.8407 Td
(9321 ) 26.1067 Tj
-5.2213 -237.334 Td
(9322 ) 26.1067 Tj
-5.2213 -246.8274 Td
(9323 ) 26.1067 Tj
-5.2213 -256.3207 Td
(9324 ) 26.1067 Tj
-5.2213 -265.8141 Td
(9325 ) 26.1067 Tj
-5.2213 -275.3075 Td
(9326 ) 26.1067 Tj
-5.2213 -284.8008 Td
(9327 ) 26.1067 Tj
-5.2213 -294.2942 Td
(9328 ) 26.1067 Tj
-5.2213 -303.7875 Td
(9329 ) 26.1067 Tj
-5.2213 -313.2809 Td
(9330 ) 26.1067 Tj
-5.2213 -322.7743 Td
(9331 ) 26.1067 Tj
-5.2213 -332.2676 Td
(9332 ) 26.1067 Tj
-5.2213 -341.761 Td
(9333 ) 26.1067 Tj
-5.2213 -351.2543 Td
(9334 ) 26.1067 Tj
-5.2213 -360.7477 Td
(9335 ) 26.1067 Tj
-5.2213 -370.2411 Td
(9336 ) 26.1067 Tj
-5.2213 -379.7344 Td
(9337 ) 26.1067 Tj
-5.2213 -389.2278 Td
(9338 ) 26.1067 Tj
-5.2213 -398.7211 Td
(9339 ) 26.1067 Tj
-5.2213 -408.2145 Td
(9340 ) 26.1067 Tj
-5.2213 -417.7079 Td
(9341 ) 26.1067 Tj
-5.2213 -427.2012 Td
(9342 ) 26.1067 Tj
-5.2213 -436.6946 Td
(9343 ) 26.1067 Tj
-5.2213 -446.1879 Td
(9344 ) 26.1067 Tj
-5.2213 -455.6813 Td
(9345 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9346 ) 26.1067 Tj
-5.2213 -474.668 Td
(9347 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9348 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9349 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 93) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(9350 #include "types.h") 120.0906 Tj
-5.2213 -37.9735 Td
(9351 #include "x86.h") 109.648 Tj
-5.2213 -47.4668 Td
(9352 #include "pci.h") 109.648 Tj
-5.2213 -56.9602 Td
(9353 #include "pcireg.h") 125.312 Tj
-5.2213 -66.4535 Td
(9354 #include "defs.h") 114.8693 Tj
-5.2213 -75.9469 Td
(9355 #include "e100.h") 114.8693 Tj
-5.2213 -85.4403 Td
(9356 #include "proc.h") 114.8693 Tj
-5.2213 -94.9336 Td
(9357 #include "picirq.h") 125.312 Tj
-5.2213 -104.427 Td
(9358 #include "traps.h") 120.0906 Tj
-5.2213 -113.9203 Td
(9359 #include "lwip/include/ipv4/lwip/ip_addr.h") 250.6239 Tj
-5.2213 -123.4137 Td
(9360 #include "lwip/include/ipv4/lwip/ip.h") 224.5173 Tj
-5.2213 -132.9071 Td
(9361 #include "lwip/include/lwip/netif.h") 214.0746 Tj
-5.2213 -142.4004 Td
(9362 #include "lwip/include/netif/ethernetif.h") 245.4026 Tj
-5.2213 -151.8938 Td
(9363 #include "thread.h") 125.312 Tj
-5.2213 -161.3871 Td
(9364 ) 26.1067 Tj
-5.2213 -170.8805 Td
(9365 static int dev_count = 0;) 156.64 Tj
-5.2213 -180.3739 Td
(9366 ) 26.1067 Tj
-5.2213 -189.8672 Td
(9367 typedef struct e100_devinfo {) 177.5253 Tj
-5.2213 -199.3606 Td
(9368     int irq;) 88.7626 Tj
-5.2213 -208.8539 Td
(9369     uint32_t regbase[6], regsize[6];) 214.0746 Tj
-5.2213 -218.3473 Td
(9370     uint32_t iobase;) 130.5333 Tj
-5.2213 -227.8407 Td
(9371     struct netif netif;) 146.1973 Tj
-5.2213 -237.334 Td
(9372     struct spinlock culock;) 167.0826 Tj
-5.2213 -246.8274 Td
(9373     uint32_t cubase;) 130.5333 Tj
-5.2213 -256.3207 Td
(9374     uint32_t cusize;) 130.5333 Tj
-5.2213 -265.8141 Td
(9375 //    uint32_t cuhead;) 140.976 Tj
-5.2213 -275.3075 Td
(9376 //    uint32_t cuend;) 135.7546 Tj
-5.2213 -284.8008 Td
(9377     uint32_t cucount;) 135.7546 Tj
-5.2213 -294.2942 Td
(9378     int cufirst;) 109.648 Tj
-5.2213 -303.7875 Td
(9379     int cuidle;) 104.4266 Tj
-5.2213 -313.2809 Td
(9380     command_block *cu_last_pkt;) 187.968 Tj
-5.2213 -322.7743 Td
(9381     command_block *cu_next_pkt;) 187.968 Tj
-5.2213 -332.2676 Td
(9382     struct spinlock rulock;) 167.0826 Tj
-5.2213 -341.761 Td
(9383     uint32_t rubase;) 130.5333 Tj
-5.2213 -351.2543 Td
(9384     uint32_t rusize;) 130.5333 Tj
-5.2213 -360.7477 Td
(9385     uint32_t rucount;) 135.7546 Tj
-5.2213 -370.2411 Td
(9386     rf_desc *ru_first;) 140.976 Tj
-5.2213 -379.7344 Td
(9387     rf_desc *ru_last;) 135.7546 Tj
-5.2213 -389.2278 Td
(9388     rf_desc *ru_prev;) 135.7546 Tj
-5.2213 -398.7211 Td
(9389     int ru_full;) 109.648 Tj
-5.2213 -408.2145 Td
(9390     struct spinlock rxlock;) 167.0826 Tj
-5.2213 -417.7079 Td
(9391 } e100_dev;) 83.5413 Tj
-5.2213 -427.2012 Td
(9392 ) 26.1067 Tj
-5.2213 -436.6946 Td
(9393 static e100_dev e100_devs[E100_MAX_DEVS];) 240.1813 Tj
-5.2213 -446.1879 Td
(9394 int e100_reset\(e100_dev *dev\);) 182.7466 Tj
-5.2213 -455.6813 Td
(9395 scb_status_word e100_print_state\(e100_dev *dev\);) 276.7306 Tj
-5.2213 -465.1747 Td
(9396 void e100_put_state\(e100_dev *dev, scb_status_word stat\)\
;) 323.7226 Tj
-5.2213 -474.668 Td
(9397 uint8_t e100_read_scb_command\(e100_dev *dev\);) 261.0666 Tj
-5.2213 -484.1614 Td
(9398 void e100_cu_command\(e100_dev *dev, int command, void *cm\
d_addr\);) 365.4932 Tj
-5.2213 -493.6547 Td
(9399 void e100_ru_command\(e100_dev *dev, int command, void *cm\
d_addr\);) 365.4932 Tj
-5.2213 -522.1348 Td
(Sheet 93) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 103 103
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 2) 182.7466 Tj
-5.2213 -28.4801 Td
(9400 void e100_intr\(struct trapframe *tf\);) 219.2959 Tj
-5.2213 -37.9735 Td
(9401 void e100_ru_start\(e100_dev *dev\);) 203.6319 Tj
-5.2213 -47.4668 Td
(9402 void ring_printinfo\(e100_dev *dev\);) 208.8533 Tj
-5.2213 -56.9602 Td
(9403 void ring_init\(e100_dev *dev\);) 182.7466 Tj
-5.2213 -66.4535 Td
(9404 int e100_receive_dev\(e100_dev *dev, void *buffer, int len\
\);) 334.1652 Tj
-5.2213 -75.9469 Td
(9405 void e100_rx_thread\(void *arg\);) 187.968 Tj
-5.2213 -85.4403 Td
(9406 ) 26.1067 Tj
-5.2213 -94.9336 Td
(9407 char *cu_state_name[];) 140.976 Tj
-5.2213 -104.427 Td
(9408 char *ru_state_name[];) 140.976 Tj
-5.2213 -113.9203 Td
(9409 ) 26.1067 Tj
-5.2213 -123.4137 Td
(9410 int) 41.7707 Tj
-5.2213 -132.9071 Td
(9411 ether_e100_attach\(struct pci_func *pcif\)) 234.9599 Tj
-5.2213 -142.4004 Td
(9412 {) 31.328 Tj
-5.2213 -151.8938 Td
(9413     cprintf\("PCI: %02x:%02x.%d: ") 198.4106 Tj
-5.2213 -161.3871 Td
(9414             "Intel 82559ER Fast Ethernet PCI Controller %0\
4x:%04x\\n",) 386.3786 Tj
-5.2213 -170.8805 Td
(9415 ) 26.1067 Tj
-6600 TJm
(pcif->bus->busno, pcif->dev, pcif->func,) 208.8533 Tj
-5.2213 -180.3739 Td
(9416         PCI_VENDOR\(pcif->dev_id\), PCI_PRODUCT\(pcif->dev\
_id\)\);) 344.6079 Tj
-5.2213 -189.8672 Td
(9417     dev_count++;) 109.648 Tj
-5.2213 -199.3606 Td
(9418     int index = dev_count-1;) 172.304 Tj
-5.2213 -208.8539 Td
(9419     e100_dev *dev = &e100_devs[index];) 224.5173 Tj
-5.2213 -218.3473 Td
(9420 ) 26.1067 Tj
-5.2213 -227.8407 Td
(9421     dev->cubase = \(uint32_t\)kalloc\(E100_CU_RING_SIZE * \
PAGE\); // 128K) 386.3786 Tj
-5.2213 -237.334 Td
(9422     if \(!dev->cubase\)) 135.7546 Tj
-5.2213 -246.8274 Td
(9423     {) 52.2133 Tj
-5.2213 -256.3207 Td
(9424         cprintf\("   Failed to allocate CU ring\\n"\);) 292.3946 Tj
-5.2213 -265.8141 Td
(9425         dev_count--;) 130.5333 Tj
-5.2213 -275.3075 Td
(9426         return -1;) 120.0906 Tj
-5.2213 -284.8008 Td
(9427     }) 52.2133 Tj
-5.2213 -294.2942 Td
(9428     dev->rubase = \(uint32_t\)kalloc\(E100_RU_RING_SIZE * \
PAGE\); // 128K) 386.3786 Tj
-5.2213 -303.7875 Td
(9429     if \(!dev->rubase\)) 135.7546 Tj
-5.2213 -313.2809 Td
(9430     {) 52.2133 Tj
-5.2213 -322.7743 Td
(9431         cprintf\("   Failed to allocate RU ring\\n"\);) 292.3946 Tj
-5.2213 -332.2676 Td
(9432         dev_count--;) 130.5333 Tj
-5.2213 -341.761 Td
(9433         return -1;) 120.0906 Tj
-5.2213 -351.2543 Td
(9434     }) 52.2133 Tj
-5.2213 -360.7477 Td
(9435     dev->cusize = E100_CU_RING_SIZE * PAGE;) 250.6239 Tj
-5.2213 -370.2411 Td
(9436     dev->rusize = E100_RU_RING_SIZE * PAGE;) 250.6239 Tj
-5.2213 -379.7344 Td
(9437     ring_init\(dev\);) 125.312 Tj
-5.2213 -389.2278 Td
(9438 //    dev->cuhead = 0;) 140.976 Tj
-5.2213 -398.7211 Td
(9439 //    dev->cuend = 0;) 135.7546 Tj
-5.2213 -408.2145 Td
(9440 ) 26.1067 Tj
-5.2213 -417.7079 Td
(9441     pci_func_enable\(pcif\);) 161.8613 Tj
-5.2213 -427.2012 Td
(9442     initlock\(&dev->culock, "e100 CU lock"\);) 250.6239 Tj
-5.2213 -436.6946 Td
(9443     initlock\(&dev->rulock, "e100 RU lock"\);) 250.6239 Tj
-5.2213 -446.1879 Td
(9444     initlock\(&dev->rxlock, "e100 RX lock"\);) 250.6239 Tj
-5.2213 -455.6813 Td
(9445     dev->irq = pcif->irq_line;) 182.7466 Tj
-5.2213 -465.1747 Td
(9446     int i;) 78.32 Tj
-5.2213 -474.668 Td
(9447     for \(i=0; i<6; i++\)) 146.1973 Tj
-5.2213 -484.1614 Td
(9448     {) 52.2133 Tj
-5.2213 -493.6547 Td
(9449         dev->regbase[i] = pcif->reg_base[i];) 255.8453 Tj
-5.2213 -522.1348 Td
(Sheet 94) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 3) 182.7466 Tj
-5.2213 -28.4801 Td
(9450         dev->regsize[i] = pcif->reg_size[i];) 255.8453 Tj
-5.2213 -37.9735 Td
(9451         if \(dev->regsize[i] == E100_IOPORT_SIZE\)) 276.7306 Tj
-5.2213 -47.4668 Td
(9452             dev->iobase = dev->regbase[i];) 245.4026 Tj
-5.2213 -56.9602 Td
(9453     }) 52.2133 Tj
-5.2213 -66.4535 Td
(9454     e100_reset\(dev\);) 130.5333 Tj
-5.2213 -75.9469 Td
(9455     dev->cufirst = 1;) 135.7546 Tj
-5.2213 -85.4403 Td
(9456     dev->cuidle = 1;) 130.5333 Tj
-5.2213 -94.9336 Td
(9457     e100_print_state\(dev\);) 161.8613 Tj
-5.2213 -104.427 Td
(9458     struct ip_addr ipaddr;) 161.8613 Tj
-5.2213 -113.9203 Td
(9459     IP4_ADDR\(&ipaddr, 192, 168, 1, 1\);) 224.5173 Tj
-5.2213 -123.4137 Td
(9460     struct ip_addr netmask;) 167.0826 Tj
-5.2213 -132.9071 Td
(9461     IP4_ADDR\(&netmask, 255, 255, 255, 0\);) 240.1813 Tj
-5.2213 -142.4004 Td
(9462     struct ip_addr gw;) 140.976 Tj
-5.2213 -151.8938 Td
(9463     IP4_ADDR\(&gw, 192, 168, 1, 2\);) 203.6319 Tj
-5.2213 -161.3871 Td
(9464     netif_add\(&dev->netif, &ipaddr, &netmask, &gw, 0, eth\
ernetif_init, ip_input\);) 449.0346 Tj
-5.2213 -170.8805 Td
(9465     reg_irq_handler\(dev->irq, e100_intr\);) 240.1813 Tj
-5.2213 -180.3739 Td
(9466     pic_enable\(dev->irq\);) 156.64 Tj
-5.2213 -189.8672 Td
(9467     ioapic_enable\(dev->irq, ncpu-1\);) 214.0746 Tj
-5.2213 -199.3606 Td
(9468     kproc_start\(e100_rx_thread, dev, 0, 0, "[e100 rx thre\
ad]"\);) 355.0506 Tj
-5.2213 -208.8539 Td
(9469     e100_ru_start\(dev\);) 146.1973 Tj
-5.2213 -218.3473 Td
(9470     return 1;) 93.984 Tj
-5.2213 -227.8407 Td
(9471 }) 31.328 Tj
-5.2213 -237.334 Td
(9472 ) 26.1067 Tj
-5.2213 -246.8274 Td
(9473 static void) 83.5413 Tj
-5.2213 -256.3207 Td
(9474 delay\(int n\)) 88.7626 Tj
-5.2213 -265.8141 Td
(9475 {) 31.328 Tj
-5.2213 -275.3075 Td
(9476     volatile int i;) 125.312 Tj
-5.2213 -284.8008 Td
(9477     int j;) 78.32 Tj
-5.2213 -294.2942 Td
(9478     for \(j=0; j<n; j++\)) 146.1973 Tj
-5.2213 -303.7875 Td
(9479     {) 52.2133 Tj
-5.2213 -313.2809 Td
(9480     for \(i=0; i<1000; i++\)) 161.8613 Tj
-5.2213 -322.7743 Td
(9481         ;) 73.0986 Tj
-5.2213 -332.2676 Td
(9482     }) 52.2133 Tj
-5.2213 -341.761 Td
(9483 }) 31.328 Tj
-5.2213 -351.2543 Td
(9484 ) 26.1067 Tj
-5.2213 -360.7477 Td
(9485 int) 41.7707 Tj
-5.2213 -370.2411 Td
(9486 e100_reset\(e100_dev *dev\)) 156.64 Tj
-5.2213 -379.7344 Td
(9487 {) 31.328 Tj
-5.2213 -389.2278 Td
(9488     outl\(dev->iobase + SCB_PORT, PORT_SOFT_RESET\);) 287.1733 Tj
-5.2213 -398.7211 Td
(9489     delay\(10\);) 99.2053 Tj
-5.2213 -408.2145 Td
(9490     scb_command_word cmd;) 156.64 Tj
-5.2213 -417.7079 Td
(9491     cmd.word = 0;) 114.8693 Tj
-5.2213 -427.2012 Td
(9492     cmd.cmd.cu_command = CUC_DUMP_RESET;) 234.9599 Tj
-5.2213 -436.6946 Td
(9493     outw\(dev->iobase + SCB_COMMAND, cmd.word\);) 266.2879 Tj
-5.2213 -446.1879 Td
(9494     return 0;) 93.984 Tj
-5.2213 -455.6813 Td
(9495 }) 31.328 Tj
-5.2213 -465.1747 Td
(9496 ) 26.1067 Tj
-5.2213 -474.668 Td
(9497 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9498 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9499 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 94) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 104 104
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 4) 182.7466 Tj
-5.2213 -28.4801 Td
(9500 scb_status_word) 104.4266 Tj
-5.2213 -37.9735 Td
(9501 e100_get_state\(e100_dev *dev\)) 177.5253 Tj
-5.2213 -47.4668 Td
(9502 {) 31.328 Tj
-5.2213 -56.9602 Td
(9503     scb_status_word st;) 146.1973 Tj
-5.2213 -66.4535 Td
(9504     st.word = inw\(dev->iobase + SCB_STATUS\);) 255.8453 Tj
-5.2213 -75.9469 Td
(9505     return st;) 99.2053 Tj
-5.2213 -85.4403 Td
(9506 }) 31.328 Tj
-5.2213 -94.9336 Td
(9507 ) 26.1067 Tj
-5.2213 -104.427 Td
(9508 void) 46.992 Tj
-5.2213 -113.9203 Td
(9509 e100_put_state\(e100_dev *dev, scb_status_word stat\)) 292.3946 Tj
-5.2213 -123.4137 Td
(9510 {) 31.328 Tj
-5.2213 -132.9071 Td
(9511     outw\(dev->iobase + SCB_STATUS, stat.word\);) 266.2879 Tj
-5.2213 -142.4004 Td
(9512 }) 31.328 Tj
-5.2213 -151.8938 Td
(9513 ) 26.1067 Tj
-5.2213 -161.3871 Td
(9514 scb_status_word) 104.4266 Tj
-5.2213 -170.8805 Td
(9515 e100_print_state\(e100_dev *dev\)) 187.968 Tj
-5.2213 -180.3739 Td
(9516 {) 31.328 Tj
-5.2213 -189.8672 Td
(9517     scb_status_word state = e100_get_state\(dev\);) 276.7306 Tj
-5.2213 -199.3606 Td
(9518     cprintf\("   RU Status: %s\\n", ru_state_name[state.st\
atus.rus]\);) 375.9359 Tj
-5.2213 -208.8539 Td
(9519     cprintf\("   CU Status: %s\\n", cu_state_name[state.st\
atus.cus]\);) 375.9359 Tj
-5.2213 -218.3473 Td
(9520 ) 26.1067 Tj
-5.2213 -227.8407 Td
(9521     struct scb_status_word stat = state.status;) 271.5093 Tj
-5.2213 -237.334 Td
(9522     if \(stat.cx\) cprintf\("   CU executed\\n"\);) 261.0666 Tj
-5.2213 -246.8274 Td
(9523     if \(stat.fr\)) 109.648 Tj
-5.2213 -256.3207 Td
(9524         cprintf\("   RU received\\n"\);) 214.0746 Tj
-5.2213 -265.8141 Td
(9525     if \(stat.cna\)) 114.8693 Tj
-5.2213 -275.3075 Td
(9526         cprintf\("   CU state change\\n"\);) 234.9599 Tj
-5.2213 -284.8008 Td
(9527     if \(stat.rnr\)) 114.8693 Tj
-5.2213 -294.2942 Td
(9528         cprintf\("   RU not ready\\n"\);) 219.2959 Tj
-5.2213 -303.7875 Td
(9529     if \(stat.mdi\)) 114.8693 Tj
-5.2213 -313.2809 Td
(9530         cprintf\("   MDI operation completed\\n"\);) 276.7306 Tj
-5.2213 -322.7743 Td
(9531     if \(stat.swi\)) 114.8693 Tj
-5.2213 -332.2676 Td
(9532         cprintf\("   Software Interrupt\\n"\);) 250.6239 Tj
-5.2213 -341.761 Td
(9533     if \(stat.fcp\)) 114.8693 Tj
-5.2213 -351.2543 Td
(9534         cprintf\("   Flow Control Pause\\n"\);) 250.6239 Tj
-5.2213 -360.7477 Td
(9535 ) 26.1067 Tj
-5.2213 -370.2411 Td
(9536     return state;) 114.8693 Tj
-5.2213 -379.7344 Td
(9537 }) 31.328 Tj
-5.2213 -389.2278 Td
(9538 ) 26.1067 Tj
-5.2213 -398.7211 Td
(9539 char *cu_state_name[4] = {) 161.8613 Tj
-5.2213 -408.2145 Td
(9540     "Idle",) 83.5413 Tj
-5.2213 -417.7079 Td
(9541     "Suspended",) 109.648 Tj
-5.2213 -427.2012 Td
(9542     "LPQ Active",) 114.8693 Tj
-5.2213 -436.6946 Td
(9543     "HQP Active",) 114.8693 Tj
-5.2213 -446.1879 Td
(9544 };) 36.5493 Tj
-5.2213 -455.6813 Td
(9545 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9546 ) 26.1067 Tj
-5.2213 -474.668 Td
(9547 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9548 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9549 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 95) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 5) 182.7466 Tj
-5.2213 -28.4801 Td
(9550 char *ru_state_name[16] = {) 167.0826 Tj
-5.2213 -37.9735 Td
(9551     "Idle",) 83.5413 Tj
-5.2213 -47.4668 Td
(9552     "Suspended",) 109.648 Tj
-5.2213 -56.9602 Td
(9553     "No resources",) 125.312 Tj
-5.2213 -66.4535 Td
(9554     "Reserved",) 104.4266 Tj
-5.2213 -75.9469 Td
(9555     "Ready",) 88.7626 Tj
-5.2213 -85.4403 Td
(9556     "Reserved",) 104.4266 Tj
-5.2213 -94.9336 Td
(9557     "Reserved",) 104.4266 Tj
-5.2213 -104.427 Td
(9558     "Reserved",) 104.4266 Tj
-5.2213 -113.9203 Td
(9559     "Reserved",) 104.4266 Tj
-5.2213 -123.4137 Td
(9560     "Reserved",) 104.4266 Tj
-5.2213 -132.9071 Td
(9561     "Reserved",) 104.4266 Tj
-5.2213 -142.4004 Td
(9562     "Reserved",) 104.4266 Tj
-5.2213 -151.8938 Td
(9563     "Reserved",) 104.4266 Tj
-5.2213 -161.3871 Td
(9564     "Reserved",) 104.4266 Tj
-5.2213 -170.8805 Td
(9565     "Reserved",) 104.4266 Tj
-5.2213 -180.3739 Td
(9566     "Reserved",) 104.4266 Tj
-5.2213 -189.8672 Td
(9567 };) 36.5493 Tj
-5.2213 -199.3606 Td
(9568 ) 26.1067 Tj
-5.2213 -208.8539 Td
(9569 uint8_t) 62.656 Tj
-5.2213 -218.3473 Td
(9570 e100_read_scb_command\(e100_dev *dev\)) 214.0746 Tj
-5.2213 -227.8407 Td
(9571 {) 31.328 Tj
-5.2213 -237.334 Td
(9572     return inb\(dev->iobase + SCB_COMMAND + 1\);) 266.2879 Tj
-5.2213 -246.8274 Td
(9573 }) 31.328 Tj
-5.2213 -256.3207 Td
(9574 ) 26.1067 Tj
-5.2213 -265.8141 Td
(9575 void) 46.992 Tj
-5.2213 -275.3075 Td
(9576 e100_set_gp\(e100_dev *dev, void *addr\)) 224.5173 Tj
-5.2213 -284.8008 Td
(9577 {) 31.328 Tj
-5.2213 -294.2942 Td
(9578     outl\(dev->iobase + SCB_GENPTR, \(uint32_t\)addr\);) 292.3946 Tj
-5.2213 -303.7875 Td
(9579 }) 31.328 Tj
-5.2213 -313.2809 Td
(9580 ) 26.1067 Tj
-5.2213 -322.7743 Td
(9581 void) 46.992 Tj
-5.2213 -332.2676 Td
(9582 e100_cu_command\(e100_dev *dev, int command, void *cmd_add\
r\)) 334.1652 Tj
-5.2213 -341.761 Td
(9583 {) 31.328 Tj
-5.2213 -351.2543 Td
(9584     scb_command_word cmd;) 156.64 Tj
-5.2213 -360.7477 Td
(9585     cmd.word = 0;) 114.8693 Tj
-5.2213 -370.2411 Td
(9586     cmd.cmd.cu_command = command;) 198.4106 Tj
-5.2213 -379.7344 Td
(9587     e100_set_gp\(dev, cmd_addr\);) 187.968 Tj
-5.2213 -389.2278 Td
(9588     outw\(dev->iobase + SCB_COMMAND, cmd.word\);) 266.2879 Tj
-5.2213 -398.7211 Td
(9589     while \(e100_read_scb_command\(dev\)\) ;) 234.9599 Tj
-5.2213 -408.2145 Td
(9590 }) 31.328 Tj
-5.2213 -417.7079 Td
(9591 ) 26.1067 Tj
-5.2213 -427.2012 Td
(9592 ) 26.1067 Tj
-5.2213 -436.6946 Td
(9593 ) 26.1067 Tj
-5.2213 -446.1879 Td
(9594 ) 26.1067 Tj
-5.2213 -455.6813 Td
(9595 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9596 ) 26.1067 Tj
-5.2213 -474.668 Td
(9597 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9598 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9599 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 95) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 105 105
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 6) 182.7466 Tj
-5.2213 -28.4801 Td
(9600 void) 46.992 Tj
-5.2213 -37.9735 Td
(9601 e100_ru_command\(e100_dev *dev, int command, void *cmd_add\
r\)) 334.1652 Tj
-5.2213 -47.4668 Td
(9602 {) 31.328 Tj
-5.2213 -56.9602 Td
(9603     scb_command_word cmd;) 156.64 Tj
-5.2213 -66.4535 Td
(9604     cmd.word = 0;) 114.8693 Tj
-5.2213 -75.9469 Td
(9605     cmd.cmd.ru_command = command;) 198.4106 Tj
-5.2213 -85.4403 Td
(9606     e100_set_gp\(dev, cmd_addr\);) 187.968 Tj
-5.2213 -94.9336 Td
(9607     outw\(dev->iobase + SCB_COMMAND, cmd.word\);) 266.2879 Tj
-5.2213 -104.427 Td
(9608     while \(e100_read_scb_command\(dev\)\) ;) 234.9599 Tj
-5.2213 -113.9203 Td
(9609 }) 31.328 Tj
-5.2213 -123.4137 Td
(9610 ) 26.1067 Tj
-5.2213 -132.9071 Td
(9611 void) 46.992 Tj
-5.2213 -142.4004 Td
(9612 e100_rx_thread\(void *arg\)) 156.64 Tj
-5.2213 -151.8938 Td
(9613 {) 31.328 Tj
-5.2213 -161.3871 Td
(9614     e100_dev *dev = arg;) 151.4186 Tj
-5.2213 -170.8805 Td
(9615     acquire\(&dev->rxlock\);) 161.8613 Tj
-5.2213 -180.3739 Td
(9616     while\(1\)) 88.7626 Tj
-5.2213 -189.8672 Td
(9617     {) 52.2133 Tj
-5.2213 -199.3606 Td
(9618         sleep\(&dev->rxlock, &dev->rxlock\);) 245.4026 Tj
-5.2213 -208.8539 Td
(9619         while \(dev->ru_last->eof\)) 198.4106 Tj
-5.2213 -218.3473 Td
(9620         {) 73.0986 Tj
-5.2213 -227.8407 Td
(9621             ethernetif_input\(&dev->netif\);) 245.4026 Tj
-5.2213 -237.334 Td
(9622             dev->ru_last = \(void*\)dev->ru_last->head.lin\
k;) 328.9439 Tj
-5.2213 -246.8274 Td
(9623         }) 73.0986 Tj
-5.2213 -256.3207 Td
(9624     }) 52.2133 Tj
-5.2213 -265.8141 Td
(9625     release\(&dev->rxlock\);) 161.8613 Tj
-5.2213 -275.3075 Td
(9626 }) 31.328 Tj
-5.2213 -284.8008 Td
(9627 ) 26.1067 Tj
-5.2213 -294.2942 Td
(9628 void) 46.992 Tj
-5.2213 -303.7875 Td
(9629 e100_intr\(struct trapframe *tf\)) 187.968 Tj
-5.2213 -313.2809 Td
(9630 {) 31.328 Tj
-5.2213 -322.7743 Td
(9631 //    cprintf\("e100_intr\\n"\);) 177.5253 Tj
-5.2213 -332.2676 Td
(9632     int i;) 78.32 Tj
-5.2213 -341.761 Td
(9633     int index = -1;) 125.312 Tj
-5.2213 -351.2543 Td
(9634     for \(i=0; i< dev_count; i++\)) 193.1893 Tj
-5.2213 -360.7477 Td
(9635     {) 52.2133 Tj
-5.2213 -370.2411 Td
(9636         if \(tf->trapno == IRQ_OFFSET + e100_devs[i].irq\)) 318.5013 Tj
-5.2213 -379.7344 Td
(9637         {) 73.0986 Tj
-5.2213 -389.2278 Td
(9638             index = i;) 140.976 Tj
-5.2213 -398.7211 Td
(9639             break;) 120.0906 Tj
-5.2213 -408.2145 Td
(9640         }) 73.0986 Tj
-5.2213 -417.7079 Td
(9641     }) 52.2133 Tj
-5.2213 -427.2012 Td
(9642     if \(index == -1\)) 130.5333 Tj
-5.2213 -436.6946 Td
(9643     {) 52.2133 Tj
-5.2213 -446.1879 Td
(9644         cprintf\("e100_intr: can't find corresponding devi\
ce\\n"\);) 360.2719 Tj
-5.2213 -455.6813 Td
(9645         return;) 104.4266 Tj
-5.2213 -465.1747 Td
(9646     }) 52.2133 Tj
-5.2213 -474.668 Td
(9647     e100_dev *dev = &e100_devs[index];) 224.5173 Tj
-5.2213 -484.1614 Td
(9648 //    e100_print_state\(dev\);) 172.304 Tj
-5.2213 -493.6547 Td
(9649     scb_status_word state = e100_get_state\(dev\);) 276.7306 Tj
-5.2213 -522.1348 Td
(Sheet 96) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 7) 182.7466 Tj
-5.2213 -28.4801 Td
(9650     struct scb_status_word stat = state.status;) 271.5093 Tj
-5.2213 -37.9735 Td
(9651     state.word |= 0xff00;) 156.64 Tj
-5.2213 -47.4668 Td
(9652     e100_put_state\(dev, state\);) 187.968 Tj
-5.2213 -56.9602 Td
(9653 ) 26.1067 Tj
-5.2213 -66.4535 Td
(9654     if \(stat.cx\)) 109.648 Tj
-5.2213 -75.9469 Td
(9655     {) 52.2133 Tj
-5.2213 -85.4403 Td
(9656 //        cprintf\("   CU executed\\n"\);) 224.5173 Tj
-5.2213 -94.9336 Td
(9657     }) 52.2133 Tj
-5.2213 -104.427 Td
(9658     if \(stat.fr\)) 109.648 Tj
-5.2213 -113.9203 Td
(9659     {) 52.2133 Tj
-5.2213 -123.4137 Td
(9660         if \(!dev->ru_first\)) 167.0826 Tj
-5.2213 -132.9071 Td
(9661         {) 73.0986 Tj
-5.2213 -142.4004 Td
(9662             dev->ru_first = dev->ru_last;) 240.1813 Tj
-5.2213 -151.8938 Td
(9663             wakeup\(&dev->ru_first\);) 208.8533 Tj
-5.2213 -161.3871 Td
(9664         }) 73.0986 Tj
-5.2213 -170.8805 Td
(9665         wakeup\(&dev->rxlock\);) 177.5253 Tj
-5.2213 -180.3739 Td
(9666 /*        while \(dev->ru_last->eof\)) 208.8533 Tj
-5.2213 -189.8672 Td
(9667         {) 73.0986 Tj
-5.2213 -199.3606 Td
(9668             ethernetif_input\(&dev->netif\);) 245.4026 Tj
-5.2213 -208.8539 Td
(9669             dev->ru_last = \(void*\)dev->ru_last->head.lin\
k;) 328.9439 Tj
-5.2213 -218.3473 Td
(9670         }*/) 83.5413 Tj
-5.2213 -227.8407 Td
(9671     }) 52.2133 Tj
-5.2213 -237.334 Td
(9672     if \(stat.cna\)) 114.8693 Tj
-5.2213 -246.8274 Td
(9673     {) 52.2133 Tj
-5.2213 -256.3207 Td
(9674 /*        if \(dev->cu_next_pkt != 0\)) 214.0746 Tj
-5.2213 -265.8141 Td
(9675         {) 73.0986 Tj
-5.2213 -275.3075 Td
(9676             cprintf\("   finished 0x%08x\\n", dev->cu_next\
_pkt\);) 349.8292 Tj
-5.2213 -284.8008 Td
(9677             if \(dev->cu_next_pkt->link != 0\)) 255.8453 Tj
-5.2213 -294.2942 Td
(9678             {) 93.984 Tj
-5.2213 -303.7875 Td
(9679                 cprintf\("   starting next packet: ") 292.3946 Tj
-5.2213 -313.2809 Td
(9680                         "0x%08x\\n", dev->cu_next_pkt->lin\
k\);) 339.3866 Tj
-5.2213 -322.7743 Td
(9681                 e100_cu_command\(dev, CUC_START,) 271.5093 Tj
-5.2213 -332.2676 Td
(9682                         \(void*\)dev->cu_next_pkt->link\);) 313.2799 Tj
-5.2213 -341.761 Td
(9683                 dev->cuhead = dev->cu_next_pkt->link - dev\
->cubase;) 375.9359 Tj
-5.2213 -351.2543 Td
(9684                 dev->cu_next_pkt = \(command_block *\)dev-\
>cu_next_pkt->link;) 417.7066 Tj
-5.2213 -360.7477 Td
(9685             }) 93.984 Tj
-5.2213 -370.2411 Td
(9686             else) 109.648 Tj
-5.2213 -379.7344 Td
(9687             {) 93.984 Tj
-5.2213 -389.2278 Td
(9688                 dev->cuhead = dev->cuend;) 240.1813 Tj
-5.2213 -398.7211 Td
(9689                 dev->cu_last_pkt = 0;) 219.2959 Tj
-5.2213 -408.2145 Td
(9690                 dev->cu_next_pkt = 0;) 219.2959 Tj
-5.2213 -417.7079 Td
(9691             }) 93.984 Tj
-5.2213 -427.2012 Td
(9692             ring_printinfo\(dev\);) 193.1893 Tj
-5.2213 -436.6946 Td
(9693         }*/) 83.5413 Tj
-5.2213 -446.1879 Td
(9694         if \(dev->cu_last_pkt\)) 177.5253 Tj
-5.2213 -455.6813 Td
(9695         {) 73.0986 Tj
-5.2213 -465.1747 Td
(9696             if \(dev->cu_last_pkt->c\)) 214.0746 Tj
-5.2213 -474.668 Td
(9697             {) 93.984 Tj
-5.2213 -484.1614 Td
(9698                 dev->cuidle = 1;) 193.1893 Tj
-5.2213 -493.6547 Td
(9699 //                dev->cuhead = dev->cuend;) 250.6239 Tj
-5.2213 -522.1348 Td
(Sheet 96) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 106 106
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 8) 182.7466 Tj
-5.2213 -28.4801 Td
(9700                 dev->cu_next_pkt = 0;) 219.2959 Tj
-5.2213 -37.9735 Td
(9701 //                dev->cu_last_pkt = 0;) 229.7386 Tj
-5.2213 -47.4668 Td
(9702             } else {) 130.5333 Tj
-5.2213 -56.9602 Td
(9703                 dev->cuidle = 0;) 193.1893 Tj
-5.2213 -66.4535 Td
(9704                 while \(dev->cu_next_pkt->c\)) 250.6239 Tj
-5.2213 -75.9469 Td
(9705                 {) 114.8693 Tj
-5.2213 -85.4403 Td
(9706                     if \(!dev->cu_next_pkt->ok\)) 266.2879 Tj
-5.2213 -94.9336 Td
(9707                         cprintf\("send error 0x%08x\\n", d\
ev->cu_next_pkt\);) 407.2639 Tj
-5.2213 -104.427 Td
(9708                     dev->cu_next_pkt = \(void*\)dev->cu_ne\
xt_pkt->link;) 386.3786 Tj
-5.2213 -113.9203 Td
(9709                 }) 114.8693 Tj
-5.2213 -123.4137 Td
(9710                 e100_cu_command\(dev, CUC_RESUME, 0\);) 297.6159 Tj
-5.2213 -132.9071 Td
(9711 //                dev->cuhead = \(uint32_t\)dev->cu_next_p\
kt - dev->cubase;) 407.2639 Tj
-5.2213 -142.4004 Td
(9712             }) 93.984 Tj
-5.2213 -151.8938 Td
(9713         }) 73.0986 Tj
-5.2213 -161.3871 Td
(9714 //        ring_printinfo\(dev\);) 182.7466 Tj
-5.2213 -170.8805 Td
(9715     }) 52.2133 Tj
-5.2213 -180.3739 Td
(9716     if \(stat.rnr\)) 114.8693 Tj
-5.2213 -189.8672 Td
(9717     {) 52.2133 Tj
-5.2213 -199.3606 Td
(9718         cprintf\("e100: RU overrun!\\n"\);) 229.7386 Tj
-5.2213 -208.8539 Td
(9719         dev->ru_full = 1;) 156.64 Tj
-5.2213 -218.3473 Td
(9720     }) 52.2133 Tj
-5.2213 -227.8407 Td
(9721     if \(stat.mdi\)) 114.8693 Tj
-5.2213 -237.334 Td
(9722         cprintf\("   MDI operation completed\\n"\);) 276.7306 Tj
-5.2213 -246.8274 Td
(9723     if \(stat.swi\)) 114.8693 Tj
-5.2213 -256.3207 Td
(9724         cprintf\("   Software Interrupt\\n"\);) 250.6239 Tj
-5.2213 -265.8141 Td
(9725     if \(stat.fcp\)) 114.8693 Tj
-5.2213 -275.3075 Td
(9726         cprintf\("   Flow Control Pause\\n"\);) 250.6239 Tj
-5.2213 -284.8008 Td
(9727 ) 26.1067 Tj
-5.2213 -294.2942 Td
(9728 }) 31.328 Tj
-5.2213 -303.7875 Td
(9729 ) 26.1067 Tj
-5.2213 -313.2809 Td
(9730 void) 46.992 Tj
-5.2213 -322.7743 Td
(9731 ring_printinfo\(e100_dev *dev\)) 177.5253 Tj
-5.2213 -332.2676 Td
(9732 {) 31.328 Tj
-5.2213 -341.761 Td
(9733     cprintf\("Ring Info:   "\);) 177.5253 Tj
-5.2213 -351.2543 Td
(9734     cprintf\("head: 0x%08x  ", dev->cu_next_pkt\);) 276.7306 Tj
-5.2213 -360.7477 Td
(9735     cprintf\("end:  0x%08x\\n", dev->cu_last_pkt\);) 276.7306 Tj
-5.2213 -370.2411 Td
(9736 }) 31.328 Tj
-5.2213 -379.7344 Td
(9737 ) 26.1067 Tj
-5.2213 -389.2278 Td
(9738 ) 26.1067 Tj
-5.2213 -398.7211 Td
(9739 ) 26.1067 Tj
-5.2213 -408.2145 Td
(9740 ) 26.1067 Tj
-5.2213 -417.7079 Td
(9741 ) 26.1067 Tj
-5.2213 -427.2012 Td
(9742 ) 26.1067 Tj
-5.2213 -436.6946 Td
(9743 ) 26.1067 Tj
-5.2213 -446.1879 Td
(9744 ) 26.1067 Tj
-5.2213 -455.6813 Td
(9745 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9746 ) 26.1067 Tj
-5.2213 -474.668 Td
(9747 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9748 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9749 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 97) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 9) 182.7466 Tj
-5.2213 -28.4801 Td
(9750 void *) 57.4347 Tj
-5.2213 -37.9735 Td
(9751 ring_alloc\(e100_dev *dev, uint32_t len\)) 229.7386 Tj
-5.2213 -47.4668 Td
(9752 {) 31.328 Tj
-5.2213 -56.9602 Td
(9753     if \(len > E100_CB_SIZE\)) 167.0826 Tj
-5.2213 -66.4535 Td
(9754         return \(void*\) 0;) 156.64 Tj
-5.2213 -75.9469 Td
(9755     if \(dev->cu_next_pkt\)) 156.64 Tj
-5.2213 -85.4403 Td
(9756     {) 52.2133 Tj
-5.2213 -94.9336 Td
(9757         if \(\(void*\)dev->cu_last_pkt->link == dev->cu_ne\
xt_pkt\)) 349.8292 Tj
-5.2213 -104.427 Td
(9758             return \(void*\) 0;) 177.5253 Tj
-5.2213 -113.9203 Td
(9759         return \(void*\)dev->cu_last_pkt->link;) 261.0666 Tj
-5.2213 -123.4137 Td
(9760     } else {) 88.7626 Tj
-5.2213 -132.9071 Td
(9761         return \(void*\)dev->cu_last_pkt->link;) 261.0666 Tj
-5.2213 -142.4004 Td
(9762     }) 52.2133 Tj
-5.2213 -151.8938 Td
(9763 /*) 36.5493 Tj
-5.2213 -161.3871 Td
(9764     len = E100_CB_SIZE;) 146.1973 Tj
-5.2213 -170.8805 Td
(9765     if \(dev->cuhead <= dev->cuend\)) 203.6319 Tj
-5.2213 -180.3739 Td
(9766     {) 52.2133 Tj
-5.2213 -189.8672 Td
(9767         uint32_t newend = dev->cuend + len;) 250.6239 Tj
-5.2213 -199.3606 Td
(9768         uint32_t oldend = dev->cuend;) 219.2959 Tj
-5.2213 -208.8539 Td
(9769         if \(newend >= dev->cusize\)) 203.6319 Tj
-5.2213 -218.3473 Td
(9770         {) 73.0986 Tj
-5.2213 -227.8407 Td
(9771             newend = len; // Start from base) 255.8453 Tj
-5.2213 -237.334 Td
(9772             if \(newend < dev->cuhead\)) 219.2959 Tj
-5.2213 -246.8274 Td
(9773             {) 93.984 Tj
-5.2213 -256.3207 Td
(9774                 dev->cuend = newend;) 214.0746 Tj
-5.2213 -265.8141 Td
(9775                 return \(void*\)dev->cubase;) 245.4026 Tj
-5.2213 -275.3075 Td
(9776             }) 93.984 Tj
-5.2213 -284.8008 Td
(9777             else) 109.648 Tj
-5.2213 -294.2942 Td
(9778                 return \(void*\)0;) 193.1893 Tj
-5.2213 -303.7875 Td
(9779         }) 73.0986 Tj
-5.2213 -313.2809 Td
(9780         else) 88.7626 Tj
-5.2213 -322.7743 Td
(9781         {) 73.0986 Tj
-5.2213 -332.2676 Td
(9782             dev->cuend = newend;) 193.1893 Tj
-5.2213 -341.761 Td
(9783             return \(void*\)\(oldend + dev->cubase\);) 281.9519 Tj
-5.2213 -351.2543 Td
(9784         }) 73.0986 Tj
-5.2213 -360.7477 Td
(9785     }) 52.2133 Tj
-5.2213 -370.2411 Td
(9786     else) 67.8773 Tj
-5.2213 -379.7344 Td
(9787     {) 52.2133 Tj
-5.2213 -389.2278 Td
(9788         uint32_t newend = dev->cuend + len;) 250.6239 Tj
-5.2213 -398.7211 Td
(9789         uint32_t oldend = dev->cuend;) 219.2959 Tj
-5.2213 -408.2145 Td
(9790         if \(newend < dev->cuhead\)) 198.4106 Tj
-5.2213 -417.7079 Td
(9791         {) 73.0986 Tj
-5.2213 -427.2012 Td
(9792             dev->cuend = newend;) 193.1893 Tj
-5.2213 -436.6946 Td
(9793             return \(void*\)\(oldend + dev->cubase\);) 281.9519 Tj
-5.2213 -446.1879 Td
(9794         }) 73.0986 Tj
-5.2213 -455.6813 Td
(9795         else) 88.7626 Tj
-5.2213 -465.1747 Td
(9796             return \(void*\)0;) 172.304 Tj
-5.2213 -474.668 Td
(9797     }*/) 62.656 Tj
-5.2213 -484.1614 Td
(9798 }) 31.328 Tj
-5.2213 -493.6547 Td
(9799 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 97) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 107 107
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 10) 187.968 Tj
-5.2213 -28.4801 Td
(9800 int) 41.7707 Tj
-5.2213 -37.9735 Td
(9801 e100_send_dev\(e100_dev *dev, void *buffer, uint32_t len\)) 318.5013 Tj
-5.2213 -47.4668 Td
(9802 {) 31.328 Tj
-5.2213 -56.9602 Td
(9803 //    cprintf\("e100_send_dev\\n"\);) 198.4106 Tj
-5.2213 -66.4535 Td
(9804     if \(len > TBD_DATA_LIMIT\)) 177.5253 Tj
-5.2213 -75.9469 Td
(9805         return -1; // ETOOBIG) 177.5253 Tj
-5.2213 -85.4403 Td
(9806     acquire\(&dev->culock\);) 161.8613 Tj
-5.2213 -94.9336 Td
(9807     op_transmit_cmd *start =) 172.304 Tj
-5.2213 -104.427 Td
(9808         ring_alloc\(dev, sizeof\(op_transmit_cmd\) + len\)\
;) 313.2799 Tj
-5.2213 -113.9203 Td
(9809 //    cprintf\("   start: 0x%08x\\n", start\);) 250.6239 Tj
-5.2213 -123.4137 Td
(9810     if \(!start\)) 104.4266 Tj
-5.2213 -132.9071 Td
(9811     {) 52.2133 Tj
-5.2213 -142.4004 Td
(9812         release\(&dev->culock\);) 182.7466 Tj
-5.2213 -151.8938 Td
(9813         return -1; // No space in buffer) 234.9599 Tj
-5.2213 -161.3871 Td
(9814     }) 52.2133 Tj
-5.2213 -170.8805 Td
(9815     op_transmit_cmd_cmd cmd_word;) 198.4106 Tj
-5.2213 -180.3739 Td
(9816     cmd_word.word = 0;) 140.976 Tj
-5.2213 -189.8672 Td
(9817     cmd_word.cmd = OP_TRANSMIT;) 187.968 Tj
-5.2213 -199.3606 Td
(9818 //    cmd_word.el = 0;) 140.976 Tj
-5.2213 -208.8539 Td
(9819     cmd_word.cid = 0xe;) 146.1973 Tj
-5.2213 -218.3473 Td
(9820     cmd_word.i = 1;) 125.312 Tj
-5.2213 -227.8407 Td
(9821     cmd_word.s = 1;) 125.312 Tj
-5.2213 -237.334 Td
(9822     if \(!dev->cuidle\)) 135.7546 Tj
-5.2213 -246.8274 Td
(9823         dev->cu_last_pkt->s = 0;) 193.1893 Tj
-5.2213 -256.3207 Td
(9824     start->base_cmd.cmd_word = cmd_word.word;) 261.0666 Tj
-5.2213 -265.8141 Td
(9825     start->base_cmd.status_word = 0;) 214.0746 Tj
-5.2213 -275.3075 Td
(9826 //    start->base_cmd.link = 0;) 187.968 Tj
-5.2213 -284.8008 Td
(9827     start->tbd_addr = 0xffffffff;) 198.4106 Tj
-5.2213 -294.2942 Td
(9828     start->byte_count = len;) 172.304 Tj
-5.2213 -303.7875 Td
(9829     start->eof = 1;) 125.312 Tj
-5.2213 -313.2809 Td
(9830     start->trans_thres = 0xE0;) 182.7466 Tj
-5.2213 -322.7743 Td
(9831     start->tbd_num = 0;) 146.1973 Tj
-5.2213 -332.2676 Td
(9832     memcpy\(\(void*\)\(start+1\), buffer, len\);) 245.4026 Tj
-5.2213 -341.761 Td
(9833 //    e100_print_state\(dev\);) 172.304 Tj
-5.2213 -351.2543 Td
(9834 //    if \(e100_get_state\(dev\).status.cus == CUS_IDLE\)) 302.8373 Tj
-5.2213 -360.7477 Td
(9835 //    if \(dev->cu_next_pkt == 0\)) 193.1893 Tj
-5.2213 -370.2411 Td
(9836 //    This test would fail in real i82559er) 250.6239 Tj
-5.2213 -379.7344 Td
(9837 //    But it passed in qemu) 167.0826 Tj
-5.2213 -389.2278 Td
(9838 /*    if \(\(!dev->cufirst\) && \(!dev->cuidle\)\)) 255.8453 Tj
-5.2213 -398.7211 Td
(9839         if \(start->base_cmd.link == dev->cu_next_pkt\)) 302.8373 Tj
-5.2213 -408.2145 Td
(9840             e100_cu_command\(dev, CUC_RESUME, start\);*/) 308.0586 Tj
-5.2213 -417.7079 Td
(9841     if \(dev->cufirst\)) 135.7546 Tj
-5.2213 -427.2012 Td
(9842     {) 52.2133 Tj
-5.2213 -436.6946 Td
(9843         dev->cufirst = 0;) 156.64 Tj
-5.2213 -446.1879 Td
(9844         dev->cu_next_pkt = &start->base_cmd;) 255.8453 Tj
-5.2213 -455.6813 Td
(9845         e100_cu_command\(dev, CUC_START, start\);) 271.5093 Tj
-5.2213 -465.1747 Td
(9846     }) 52.2133 Tj
-5.2213 -474.668 Td
(9847     else if \(dev->cuidle\)) 156.64 Tj
-5.2213 -484.1614 Td
(9848     {) 52.2133 Tj
-5.2213 -493.6547 Td
(9849         dev->cuidle = 0;) 151.4186 Tj
-5.2213 -522.1348 Td
(Sheet 98) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 11) 187.968 Tj
-5.2213 -28.4801 Td
(9850         dev->cu_next_pkt = &start->base_cmd;) 255.8453 Tj
-5.2213 -37.9735 Td
(9851         e100_cu_command\(dev, CUC_RESUME, start\); // the \
GENPTR is nonsense) 412.4852 Tj
-5.2213 -47.4668 Td
(9852     }) 52.2133 Tj
-5.2213 -56.9602 Td
(9853     dev->cu_last_pkt = &start->base_cmd;) 234.9599 Tj
-5.2213 -66.4535 Td
(9854     release\(&dev->culock\);) 161.8613 Tj
-5.2213 -75.9469 Td
(9855     return len;) 104.4266 Tj
-5.2213 -85.4403 Td
(9856 }) 31.328 Tj
-5.2213 -94.9336 Td
(9857 ) 26.1067 Tj
-5.2213 -104.427 Td
(9858 int) 41.7707 Tj
-5.2213 -113.9203 Td
(9859 e100_send\(void *buffer, uint32_t len\)) 219.2959 Tj
-5.2213 -123.4137 Td
(9860 {) 31.328 Tj
-5.2213 -132.9071 Td
(9861     if \(dev_count == 0\)) 146.1973 Tj
-5.2213 -142.4004 Td
(9862         return -2; // Device not found) 224.5173 Tj
-5.2213 -151.8938 Td
(9863     return e100_send_dev\(&e100_devs[0], buffer,len\);) 297.6159 Tj
-5.2213 -161.3871 Td
(9864 }) 31.328 Tj
-5.2213 -170.8805 Td
(9865 ) 26.1067 Tj
-5.2213 -180.3739 Td
(9866 void) 46.992 Tj
-5.2213 -189.8672 Td
(9867 ring_init\(e100_dev *dev\)) 151.4186 Tj
-5.2213 -199.3606 Td
(9868 {) 31.328 Tj
-5.2213 -208.8539 Td
(9869     int i;) 78.32 Tj
-5.2213 -218.3473 Td
(9870     dev->cucount = dev->cusize / E100_CB_SIZE;) 266.2879 Tj
-5.2213 -227.8407 Td
(9871     dev->cu_next_pkt = 0;) 156.64 Tj
-5.2213 -237.334 Td
(9872     for \(i=0; i<dev->cucount ; i++\)) 208.8533 Tj
-5.2213 -246.8274 Td
(9873     {) 52.2133 Tj
-5.2213 -256.3207 Td
(9874         command_block *cmd = \(void*\)\(dev->cubase + i * \
E100_CB_SIZE\);) 386.3786 Tj
-5.2213 -265.8141 Td
(9875         cmd->cmd_word = 0;) 161.8613 Tj
-5.2213 -275.3075 Td
(9876         cmd->status_word = 0;) 177.5253 Tj
-5.2213 -284.8008 Td
(9877         cmd->c = 1;) 125.312 Tj
-5.2213 -294.2942 Td
(9878         cmd->el = 1;) 130.5333 Tj
-5.2213 -303.7875 Td
(9879         if \(i == dev->cucount - 1\)) 203.6319 Tj
-5.2213 -313.2809 Td
(9880         {) 73.0986 Tj
-5.2213 -322.7743 Td
(9881             cmd->link = \(void*\)dev->cubase;) 250.6239 Tj
-5.2213 -332.2676 Td
(9882             dev->cu_last_pkt = cmd;) 208.8533 Tj
-5.2213 -341.761 Td
(9883         }) 73.0986 Tj
-5.2213 -351.2543 Td
(9884         else) 88.7626 Tj
-5.2213 -360.7477 Td
(9885         {) 73.0986 Tj
-5.2213 -370.2411 Td
(9886             cmd->link = \(void*\)\(\(uint32_t\)cmd + E100_\
CB_SIZE\);) 349.8292 Tj
-5.2213 -379.7344 Td
(9887         }) 73.0986 Tj
-5.2213 -389.2278 Td
(9888 //        cprintf\("CB %d: start 0x%08x next 0x%08x\\n", i\
, cmd, cmd->link\);) 412.4852 Tj
-5.2213 -398.7211 Td
(9889     }) 52.2133 Tj
-5.2213 -408.2145 Td
(9890     dev->rucount = dev->rusize / E100_RFD_SIZE;) 271.5093 Tj
-5.2213 -417.7079 Td
(9891     for \(i=0; i<dev->rucount; i++\)) 203.6319 Tj
-5.2213 -427.2012 Td
(9892     {) 52.2133 Tj
-5.2213 -436.6946 Td
(9893         rf_desc *rfd = \(void*\)\(dev->rubase + i * E100_R\
FD_SIZE\);) 360.2719 Tj
-5.2213 -446.1879 Td
(9894         rfd->head.cmd_word = 0;) 187.968 Tj
-5.2213 -455.6813 Td
(9895         rfd->head.status_word = 0;) 203.6319 Tj
-5.2213 -465.1747 Td
(9896         rfd->size = E100_RFD_SIZE - sizeof\(rf_desc\);) 297.6159 Tj
-5.2213 -474.668 Td
(9897         if \(rfd->size & 1\)) 161.8613 Tj
-5.2213 -484.1614 Td
(9898             rfd->size--;) 151.4186 Tj
-5.2213 -493.6547 Td
(9899         rfd->eof = 0;) 135.7546 Tj
-5.2213 -522.1348 Td
(Sheet 98) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 108 108
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 12) 187.968 Tj
-5.2213 -28.4801 Td
(9900         rfd->f = 0;) 125.312 Tj
-5.2213 -37.9735 Td
(9901         if \(i == dev->rucount - 1\)) 203.6319 Tj
-5.2213 -47.4668 Td
(9902         {) 73.0986 Tj
-5.2213 -56.9602 Td
(9903             rfd->head.link = \(void*\)dev->rubase;) 276.7306 Tj
-5.2213 -66.4535 Td
(9904             rfd->head.el = 1;) 177.5253 Tj
-5.2213 -75.9469 Td
(9905             dev->ru_prev = rfd;) 187.968 Tj
-5.2213 -85.4403 Td
(9906         }) 73.0986 Tj
-5.2213 -94.9336 Td
(9907         else) 88.7626 Tj
-5.2213 -104.427 Td
(9908         {) 73.0986 Tj
-5.2213 -113.9203 Td
(9909             rfd->head.link = \(void*\)\(\(uint32_t\)rfd + \
E100_RFD_SIZE\);) 381.1572 Tj
-5.2213 -123.4137 Td
(9910         }) 73.0986 Tj
-5.2213 -132.9071 Td
(9911     }) 52.2133 Tj
-5.2213 -142.4004 Td
(9912     dev->ru_first = 0;) 140.976 Tj
-5.2213 -151.8938 Td
(9913     dev->ru_last = \(void*\)dev->rubase;) 224.5173 Tj
-5.2213 -161.3871 Td
(9914 ) 26.1067 Tj
-5.2213 -170.8805 Td
(9915 }) 31.328 Tj
-5.2213 -180.3739 Td
(9916 ) 26.1067 Tj
-5.2213 -189.8672 Td
(9917 void) 46.992 Tj
-5.2213 -199.3606 Td
(9918 e100_ru_start\(e100_dev *dev\)) 172.304 Tj
-5.2213 -208.8539 Td
(9919 {) 31.328 Tj
-5.2213 -218.3473 Td
(9920     dev->ru_full = 0;) 135.7546 Tj
-5.2213 -227.8407 Td
(9921     e100_ru_command\(dev, RUC_START, \(void*\)dev->rubase\)\
;) 318.5013 Tj
-5.2213 -237.334 Td
(9922 }) 31.328 Tj
-5.2213 -246.8274 Td
(9923 ) 26.1067 Tj
-5.2213 -256.3207 Td
(9924 int) 41.7707 Tj
-5.2213 -265.8141 Td
(9925 e100_receive\(void *buffer, uint32_t len\)) 234.9599 Tj
-5.2213 -275.3075 Td
(9926 {) 31.328 Tj
-5.2213 -284.8008 Td
(9927     if \(dev_count == 0\)) 146.1973 Tj
-5.2213 -294.2942 Td
(9928         return -2; // Device not found) 224.5173 Tj
-5.2213 -303.7875 Td
(9929     return e100_receive_dev\(&e100_devs[0], buffer, len\);) 318.5013 Tj
-5.2213 -313.2809 Td
(9930 }) 31.328 Tj
-5.2213 -322.7743 Td
(9931 ) 26.1067 Tj
-5.2213 -332.2676 Td
(9932 int) 41.7707 Tj
-5.2213 -341.761 Td
(9933 e100_receive_dev\(e100_dev *dev, void *buffer, int len\)) 308.0586 Tj
-5.2213 -351.2543 Td
(9934 {) 31.328 Tj
-5.2213 -360.7477 Td
(9935     int count;) 99.2053 Tj
-5.2213 -370.2411 Td
(9936 //    cprintf\("e100_receive_dev\\n"\);) 214.0746 Tj
-5.2213 -379.7344 Td
(9937     acquire\(&dev->rulock\);) 161.8613 Tj
-5.2213 -389.2278 Td
(9938     while \(dev->ru_first == 0\)) 182.7466 Tj
-5.2213 -398.7211 Td
(9939         sleep\(&dev->rulock, &dev->rulock\);) 245.4026 Tj
-5.2213 -408.2145 Td
(9940     if \(len < dev->ru_first->count\)) 208.8533 Tj
-5.2213 -417.7079 Td
(9941     {) 52.2133 Tj
-5.2213 -427.2012 Td
(9942         release\(&dev->rulock\);) 182.7466 Tj
-5.2213 -436.6946 Td
(9943         return -1; // ETOOBIG) 177.5253 Tj
-5.2213 -446.1879 Td
(9944     }) 52.2133 Tj
-5.2213 -455.6813 Td
(9945     memcpy\(buffer, dev->ru_first + 1, dev->ru_first->coun\
t\);) 339.3866 Tj
-5.2213 -465.1747 Td
(9946 //    cprintf\("received %d bytes into 0x%08x\\n", dev->ru\
_first->count, buffer\);) 438.5919 Tj
-5.2213 -474.668 Td
(9947     count = dev->ru_first->count;) 198.4106 Tj
-5.2213 -484.1614 Td
(9948     dev->ru_first->eof = 0;) 167.0826 Tj
-5.2213 -493.6547 Td
(9949     dev->ru_first->f = 0;) 156.64 Tj
-5.2213 -522.1348 Td
(Sheet 99) 41.7707 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/e100.c  Page 13) 187.968 Tj
-5.2213 -28.4801 Td
(9950     dev->ru_prev->head.el = 0;) 182.7466 Tj
-5.2213 -37.9735 Td
(9951     dev->ru_first->head.el = 1;) 187.968 Tj
-5.2213 -47.4668 Td
(9952     dev->ru_prev = dev->ru_first;) 198.4106 Tj
-5.2213 -56.9602 Td
(9953     dev->ru_first = \(void*\)dev->ru_first->head.link;) 297.6159 Tj
-5.2213 -66.4535 Td
(9954     if \(dev->ru_full\)) 135.7546 Tj
-5.2213 -75.9469 Td
(9955     {) 52.2133 Tj
-5.2213 -85.4403 Td
(9956         // RU full, in No Resource state) 234.9599 Tj
-5.2213 -94.9336 Td
(9957         dev->ru_full = 0;) 156.64 Tj
-5.2213 -104.427 Td
(9958         e100_ru_command\(dev, RUC_START, dev->ru_prev\);) 308.0586 Tj
-5.2213 -113.9203 Td
(9959     }) 52.2133 Tj
-5.2213 -123.4137 Td
(9960     if \(dev->ru_first == dev->ru_last\)) 224.5173 Tj
-5.2213 -132.9071 Td
(9961         dev->ru_first = 0;) 161.8613 Tj
-5.2213 -142.4004 Td
(9962     release\(&dev->rulock\);) 161.8613 Tj
-5.2213 -151.8938 Td
(9963     return count;) 114.8693 Tj
-5.2213 -161.3871 Td
(9964 }) 31.328 Tj
-5.2213 -170.8805 Td
(9965 ) 26.1067 Tj
-5.2213 -180.3739 Td
(9966 ) 26.1067 Tj
-5.2213 -189.8672 Td
(9967 ) 26.1067 Tj
-5.2213 -199.3606 Td
(9968 ) 26.1067 Tj
-5.2213 -208.8539 Td
(9969 ) 26.1067 Tj
-5.2213 -218.3473 Td
(9970 ) 26.1067 Tj
-5.2213 -227.8407 Td
(9971 ) 26.1067 Tj
-5.2213 -237.334 Td
(9972 ) 26.1067 Tj
-5.2213 -246.8274 Td
(9973 ) 26.1067 Tj
-5.2213 -256.3207 Td
(9974 ) 26.1067 Tj
-5.2213 -265.8141 Td
(9975 ) 26.1067 Tj
-5.2213 -275.3075 Td
(9976 ) 26.1067 Tj
-5.2213 -284.8008 Td
(9977 ) 26.1067 Tj
-5.2213 -294.2942 Td
(9978 ) 26.1067 Tj
-5.2213 -303.7875 Td
(9979 ) 26.1067 Tj
-5.2213 -313.2809 Td
(9980 ) 26.1067 Tj
-5.2213 -322.7743 Td
(9981 ) 26.1067 Tj
-5.2213 -332.2676 Td
(9982 ) 26.1067 Tj
-5.2213 -341.761 Td
(9983 ) 26.1067 Tj
-5.2213 -351.2543 Td
(9984 ) 26.1067 Tj
-5.2213 -360.7477 Td
(9985 ) 26.1067 Tj
-5.2213 -370.2411 Td
(9986 ) 26.1067 Tj
-5.2213 -379.7344 Td
(9987 ) 26.1067 Tj
-5.2213 -389.2278 Td
(9988 ) 26.1067 Tj
-5.2213 -398.7211 Td
(9989 ) 26.1067 Tj
-5.2213 -408.2145 Td
(9990 ) 26.1067 Tj
-5.2213 -417.7079 Td
(9991 ) 26.1067 Tj
-5.2213 -427.2012 Td
(9992 ) 26.1067 Tj
-5.2213 -436.6946 Td
(9993 ) 26.1067 Tj
-5.2213 -446.1879 Td
(9994 ) 26.1067 Tj
-5.2213 -455.6813 Td
(9995 ) 26.1067 Tj
-5.2213 -465.1747 Td
(9996 ) 26.1067 Tj
-5.2213 -474.668 Td
(9997 ) 26.1067 Tj
-5.2213 -484.1614 Td
(9998 ) 26.1067 Tj
-5.2213 -493.6547 Td
(9999 ) 26.1067 Tj
-5.2213 -522.1348 Td
(Sheet 99) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 109 109
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/initcode.S  Page 1) 203.6319 Tj
-5.2213 -28.4801 Td
(10000 # Initial process execs /init.) 187.968 Tj
-5.2213 -37.9735 Td
(10001 ) 31.328 Tj
-5.2213 -47.4668 Td
(10002 #include "syscall.h") 135.7546 Tj
-5.2213 -56.9602 Td
(10003 #include "traps.h") 125.312 Tj
-5.2213 -66.4535 Td
(10004 ) 31.328 Tj
-5.2213 -75.9469 Td
(10005 # exec\(init, argv\)) 125.312 Tj
-5.2213 -85.4403 Td
(10006 .globl start) 93.984 Tj
-5.2213 -94.9336 Td
(10007 start:) 62.656 Tj
-5.2213 -104.427 Td
(10008   pushl $argv) 99.2053 Tj
-5.2213 -113.9203 Td
(10009   pushl $init) 99.2053 Tj
-5.2213 -123.4137 Td
(10010   pushl $0) 83.5413 Tj
-5.2213 -132.9071 Td
(10011   movl $SYS_exec, %eax) 146.1973 Tj
-5.2213 -142.4004 Td
(10012   int $T_SYSCALL) 114.8693 Tj
-5.2213 -151.8938 Td
(10013 ) 31.328 Tj
-5.2213 -161.3871 Td
(10014 # for\(;;\) exit\(\);) 120.0906 Tj
-5.2213 -170.8805 Td
(10015 exit:) 57.4347 Tj
-5.2213 -180.3739 Td
(10016   movl $SYS_exit, %eax) 146.1973 Tj
-5.2213 -189.8672 Td
(10017   int $T_SYSCALL) 114.8693 Tj
-5.2213 -199.3606 Td
(10018   jmp exit) 83.5413 Tj
-5.2213 -208.8539 Td
(10019 ) 31.328 Tj
-5.2213 -218.3473 Td
(10020 # char init[] = "/init\\0";) 167.0826 Tj
-5.2213 -227.8407 Td
(10021 init:) 57.4347 Tj
-5.2213 -237.334 Td
(10022   .string "/init\\0") 130.5333 Tj
-5.2213 -246.8274 Td
(10023 ) 31.328 Tj
-5.2213 -256.3207 Td
(10024 # char *argv[] = { init, 0 };) 182.7466 Tj
-5.2213 -265.8141 Td
(10025 .p2align 2) 83.5413 Tj
-5.2213 -275.3075 Td
(10026 argv:) 57.4347 Tj
-5.2213 -284.8008 Td
(10027   .long init) 93.984 Tj
-5.2213 -294.2942 Td
(10028   .long 0) 78.32 Tj
-5.2213 -303.7875 Td
(10029 ) 31.328 Tj
-5.2213 -313.2809 Td
(10030 ) 31.328 Tj
-5.2213 -322.7743 Td
(10031 ) 31.328 Tj
-5.2213 -332.2676 Td
(10032 ) 31.328 Tj
-5.2213 -341.761 Td
(10033 ) 31.328 Tj
-5.2213 -351.2543 Td
(10034 ) 31.328 Tj
-5.2213 -360.7477 Td
(10035 ) 31.328 Tj
-5.2213 -370.2411 Td
(10036 ) 31.328 Tj
-5.2213 -379.7344 Td
(10037 ) 31.328 Tj
-5.2213 -389.2278 Td
(10038 ) 31.328 Tj
-5.2213 -398.7211 Td
(10039 ) 31.328 Tj
-5.2213 -408.2145 Td
(10040 ) 31.328 Tj
-5.2213 -417.7079 Td
(10041 ) 31.328 Tj
-5.2213 -427.2012 Td
(10042 ) 31.328 Tj
-5.2213 -436.6946 Td
(10043 ) 31.328 Tj
-5.2213 -446.1879 Td
(10044 ) 31.328 Tj
-5.2213 -455.6813 Td
(10045 ) 31.328 Tj
-5.2213 -465.1747 Td
(10046 ) 31.328 Tj
-5.2213 -474.668 Td
(10047 ) 31.328 Tj
-5.2213 -484.1614 Td
(10048 ) 31.328 Tj
-5.2213 -493.6547 Td
(10049 ) 31.328 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/init.c  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(10050 // init: The initial user-level program) 234.9599 Tj
-5.2213 -37.9735 Td
(10051 ) 31.328 Tj
-5.2213 -47.4668 Td
(10052 #include "types.h") 125.312 Tj
-5.2213 -56.9602 Td
(10053 #include "stat.h") 120.0906 Tj
-5.2213 -66.4535 Td
(10054 #include "user.h") 120.0906 Tj
-5.2213 -75.9469 Td
(10055 #include "fcntl.h") 125.312 Tj
-5.2213 -85.4403 Td
(10056 ) 31.328 Tj
-5.2213 -94.9336 Td
(10057 char *sh_args[] = { "sh", 0 };) 187.968 Tj
-5.2213 -104.427 Td
(10058 ) 31.328 Tj
-5.2213 -113.9203 Td
(10059 int) 46.992 Tj
-5.2213 -123.4137 Td
(10060 main\(void\)) 83.5413 Tj
-5.2213 -132.9071 Td
(10061 {) 36.5493 Tj
-5.2213 -142.4004 Td
(10062   int pid, wpid;) 114.8693 Tj
-5.2213 -151.8938 Td
(10063 ) 31.328 Tj
-5.2213 -161.3871 Td
(10064   if\(open\("console", O_RDWR\) < 0\){) 208.8533 Tj
-5.2213 -170.8805 Td
(10065     mknod\("console", 1, 1\);) 172.304 Tj
-5.2213 -180.3739 Td
(10066     open\("console", O_RDWR\);) 177.5253 Tj
-5.2213 -189.8672 Td
(10067   }) 46.992 Tj
-5.2213 -199.3606 Td
(10068   dup\(0\);  // stdout) 135.7546 Tj
-5.2213 -208.8539 Td
(10069   dup\(0\);  // stderr) 135.7546 Tj
-5.2213 -218.3473 Td
(10070 ) 31.328 Tj
-5.2213 -227.8407 Td
(10071   for\(;;\){) 83.5413 Tj
-5.2213 -237.334 Td
(10072     printf\(1, "init: starting sh\\n"\);) 224.5173 Tj
-5.2213 -246.8274 Td
(10073     pid = fork\(\);) 120.0906 Tj
-5.2213 -256.3207 Td
(10074     if\(pid < 0\){) 114.8693 Tj
-5.2213 -265.8141 Td
(10075       printf\(1, "init: fork failed\\n"\);) 234.9599 Tj
-5.2213 -275.3075 Td
(10076       exit\(\);) 99.2053 Tj
-5.2213 -284.8008 Td
(10077     }) 57.4347 Tj
-5.2213 -294.2942 Td
(10078     if\(pid == 0\){) 120.0906 Tj
-5.2213 -303.7875 Td
(10079       exec\("sh", sh_args\);) 167.0826 Tj
-5.2213 -313.2809 Td
(10080       printf\(1, "init: exec sh failed\\n"\);) 250.6239 Tj
-5.2213 -322.7743 Td
(10081       exit\(\);) 99.2053 Tj
-5.2213 -332.2676 Td
(10082     }) 57.4347 Tj
-5.2213 -341.761 Td
(10083     while\(\(wpid=wait\(\)\) >= 0 && wpid != pid\)) 261.0666 Tj
-5.2213 -351.2543 Td
(10084     {) 57.4347 Tj
-5.2213 -360.7477 Td
(10085 #if 0) 57.4347 Tj
-5.2213 -370.2411 Td
(10086       printf\(1, "zombie!\\n"\);) 182.7466 Tj
-5.2213 -379.7344 Td
(10087 #endif) 62.656 Tj
-5.2213 -389.2278 Td
(10088     }) 57.4347 Tj
-5.2213 -398.7211 Td
(10089   }) 46.992 Tj
-5.2213 -408.2145 Td
(10090 }) 36.5493 Tj
-5.2213 -417.7079 Td
(10091 ) 31.328 Tj
-5.2213 -427.2012 Td
(10092 ) 31.328 Tj
-5.2213 -436.6946 Td
(10093 ) 31.328 Tj
-5.2213 -446.1879 Td
(10094 ) 31.328 Tj
-5.2213 -455.6813 Td
(10095 ) 31.328 Tj
-5.2213 -465.1747 Td
(10096 ) 31.328 Tj
-5.2213 -474.668 Td
(10097 ) 31.328 Tj
-5.2213 -484.1614 Td
(10098 ) 31.328 Tj
-5.2213 -493.6547 Td
(10099 ) 31.328 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 110 110
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/usys.S  Page 1) 182.7466 Tj
-5.2213 -28.4801 Td
(10100 #include "syscall.h") 135.7546 Tj
-5.2213 -37.9735 Td
(10101 #include "traps.h") 125.312 Tj
-5.2213 -47.4668 Td
(10102 ) 31.328 Tj
-5.2213 -56.9602 Td
(10103 #define STUB\(name\) \\) 135.7546 Tj
-5.2213 -66.4535 Td
(10104   .globl name; \\) 114.8693 Tj
-5.2213 -75.9469 Td
(10105   name: \\) 78.32 Tj
-5.2213 -85.4403 Td
(10106     movl $SYS_ ## name, %eax; \\) 193.1893 Tj
-5.2213 -94.9336 Td
(10107     int $T_SYSCALL; \\) 140.976 Tj
-5.2213 -104.427 Td
(10108     ret) 67.8773 Tj
-5.2213 -113.9203 Td
(10109 ) 31.328 Tj
-5.2213 -123.4137 Td
(10110 STUB\(fork\)) 83.5413 Tj
-5.2213 -132.9071 Td
(10111 STUB\(exit\)) 83.5413 Tj
-5.2213 -142.4004 Td
(10112 STUB\(wait\)) 83.5413 Tj
-5.2213 -151.8938 Td
(10113 STUB\(pipe\)) 83.5413 Tj
-5.2213 -161.3871 Td
(10114 STUB\(read\)) 83.5413 Tj
-5.2213 -170.8805 Td
(10115 STUB\(write\)) 88.7626 Tj
-5.2213 -180.3739 Td
(10116 STUB\(close\)) 88.7626 Tj
-5.2213 -189.8672 Td
(10117 STUB\(kill\)) 83.5413 Tj
-5.2213 -199.3606 Td
(10118 STUB\(exec\)) 83.5413 Tj
-5.2213 -208.8539 Td
(10119 STUB\(open\)) 83.5413 Tj
-5.2213 -218.3473 Td
(10120 STUB\(mknod\)) 88.7626 Tj
-5.2213 -227.8407 Td
(10121 STUB\(unlink\)) 93.984 Tj
-5.2213 -237.334 Td
(10122 STUB\(fstat\)) 88.7626 Tj
-5.2213 -246.8274 Td
(10123 STUB\(link\)) 83.5413 Tj
-5.2213 -256.3207 Td
(10124 STUB\(mkdir\)) 88.7626 Tj
-5.2213 -265.8141 Td
(10125 STUB\(chdir\)) 88.7626 Tj
-5.2213 -275.3075 Td
(10126 STUB\(dup\)) 78.32 Tj
-5.2213 -284.8008 Td
(10127 STUB\(getpid\)) 93.984 Tj
-5.2213 -294.2942 Td
(10128 STUB\(sbrk\)) 83.5413 Tj
-5.2213 -303.7875 Td
(10129 STUB\(sleep\)) 88.7626 Tj
-5.2213 -313.2809 Td
(10130 STUB\(upmsec\)) 93.984 Tj
-5.2213 -322.7743 Td
(10131 STUB\(socket\)) 93.984 Tj
-5.2213 -332.2676 Td
(10132 STUB\(bind\)) 83.5413 Tj
-5.2213 -341.761 Td
(10133 STUB\(listen\)) 93.984 Tj
-5.2213 -351.2543 Td
(10134 STUB\(accept\)) 93.984 Tj
-5.2213 -360.7477 Td
(10135 STUB\(recv\)) 83.5413 Tj
-5.2213 -370.2411 Td
(10136 STUB\(recvfrom\)) 104.4266 Tj
-5.2213 -379.7344 Td
(10137 STUB\(send\)) 83.5413 Tj
-5.2213 -389.2278 Td
(10138 STUB\(sendto\)) 93.984 Tj
-5.2213 -398.7211 Td
(10139 STUB\(shutdown\)) 104.4266 Tj
-5.2213 -408.2145 Td
(10140 STUB\(getsockopt\)) 114.8693 Tj
-5.2213 -417.7079 Td
(10141 STUB\(setsockopt\)) 114.8693 Tj
-5.2213 -427.2012 Td
(10142 STUB\(sockclose\)) 109.648 Tj
-5.2213 -436.6946 Td
(10143 STUB\(connect\)) 99.2053 Tj
-5.2213 -446.1879 Td
(10144 STUB\(getpeername\)) 120.0906 Tj
-5.2213 -455.6813 Td
(10145 STUB\(getsockname\)) 120.0906 Tj
-5.2213 -465.1747 Td
(10146 ) 31.328 Tj
-5.2213 -474.668 Td
(10147 ) 31.328 Tj
-5.2213 -484.1614 Td
(10148 ) 31.328 Tj
-5.2213 -493.6547 Td
(10149 ) 31.328 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 1) 172.304 Tj
-5.2213 -28.4801 Td
(10150 // Shell.) 78.32 Tj
-5.2213 -37.9735 Td
(10151 ) 31.328 Tj
-5.2213 -47.4668 Td
(10152 #include "types.h") 125.312 Tj
-5.2213 -56.9602 Td
(10153 #include "user.h") 120.0906 Tj
-5.2213 -66.4535 Td
(10154 #include "fcntl.h") 125.312 Tj
-5.2213 -75.9469 Td
(10155 ) 31.328 Tj
-5.2213 -85.4403 Td
(10156 // Parsed command representation) 198.4106 Tj
-5.2213 -94.9336 Td
(10157 #define EXEC  1) 109.648 Tj
-5.2213 -104.427 Td
(10158 #define REDIR 2) 109.648 Tj
-5.2213 -113.9203 Td
(10159 #define PIPE  3) 109.648 Tj
-5.2213 -123.4137 Td
(10160 #define LIST  4) 109.648 Tj
-5.2213 -132.9071 Td
(10161 #define BACK  5) 109.648 Tj
-5.2213 -142.4004 Td
(10162 ) 31.328 Tj
-5.2213 -151.8938 Td
(10163 #define MAXARGS 10) 125.312 Tj
-5.2213 -161.3871 Td
(10164 ) 31.328 Tj
-5.2213 -170.8805 Td
(10165 struct cmd {) 93.984 Tj
-5.2213 -180.3739 Td
(10166   int type;) 88.7626 Tj
-5.2213 -189.8672 Td
(10167 };) 41.7707 Tj
-5.2213 -199.3606 Td
(10168 ) 31.328 Tj
-5.2213 -208.8539 Td
(10169 struct execcmd {) 114.8693 Tj
-5.2213 -218.3473 Td
(10170   int type;) 88.7626 Tj
-5.2213 -227.8407 Td
(10171   char *argv[MAXARGS];) 146.1973 Tj
-5.2213 -237.334 Td
(10172   char *eargv[MAXARGS];) 151.4186 Tj
-5.2213 -246.8274 Td
(10173 };) 41.7707 Tj
-5.2213 -256.3207 Td
(10174 ) 31.328 Tj
-5.2213 -265.8141 Td
(10175 struct redircmd {) 120.0906 Tj
-5.2213 -275.3075 Td
(10176   int type;) 88.7626 Tj
-5.2213 -284.8008 Td
(10177   struct cmd *cmd;) 125.312 Tj
-5.2213 -294.2942 Td
(10178   char *file;) 99.2053 Tj
-5.2213 -303.7875 Td
(10179   char *efile;) 104.4266 Tj
-5.2213 -313.2809 Td
(10180   int mode;) 88.7626 Tj
-5.2213 -322.7743 Td
(10181   int fd;) 78.32 Tj
-5.2213 -332.2676 Td
(10182 };) 41.7707 Tj
-5.2213 -341.761 Td
(10183 ) 31.328 Tj
-5.2213 -351.2543 Td
(10184 struct pipecmd {) 114.8693 Tj
-5.2213 -360.7477 Td
(10185   int type;) 88.7626 Tj
-5.2213 -370.2411 Td
(10186   struct cmd *left;) 130.5333 Tj
-5.2213 -379.7344 Td
(10187   struct cmd *right;) 135.7546 Tj
-5.2213 -389.2278 Td
(10188 };) 41.7707 Tj
-5.2213 -398.7211 Td
(10189 ) 31.328 Tj
-5.2213 -408.2145 Td
(10190 struct listcmd {) 114.8693 Tj
-5.2213 -417.7079 Td
(10191   int type;) 88.7626 Tj
-5.2213 -427.2012 Td
(10192   struct cmd *left;) 130.5333 Tj
-5.2213 -436.6946 Td
(10193   struct cmd *right;) 135.7546 Tj
-5.2213 -446.1879 Td
(10194 };) 41.7707 Tj
-5.2213 -455.6813 Td
(10195 ) 31.328 Tj
-5.2213 -465.1747 Td
(10196 struct backcmd {) 114.8693 Tj
-5.2213 -474.668 Td
(10197   int type;) 88.7626 Tj
-5.2213 -484.1614 Td
(10198   struct cmd *cmd;) 125.312 Tj
-5.2213 -493.6547 Td
(10199 };) 41.7707 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 111 111
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 2) 172.304 Tj
-5.2213 -28.4801 Td
(10200 int fork1\(void\);  // Fork but panics on failure.) 281.9519 Tj
-5.2213 -37.9735 Td
(10201 void panic\(char*\);) 125.312 Tj
-5.2213 -47.4668 Td
(10202 struct cmd *parsecmd\(char*\);) 177.5253 Tj
-5.2213 -56.9602 Td
(10203 ) 31.328 Tj
-5.2213 -66.4535 Td
(10204 // Execute cmd.  Never returns.) 193.1893 Tj
-5.2213 -75.9469 Td
(10205 void) 52.2133 Tj
-5.2213 -85.4403 Td
(10206 runcmd\(struct cmd *cmd\)) 151.4186 Tj
-5.2213 -94.9336 Td
(10207 {) 36.5493 Tj
-5.2213 -104.427 Td
(10208   int p[2];) 88.7626 Tj
-5.2213 -113.9203 Td
(10209   struct backcmd *bcmd;) 151.4186 Tj
-5.2213 -123.4137 Td
(10210   struct execcmd *ecmd;) 151.4186 Tj
-5.2213 -132.9071 Td
(10211   struct listcmd *lcmd;) 151.4186 Tj
-5.2213 -142.4004 Td
(10212   struct pipecmd *pcmd;) 151.4186 Tj
-5.2213 -151.8938 Td
(10213   struct redircmd *rcmd;) 156.64 Tj
-5.2213 -161.3871 Td
(10214 ) 31.328 Tj
-5.2213 -170.8805 Td
(10215   if\(cmd == 0\)) 104.4266 Tj
-5.2213 -180.3739 Td
(10216     exit\(\);) 88.7626 Tj
-5.2213 -189.8672 Td
(10217 ) 31.328 Tj
-5.2213 -199.3606 Td
(10218   switch\(cmd->type\){) 135.7546 Tj
-5.2213 -208.8539 Td
(10219   default:) 83.5413 Tj
-5.2213 -218.3473 Td
(10220     panic\("runcmd"\);) 135.7546 Tj
-5.2213 -227.8407 Td
(10221 ) 31.328 Tj
-5.2213 -237.334 Td
(10222   case EXEC:) 93.984 Tj
-5.2213 -246.8274 Td
(10223     ecmd = \(struct execcmd*\)cmd;) 198.4106 Tj
-5.2213 -256.3207 Td
(10224     if\(ecmd->argv[0] == 0\)) 167.0826 Tj
-5.2213 -265.8141 Td
(10225       exit\(\);) 99.2053 Tj
-5.2213 -275.3075 Td
(10226     exec\(ecmd->argv[0], ecmd->argv\);) 219.2959 Tj
-5.2213 -284.8008 Td
(10227     printf\(2, "exec %s failed\\n", ecmd->argv[0]\);) 287.1733 Tj
-5.2213 -294.2942 Td
(10228     break;) 83.5413 Tj
-5.2213 -303.7875 Td
(10229 ) 31.328 Tj
-5.2213 -313.2809 Td
(10230   case REDIR:) 99.2053 Tj
-5.2213 -322.7743 Td
(10231     rcmd = \(struct redircmd*\)cmd;) 203.6319 Tj
-5.2213 -332.2676 Td
(10232     close\(rcmd->fd\);) 135.7546 Tj
-5.2213 -341.761 Td
(10233     if\(open\(rcmd->file, rcmd->mode\) < 0\){) 245.4026 Tj
-5.2213 -351.2543 Td
(10234       printf\(2, "open %s failed\\n", rcmd->file\);) 281.9519 Tj
-5.2213 -360.7477 Td
(10235       exit\(\);) 99.2053 Tj
-5.2213 -370.2411 Td
(10236     }) 57.4347 Tj
-5.2213 -379.7344 Td
(10237     runcmd\(rcmd->cmd\);) 146.1973 Tj
-5.2213 -389.2278 Td
(10238     break;) 83.5413 Tj
-5.2213 -398.7211 Td
(10239 ) 31.328 Tj
-5.2213 -408.2145 Td
(10240   case LIST:) 93.984 Tj
-5.2213 -417.7079 Td
(10241     lcmd = \(struct listcmd*\)cmd;) 198.4106 Tj
-5.2213 -427.2012 Td
(10242     if\(fork1\(\) == 0\)) 135.7546 Tj
-5.2213 -436.6946 Td
(10243       runcmd\(lcmd->left\);) 161.8613 Tj
-5.2213 -446.1879 Td
(10244     wait\(\);) 88.7626 Tj
-5.2213 -455.6813 Td
(10245     runcmd\(lcmd->right\);) 156.64 Tj
-5.2213 -465.1747 Td
(10246     break;) 83.5413 Tj
-5.2213 -474.668 Td
(10247 ) 31.328 Tj
-5.2213 -484.1614 Td
(10248 ) 31.328 Tj
-5.2213 -493.6547 Td
(10249 ) 31.328 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 3) 172.304 Tj
-5.2213 -28.4801 Td
(10250   case PIPE:) 93.984 Tj
-5.2213 -37.9735 Td
(10251     pcmd = \(struct pipecmd*\)cmd;) 198.4106 Tj
-5.2213 -47.4668 Td
(10252     if\(pipe\(p\) < 0\)) 130.5333 Tj
-5.2213 -56.9602 Td
(10253       panic\("pipe"\);) 135.7546 Tj
-5.2213 -66.4535 Td
(10254     if\(fork1\(\) == 0\){) 140.976 Tj
-5.2213 -75.9469 Td
(10255       close\(1\);) 109.648 Tj
-5.2213 -85.4403 Td
(10256       dup\(p[1]\);) 114.8693 Tj
-5.2213 -94.9336 Td
(10257       close\(p[0]\);) 125.312 Tj
-5.2213 -104.427 Td
(10258       close\(p[1]\);) 125.312 Tj
-5.2213 -113.9203 Td
(10259       runcmd\(pcmd->left\);) 161.8613 Tj
-5.2213 -123.4137 Td
(10260     }) 57.4347 Tj
-5.2213 -132.9071 Td
(10261     if\(fork1\(\) == 0\){) 140.976 Tj
-5.2213 -142.4004 Td
(10262       close\(0\);) 109.648 Tj
-5.2213 -151.8938 Td
(10263       dup\(p[0]\);) 114.8693 Tj
-5.2213 -161.3871 Td
(10264       close\(p[0]\);) 125.312 Tj
-5.2213 -170.8805 Td
(10265       close\(p[1]\);) 125.312 Tj
-5.2213 -180.3739 Td
(10266       runcmd\(pcmd->right\);) 167.0826 Tj
-5.2213 -189.8672 Td
(10267     }) 57.4347 Tj
-5.2213 -199.3606 Td
(10268     close\(p[0]\);) 114.8693 Tj
-5.2213 -208.8539 Td
(10269     close\(p[1]\);) 114.8693 Tj
-5.2213 -218.3473 Td
(10270     wait\(\);) 88.7626 Tj
-5.2213 -227.8407 Td
(10271     wait\(\);) 88.7626 Tj
-5.2213 -237.334 Td
(10272     break;) 83.5413 Tj
-5.2213 -246.8274 Td
(10273 ) 31.328 Tj
-5.2213 -256.3207 Td
(10274   case BACK:) 93.984 Tj
-5.2213 -265.8141 Td
(10275     bcmd = \(struct backcmd*\)cmd;) 198.4106 Tj
-5.2213 -275.3075 Td
(10276     if\(fork1\(\) == 0\)) 135.7546 Tj
-5.2213 -284.8008 Td
(10277       runcmd\(bcmd->cmd\);) 156.64 Tj
-5.2213 -294.2942 Td
(10278     break;) 83.5413 Tj
-5.2213 -303.7875 Td
(10279   }) 46.992 Tj
-5.2213 -313.2809 Td
(10280   exit\(\);) 78.32 Tj
-5.2213 -322.7743 Td
(10281 }) 36.5493 Tj
-5.2213 -332.2676 Td
(10282 ) 31.328 Tj
-5.2213 -341.761 Td
(10283 int) 46.992 Tj
-5.2213 -351.2543 Td
(10284 getcmd\(char *buf, int nbuf\)) 172.304 Tj
-5.2213 -360.7477 Td
(10285 {) 36.5493 Tj
-5.2213 -370.2411 Td
(10286   printf\(2, "$ "\);) 125.312 Tj
-5.2213 -379.7344 Td
(10287   memset\(buf, 0, nbuf\);) 151.4186 Tj
-5.2213 -389.2278 Td
(10288   gets\(buf, nbuf\);) 125.312 Tj
-5.2213 -398.7211 Td
(10289   if\(buf[0] == 0\) // EOF) 156.64 Tj
-5.2213 -408.2145 Td
(10290     return -1;) 104.4266 Tj
-5.2213 -417.7079 Td
(10291   return 0;) 88.7626 Tj
-5.2213 -427.2012 Td
(10292 }) 36.5493 Tj
-5.2213 -436.6946 Td
(10293 ) 31.328 Tj
-5.2213 -446.1879 Td
(10294 ) 31.328 Tj
-5.2213 -455.6813 Td
(10295 ) 31.328 Tj
-5.2213 -465.1747 Td
(10296 ) 31.328 Tj
-5.2213 -474.668 Td
(10297 ) 31.328 Tj
-5.2213 -484.1614 Td
(10298 ) 31.328 Tj
-5.2213 -493.6547 Td
(10299 ) 31.328 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 112 112
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 4) 172.304 Tj
-5.2213 -28.4801 Td
(10300 int) 46.992 Tj
-5.2213 -37.9735 Td
(10301 main\(void\)) 83.5413 Tj
-5.2213 -47.4668 Td
(10302 {) 36.5493 Tj
-5.2213 -56.9602 Td
(10303   static char buf[100];) 151.4186 Tj
-5.2213 -66.4535 Td
(10304   int fd;) 78.32 Tj
-5.2213 -75.9469 Td
(10305 ) 31.328 Tj
-5.2213 -85.4403 Td
(10306   // Assumes three file descriptors open.) 245.4026 Tj
-5.2213 -94.9336 Td
(10307   while\(\(fd = open\("console", O_RDWR\)\) >= 0\){) 266.2879 Tj
-5.2213 -104.427 Td
(10308     if\(fd >= 3\){) 114.8693 Tj
-5.2213 -113.9203 Td
(10309       close\(fd\);) 114.8693 Tj
-5.2213 -123.4137 Td
(10310       break;) 93.984 Tj
-5.2213 -132.9071 Td
(10311     }) 57.4347 Tj
-5.2213 -142.4004 Td
(10312   }) 46.992 Tj
-5.2213 -151.8938 Td
(10313 ) 31.328 Tj
-5.2213 -161.3871 Td
(10314   // Read and run input commands.) 203.6319 Tj
-5.2213 -170.8805 Td
(10315   while\(getcmd\(buf, sizeof\(buf\)\) >= 0\){) 234.9599 Tj
-5.2213 -180.3739 Td
(10316     if\(buf[0] == 'c' && buf[1] == 'd' && buf[2] == ' '\)\
{) 323.7226 Tj
-5.2213 -189.8672 Td
(10317       // Clumsy but will have to do for now.) 261.0666 Tj
-5.2213 -199.3606 Td
(10318       // Chdir has no effect on the parent if run in the \
child.) 360.2719 Tj
-5.2213 -208.8539 Td
(10319       buf[strlen\(buf\)-1] = 0;  // chop \\n) 245.4026 Tj
-5.2213 -218.3473 Td
(10320       if\(chdir\(buf+3\) < 0\)) 167.0826 Tj
-5.2213 -227.8407 Td
(10321         printf\(2, "cannot cd %s\\n", buf+3\);) 255.8453 Tj
-5.2213 -237.334 Td
(10322       continue;) 109.648 Tj
-5.2213 -246.8274 Td
(10323     }) 57.4347 Tj
-5.2213 -256.3207 Td
(10324     if\(fork1\(\) == 0\)) 135.7546 Tj
-5.2213 -265.8141 Td
(10325       runcmd\(parsecmd\(buf\)\);) 177.5253 Tj
-5.2213 -275.3075 Td
(10326     wait\(\);) 88.7626 Tj
-5.2213 -284.8008 Td
(10327   }) 46.992 Tj
-5.2213 -294.2942 Td
(10328   exit\(\);) 78.32 Tj
-5.2213 -303.7875 Td
(10329 }) 36.5493 Tj
-5.2213 -313.2809 Td
(10330 ) 31.328 Tj
-5.2213 -322.7743 Td
(10331 void) 52.2133 Tj
-5.2213 -332.2676 Td
(10332 panic\(char *s\)) 104.4266 Tj
-5.2213 -341.761 Td
(10333 {) 36.5493 Tj
-5.2213 -351.2543 Td
(10334   printf\(2, "%s\\n", s\);) 151.4186 Tj
-5.2213 -360.7477 Td
(10335   exit\(\);) 78.32 Tj
-5.2213 -370.2411 Td
(10336 }) 36.5493 Tj
-5.2213 -379.7344 Td
(10337 ) 31.328 Tj
-5.2213 -389.2278 Td
(10338 int) 46.992 Tj
-5.2213 -398.7211 Td
(10339 fork1\(void\)) 88.7626 Tj
-5.2213 -408.2145 Td
(10340 {) 36.5493 Tj
-5.2213 -417.7079 Td
(10341   int pid;) 83.5413 Tj
-5.2213 -427.2012 Td
(10342 ) 31.328 Tj
-5.2213 -436.6946 Td
(10343   pid = fork\(\);) 109.648 Tj
-5.2213 -446.1879 Td
(10344   if\(pid == -1\)) 109.648 Tj
-5.2213 -455.6813 Td
(10345     panic\("fork"\);) 125.312 Tj
-5.2213 -465.1747 Td
(10346   return pid;) 99.2053 Tj
-5.2213 -474.668 Td
(10347 }) 36.5493 Tj
-5.2213 -484.1614 Td
(10348 ) 31.328 Tj
-5.2213 -493.6547 Td
(10349 ) 31.328 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 5) 172.304 Tj
-5.2213 -28.4801 Td
(10350 // Constructors) 109.648 Tj
-5.2213 -37.9735 Td
(10351 ) 31.328 Tj
-5.2213 -47.4668 Td
(10352 struct cmd*) 88.7626 Tj
-5.2213 -56.9602 Td
(10353 execcmd\(void\)) 99.2053 Tj
-5.2213 -66.4535 Td
(10354 {) 36.5493 Tj
-5.2213 -75.9469 Td
(10355   struct execcmd *cmd;) 146.1973 Tj
-5.2213 -85.4403 Td
(10356 ) 31.328 Tj
-5.2213 -94.9336 Td
(10357   cmd = malloc\(sizeof\(*cmd\)\);) 182.7466 Tj
-5.2213 -104.427 Td
(10358   memset\(cmd, 0, sizeof\(*cmd\)\);) 193.1893 Tj
-5.2213 -113.9203 Td
(10359   cmd->type = EXEC;) 130.5333 Tj
-5.2213 -123.4137 Td
(10360   return \(struct cmd*\)cmd;) 167.0826 Tj
-5.2213 -132.9071 Td
(10361 }) 36.5493 Tj
-5.2213 -142.4004 Td
(10362 ) 31.328 Tj
-5.2213 -151.8938 Td
(10363 struct cmd*) 88.7626 Tj
-5.2213 -161.3871 Td
(10364 redircmd\(struct cmd *subcmd, char *file, char *efile, in\
t mode, int fd\)) 402.0426 Tj
-5.2213 -170.8805 Td
(10365 {) 36.5493 Tj
-5.2213 -180.3739 Td
(10366   struct redircmd *cmd;) 151.4186 Tj
-5.2213 -189.8672 Td
(10367 ) 31.328 Tj
-5.2213 -199.3606 Td
(10368   cmd = malloc\(sizeof\(*cmd\)\);) 182.7466 Tj
-5.2213 -208.8539 Td
(10369   memset\(cmd, 0, sizeof\(*cmd\)\);) 193.1893 Tj
-5.2213 -218.3473 Td
(10370   cmd->type = REDIR;) 135.7546 Tj
-5.2213 -227.8407 Td
(10371   cmd->cmd = subcmd;) 135.7546 Tj
-5.2213 -237.334 Td
(10372   cmd->file = file;) 130.5333 Tj
-5.2213 -246.8274 Td
(10373   cmd->efile = efile;) 140.976 Tj
-5.2213 -256.3207 Td
(10374   cmd->mode = mode;) 130.5333 Tj
-5.2213 -265.8141 Td
(10375   cmd->fd = fd;) 109.648 Tj
-5.2213 -275.3075 Td
(10376   return \(struct cmd*\)cmd;) 167.0826 Tj
-5.2213 -284.8008 Td
(10377 }) 36.5493 Tj
-5.2213 -294.2942 Td
(10378 ) 31.328 Tj
-5.2213 -303.7875 Td
(10379 struct cmd*) 88.7626 Tj
-5.2213 -313.2809 Td
(10380 pipecmd\(struct cmd *left, struct cmd *right\)) 261.0666 Tj
-5.2213 -322.7743 Td
(10381 {) 36.5493 Tj
-5.2213 -332.2676 Td
(10382   struct pipecmd *cmd;) 146.1973 Tj
-5.2213 -341.761 Td
(10383 ) 31.328 Tj
-5.2213 -351.2543 Td
(10384   cmd = malloc\(sizeof\(*cmd\)\);) 182.7466 Tj
-5.2213 -360.7477 Td
(10385   memset\(cmd, 0, sizeof\(*cmd\)\);) 193.1893 Tj
-5.2213 -370.2411 Td
(10386   cmd->type = PIPE;) 130.5333 Tj
-5.2213 -379.7344 Td
(10387   cmd->left = left;) 130.5333 Tj
-5.2213 -389.2278 Td
(10388   cmd->right = right;) 140.976 Tj
-5.2213 -398.7211 Td
(10389   return \(struct cmd*\)cmd;) 167.0826 Tj
-5.2213 -408.2145 Td
(10390 }) 36.5493 Tj
-5.2213 -417.7079 Td
(10391 ) 31.328 Tj
-5.2213 -427.2012 Td
(10392 ) 31.328 Tj
-5.2213 -436.6946 Td
(10393 ) 31.328 Tj
-5.2213 -446.1879 Td
(10394 ) 31.328 Tj
-5.2213 -455.6813 Td
(10395 ) 31.328 Tj
-5.2213 -465.1747 Td
(10396 ) 31.328 Tj
-5.2213 -474.668 Td
(10397 ) 31.328 Tj
-5.2213 -484.1614 Td
(10398 ) 31.328 Tj
-5.2213 -493.6547 Td
(10399 ) 31.328 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 113 113
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 6) 172.304 Tj
-5.2213 -28.4801 Td
(10400 struct cmd*) 88.7626 Tj
-5.2213 -37.9735 Td
(10401 listcmd\(struct cmd *left, struct cmd *right\)) 261.0666 Tj
-5.2213 -47.4668 Td
(10402 {) 36.5493 Tj
-5.2213 -56.9602 Td
(10403   struct listcmd *cmd;) 146.1973 Tj
-5.2213 -66.4535 Td
(10404 ) 31.328 Tj
-5.2213 -75.9469 Td
(10405   cmd = malloc\(sizeof\(*cmd\)\);) 182.7466 Tj
-5.2213 -85.4403 Td
(10406   memset\(cmd, 0, sizeof\(*cmd\)\);) 193.1893 Tj
-5.2213 -94.9336 Td
(10407   cmd->type = LIST;) 130.5333 Tj
-5.2213 -104.427 Td
(10408   cmd->left = left;) 130.5333 Tj
-5.2213 -113.9203 Td
(10409   cmd->right = right;) 140.976 Tj
-5.2213 -123.4137 Td
(10410   return \(struct cmd*\)cmd;) 167.0826 Tj
-5.2213 -132.9071 Td
(10411 }) 36.5493 Tj
-5.2213 -142.4004 Td
(10412 ) 31.328 Tj
-5.2213 -151.8938 Td
(10413 struct cmd*) 88.7626 Tj
-5.2213 -161.3871 Td
(10414 backcmd\(struct cmd *subcmd\)) 172.304 Tj
-5.2213 -170.8805 Td
(10415 {) 36.5493 Tj
-5.2213 -180.3739 Td
(10416   struct backcmd *cmd;) 146.1973 Tj
-5.2213 -189.8672 Td
(10417 ) 31.328 Tj
-5.2213 -199.3606 Td
(10418   cmd = malloc\(sizeof\(*cmd\)\);) 182.7466 Tj
-5.2213 -208.8539 Td
(10419   memset\(cmd, 0, sizeof\(*cmd\)\);) 193.1893 Tj
-5.2213 -218.3473 Td
(10420   cmd->type = BACK;) 130.5333 Tj
-5.2213 -227.8407 Td
(10421   cmd->cmd = subcmd;) 135.7546 Tj
-5.2213 -237.334 Td
(10422   return \(struct cmd*\)cmd;) 167.0826 Tj
-5.2213 -246.8274 Td
(10423 }) 36.5493 Tj
-5.2213 -256.3207 Td
(10424 // Parsing) 83.5413 Tj
-5.2213 -265.8141 Td
(10425 ) 31.328 Tj
-5.2213 -275.3075 Td
(10426 char whitespace[] = " \\t\\r\\n\\v";) 198.4106 Tj
-5.2213 -284.8008 Td
(10427 char symbols[] = "<|>&;\(\)";) 172.304 Tj
-5.2213 -294.2942 Td
(10428 ) 31.328 Tj
-5.2213 -303.7875 Td
(10429 int) 46.992 Tj
-5.2213 -313.2809 Td
(10430 gettoken\(char **ps, char *es, char **q, char **eq\)) 292.3946 Tj
-5.2213 -322.7743 Td
(10431 {) 36.5493 Tj
-5.2213 -332.2676 Td
(10432   char *s;) 83.5413 Tj
-5.2213 -341.761 Td
(10433   int ret;) 83.5413 Tj
-5.2213 -351.2543 Td
(10434 ) 31.328 Tj
-5.2213 -360.7477 Td
(10435   s = *ps;) 83.5413 Tj
-5.2213 -370.2411 Td
(10436   while\(s < es && strchr\(whitespace, *s\)\)) 245.4026 Tj
-5.2213 -379.7344 Td
(10437     s++;) 73.0986 Tj
-5.2213 -389.2278 Td
(10438   if\(q\)) 67.8773 Tj
-5.2213 -398.7211 Td
(10439     *q = s;) 88.7626 Tj
-5.2213 -408.2145 Td
(10440   ret = *s;) 88.7626 Tj
-5.2213 -417.7079 Td
(10441   switch\(*s\){) 99.2053 Tj
-5.2213 -427.2012 Td
(10442   case 0:) 78.32 Tj
-5.2213 -436.6946 Td
(10443     break;) 83.5413 Tj
-5.2213 -446.1879 Td
(10444   case '|':) 88.7626 Tj
-5.2213 -455.6813 Td
(10445   case '\(':) 88.7626 Tj
-5.2213 -465.1747 Td
(10446   case '\)':) 88.7626 Tj
-5.2213 -474.668 Td
(10447   case ';':) 88.7626 Tj
-5.2213 -484.1614 Td
(10448   case '&':) 88.7626 Tj
-5.2213 -493.6547 Td
(10449   case '<':) 88.7626 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 7) 172.304 Tj
-5.2213 -28.4801 Td
(10450     s++;) 73.0986 Tj
-5.2213 -37.9735 Td
(10451     break;) 83.5413 Tj
-5.2213 -47.4668 Td
(10452   case '>':) 88.7626 Tj
-5.2213 -56.9602 Td
(10453     s++;) 73.0986 Tj
-5.2213 -66.4535 Td
(10454     if\(*s == '>'\){) 125.312 Tj
-5.2213 -75.9469 Td
(10455       ret = '+';) 114.8693 Tj
-5.2213 -85.4403 Td
(10456       s++;) 83.5413 Tj
-5.2213 -94.9336 Td
(10457     }) 57.4347 Tj
-5.2213 -104.427 Td
(10458     break;) 83.5413 Tj
-5.2213 -113.9203 Td
(10459   default:) 83.5413 Tj
-5.2213 -123.4137 Td
(10460     ret = 'a';) 104.4266 Tj
-5.2213 -132.9071 Td
(10461     while\(s < es && !strchr\(whitespace, *s\) && !strchr\
\(symbols, *s\)\)) 386.3786 Tj
-5.2213 -142.4004 Td
(10462       s++;) 83.5413 Tj
-5.2213 -151.8938 Td
(10463     break;) 83.5413 Tj
-5.2213 -161.3871 Td
(10464   }) 46.992 Tj
-5.2213 -170.8805 Td
(10465   if\(eq\)) 73.0986 Tj
-5.2213 -180.3739 Td
(10466     *eq = s;) 93.984 Tj
-5.2213 -189.8672 Td
(10467 ) 31.328 Tj
-5.2213 -199.3606 Td
(10468   while\(s < es && strchr\(whitespace, *s\)\)) 245.4026 Tj
-5.2213 -208.8539 Td
(10469     s++;) 73.0986 Tj
-5.2213 -218.3473 Td
(10470   *ps = s;) 83.5413 Tj
-5.2213 -227.8407 Td
(10471   return ret;) 99.2053 Tj
-5.2213 -237.334 Td
(10472 }) 36.5493 Tj
-5.2213 -246.8274 Td
(10473 ) 31.328 Tj
-5.2213 -256.3207 Td
(10474 int) 46.992 Tj
-5.2213 -265.8141 Td
(10475 peek\(char **ps, char *es, char *toks\)) 224.5173 Tj
-5.2213 -275.3075 Td
(10476 {) 36.5493 Tj
-5.2213 -284.8008 Td
(10477   char *s;) 83.5413 Tj
-5.2213 -294.2942 Td
(10478 ) 31.328 Tj
-5.2213 -303.7875 Td
(10479   s = *ps;) 83.5413 Tj
-5.2213 -313.2809 Td
(10480   while\(s < es && strchr\(whitespace, *s\)\)) 245.4026 Tj
-5.2213 -322.7743 Td
(10481     s++;) 73.0986 Tj
-5.2213 -332.2676 Td
(10482   *ps = s;) 83.5413 Tj
-5.2213 -341.761 Td
(10483   return *s && strchr\(toks, *s\);) 198.4106 Tj
-5.2213 -351.2543 Td
(10484 }) 36.5493 Tj
-5.2213 -360.7477 Td
(10485 ) 31.328 Tj
-5.2213 -370.2411 Td
(10486 ) 31.328 Tj
-5.2213 -379.7344 Td
(10487 ) 31.328 Tj
-5.2213 -389.2278 Td
(10488 ) 31.328 Tj
-5.2213 -398.7211 Td
(10489 ) 31.328 Tj
-5.2213 -408.2145 Td
(10490 ) 31.328 Tj
-5.2213 -417.7079 Td
(10491 ) 31.328 Tj
-5.2213 -427.2012 Td
(10492 ) 31.328 Tj
-5.2213 -436.6946 Td
(10493 ) 31.328 Tj
-5.2213 -446.1879 Td
(10494 ) 31.328 Tj
-5.2213 -455.6813 Td
(10495 ) 31.328 Tj
-5.2213 -465.1747 Td
(10496 ) 31.328 Tj
-5.2213 -474.668 Td
(10497 ) 31.328 Tj
-5.2213 -484.1614 Td
(10498 ) 31.328 Tj
-5.2213 -493.6547 Td
(10499 ) 31.328 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 114 114
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 8) 172.304 Tj
-5.2213 -28.4801 Td
(10500 struct cmd *parseline\(char**, char*\);) 224.5173 Tj
-5.2213 -37.9735 Td
(10501 struct cmd *parsepipe\(char**, char*\);) 224.5173 Tj
-5.2213 -47.4668 Td
(10502 struct cmd *parseexec\(char**, char*\);) 224.5173 Tj
-5.2213 -56.9602 Td
(10503 struct cmd *nulterminate\(struct cmd*\);) 229.7386 Tj
-5.2213 -66.4535 Td
(10504 ) 31.328 Tj
-5.2213 -75.9469 Td
(10505 struct cmd*) 88.7626 Tj
-5.2213 -85.4403 Td
(10506 parsecmd\(char *s\)) 120.0906 Tj
-5.2213 -94.9336 Td
(10507 {) 36.5493 Tj
-5.2213 -104.427 Td
(10508   char *es;) 88.7626 Tj
-5.2213 -113.9203 Td
(10509   struct cmd *cmd;) 125.312 Tj
-5.2213 -123.4137 Td
(10510 ) 31.328 Tj
-5.2213 -132.9071 Td
(10511   es = s + strlen\(s\);) 140.976 Tj
-5.2213 -142.4004 Td
(10512   cmd = parseline\(&s, es\);) 167.0826 Tj
-5.2213 -151.8938 Td
(10513   peek\(&s, es, ""\);) 130.5333 Tj
-5.2213 -161.3871 Td
(10514   if\(s != es\){) 104.4266 Tj
-5.2213 -170.8805 Td
(10515     printf\(2, "leftovers: %s\\n", s\);) 219.2959 Tj
-5.2213 -180.3739 Td
(10516     panic\("syntax"\);) 135.7546 Tj
-5.2213 -189.8672 Td
(10517   }) 46.992 Tj
-5.2213 -199.3606 Td
(10518   nulterminate\(cmd\);) 135.7546 Tj
-5.2213 -208.8539 Td
(10519   return cmd;) 99.2053 Tj
-5.2213 -218.3473 Td
(10520 }) 36.5493 Tj
-5.2213 -227.8407 Td
(10521 ) 31.328 Tj
-5.2213 -237.334 Td
(10522 struct cmd*) 88.7626 Tj
-5.2213 -246.8274 Td
(10523 parseline\(char **ps, char *es\)) 187.968 Tj
-5.2213 -256.3207 Td
(10524 {) 36.5493 Tj
-5.2213 -265.8141 Td
(10525   struct cmd *cmd;) 125.312 Tj
-5.2213 -275.3075 Td
(10526 ) 31.328 Tj
-5.2213 -284.8008 Td
(10527   cmd = parsepipe\(ps, es\);) 167.0826 Tj
-5.2213 -294.2942 Td
(10528   while\(peek\(ps, es, "&"\)\){) 172.304 Tj
-5.2213 -303.7875 Td
(10529     gettoken\(ps, es, 0, 0\);) 172.304 Tj
-5.2213 -313.2809 Td
(10530     cmd = backcmd\(cmd\);) 151.4186 Tj
-5.2213 -322.7743 Td
(10531   }) 46.992 Tj
-5.2213 -332.2676 Td
(10532   if\(peek\(ps, es, ";"\)\){) 156.64 Tj
-5.2213 -341.761 Td
(10533     gettoken\(ps, es, 0, 0\);) 172.304 Tj
-5.2213 -351.2543 Td
(10534     cmd = listcmd\(cmd, parseline\(ps, es\)\);) 250.6239 Tj
-5.2213 -360.7477 Td
(10535   }) 46.992 Tj
-5.2213 -370.2411 Td
(10536   return cmd;) 99.2053 Tj
-5.2213 -379.7344 Td
(10537 }) 36.5493 Tj
-5.2213 -389.2278 Td
(10538 ) 31.328 Tj
-5.2213 -398.7211 Td
(10539 ) 31.328 Tj
-5.2213 -408.2145 Td
(10540 ) 31.328 Tj
-5.2213 -417.7079 Td
(10541 ) 31.328 Tj
-5.2213 -427.2012 Td
(10542 ) 31.328 Tj
-5.2213 -436.6946 Td
(10543 ) 31.328 Tj
-5.2213 -446.1879 Td
(10544 ) 31.328 Tj
-5.2213 -455.6813 Td
(10545 ) 31.328 Tj
-5.2213 -465.1747 Td
(10546 ) 31.328 Tj
-5.2213 -474.668 Td
(10547 ) 31.328 Tj
-5.2213 -484.1614 Td
(10548 ) 31.328 Tj
-5.2213 -493.6547 Td
(10549 ) 31.328 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 9) 172.304 Tj
-5.2213 -28.4801 Td
(10550 struct cmd*) 88.7626 Tj
-5.2213 -37.9735 Td
(10551 parsepipe\(char **ps, char *es\)) 187.968 Tj
-5.2213 -47.4668 Td
(10552 {) 36.5493 Tj
-5.2213 -56.9602 Td
(10553   struct cmd *cmd;) 125.312 Tj
-5.2213 -66.4535 Td
(10554 ) 31.328 Tj
-5.2213 -75.9469 Td
(10555   cmd = parseexec\(ps, es\);) 167.0826 Tj
-5.2213 -85.4403 Td
(10556   if\(peek\(ps, es, "|"\)\){) 156.64 Tj
-5.2213 -94.9336 Td
(10557     gettoken\(ps, es, 0, 0\);) 172.304 Tj
-5.2213 -104.427 Td
(10558     cmd = pipecmd\(cmd, parsepipe\(ps, es\)\);) 250.6239 Tj
-5.2213 -113.9203 Td
(10559   }) 46.992 Tj
-5.2213 -123.4137 Td
(10560   return cmd;) 99.2053 Tj
-5.2213 -132.9071 Td
(10561 }) 36.5493 Tj
-5.2213 -142.4004 Td
(10562 ) 31.328 Tj
-5.2213 -151.8938 Td
(10563 struct cmd*) 88.7626 Tj
-5.2213 -161.3871 Td
(10564 parseredirs\(struct cmd *cmd, char **ps, char *es\)) 287.1733 Tj
-5.2213 -170.8805 Td
(10565 {) 36.5493 Tj
-5.2213 -180.3739 Td
(10566   int tok;) 83.5413 Tj
-5.2213 -189.8672 Td
(10567   char *q, *eq;) 109.648 Tj
-5.2213 -199.3606 Td
(10568 ) 31.328 Tj
-5.2213 -208.8539 Td
(10569   while\(peek\(ps, es, "<>"\)\){) 177.5253 Tj
-5.2213 -218.3473 Td
(10570     tok = gettoken\(ps, es, 0, 0\);) 203.6319 Tj
-5.2213 -227.8407 Td
(10571     if\(gettoken\(ps, es, &q, &eq\) != 'a'\)) 240.1813 Tj
-5.2213 -237.334 Td
(10572       panic\("missing file for redirection"\);) 261.0666 Tj
-5.2213 -246.8274 Td
(10573     switch\(tok\){) 114.8693 Tj
-5.2213 -256.3207 Td
(10574     case '<':) 99.2053 Tj
-5.2213 -265.8141 Td
(10575       cmd = redircmd\(cmd, q, eq, O_RDONLY, 0\);) 271.5093 Tj
-5.2213 -275.3075 Td
(10576       break;) 93.984 Tj
-5.2213 -284.8008 Td
(10577     case '>':) 99.2053 Tj
-5.2213 -294.2942 Td
(10578       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) 318.5013 Tj
-5.2213 -303.7875 Td
(10579       break;) 93.984 Tj
-5.2213 -313.2809 Td
(10580     case '+':  // >>) 135.7546 Tj
-5.2213 -322.7743 Td
(10581       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) 318.5013 Tj
-5.2213 -332.2676 Td
(10582       break;) 93.984 Tj
-5.2213 -341.761 Td
(10583     }) 57.4347 Tj
-5.2213 -351.2543 Td
(10584   }) 46.992 Tj
-5.2213 -360.7477 Td
(10585   return cmd;) 99.2053 Tj
-5.2213 -370.2411 Td
(10586 }) 36.5493 Tj
-5.2213 -379.7344 Td
(10587 ) 31.328 Tj
-5.2213 -389.2278 Td
(10588 ) 31.328 Tj
-5.2213 -398.7211 Td
(10589 ) 31.328 Tj
-5.2213 -408.2145 Td
(10590 ) 31.328 Tj
-5.2213 -417.7079 Td
(10591 ) 31.328 Tj
-5.2213 -427.2012 Td
(10592 ) 31.328 Tj
-5.2213 -436.6946 Td
(10593 ) 31.328 Tj
-5.2213 -446.1879 Td
(10594 ) 31.328 Tj
-5.2213 -455.6813 Td
(10595 ) 31.328 Tj
-5.2213 -465.1747 Td
(10596 ) 31.328 Tj
-5.2213 -474.668 Td
(10597 ) 31.328 Tj
-5.2213 -484.1614 Td
(10598 ) 31.328 Tj
-5.2213 -493.6547 Td
(10599 ) 31.328 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Page: 115 115
%%BeginPageSetup
%%PageOrientation: Landscape
pdfStartPage
180 rotate
-612 -792 translate
0 0 612 792 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
180 3960 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 735.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 10) 177.5253 Tj
-5.2213 -28.4801 Td
(10600 struct cmd*) 88.7626 Tj
-5.2213 -37.9735 Td
(10601 parseblock\(char **ps, char *es\)) 193.1893 Tj
-5.2213 -47.4668 Td
(10602 {) 36.5493 Tj
-5.2213 -56.9602 Td
(10603   struct cmd *cmd;) 125.312 Tj
-5.2213 -66.4535 Td
(10604 ) 31.328 Tj
-5.2213 -75.9469 Td
(10605   if\(!peek\(ps, es, "\("\)\)) 156.64 Tj
-5.2213 -85.4403 Td
(10606     panic\("parseblock"\);) 156.64 Tj
-5.2213 -94.9336 Td
(10607   gettoken\(ps, es, 0, 0\);) 161.8613 Tj
-5.2213 -104.427 Td
(10608   cmd = parseline\(ps, es\);) 167.0826 Tj
-5.2213 -113.9203 Td
(10609   if\(!peek\(ps, es, "\)"\)\)) 156.64 Tj
-5.2213 -123.4137 Td
(10610     panic\("syntax - missing \)"\);) 198.4106 Tj
-5.2213 -132.9071 Td
(10611   gettoken\(ps, es, 0, 0\);) 161.8613 Tj
-5.2213 -142.4004 Td
(10612   cmd = parseredirs\(cmd, ps, es\);) 203.6319 Tj
-5.2213 -151.8938 Td
(10613   return cmd;) 99.2053 Tj
-5.2213 -161.3871 Td
(10614 }) 36.5493 Tj
-5.2213 -170.8805 Td
(10615 ) 31.328 Tj
-5.2213 -180.3739 Td
(10616 struct cmd*) 88.7626 Tj
-5.2213 -189.8672 Td
(10617 parseexec\(char **ps, char *es\)) 187.968 Tj
-5.2213 -199.3606 Td
(10618 {) 36.5493 Tj
-5.2213 -208.8539 Td
(10619   char *q, *eq;) 109.648 Tj
-5.2213 -218.3473 Td
(10620   int tok, argc;) 114.8693 Tj
-5.2213 -227.8407 Td
(10621   struct execcmd *cmd;) 146.1973 Tj
-5.2213 -237.334 Td
(10622   struct cmd *ret;) 125.312 Tj
-5.2213 -246.8274 Td
(10623 ) 31.328 Tj
-5.2213 -256.3207 Td
(10624   if\(peek\(ps, es, "\("\)\)) 151.4186 Tj
-5.2213 -265.8141 Td
(10625     return parseblock\(ps, es\);) 187.968 Tj
-5.2213 -275.3075 Td
(10626 ) 31.328 Tj
-5.2213 -284.8008 Td
(10627   ret = execcmd\(\);) 125.312 Tj
-5.2213 -294.2942 Td
(10628   cmd = \(struct execcmd*\)ret;) 182.7466 Tj
-5.2213 -303.7875 Td
(10629 ) 31.328 Tj
-5.2213 -313.2809 Td
(10630   argc = 0;) 88.7626 Tj
-5.2213 -322.7743 Td
(10631   ret = parseredirs\(ret, ps, es\);) 203.6319 Tj
-5.2213 -332.2676 Td
(10632   while\(!peek\(ps, es, "|\)&;"\)\){) 193.1893 Tj
-5.2213 -341.761 Td
(10633     if\(\(tok=gettoken\(ps, es, &q, &eq\)\) == 0\)) 261.0666 Tj
-5.2213 -351.2543 Td
(10634       break;) 93.984 Tj
-5.2213 -360.7477 Td
(10635     if\(tok != 'a'\)) 125.312 Tj
-5.2213 -370.2411 Td
(10636       panic\("syntax"\);) 146.1973 Tj
-5.2213 -379.7344 Td
(10637     cmd->argv[argc] = q;) 156.64 Tj
-5.2213 -389.2278 Td
(10638     cmd->eargv[argc] = eq;) 167.0826 Tj
-5.2213 -398.7211 Td
(10639     argc++;) 88.7626 Tj
-5.2213 -408.2145 Td
(10640     if\(argc >= MAXARGS\)) 151.4186 Tj
-5.2213 -417.7079 Td
(10641       panic\("too many args"\);) 182.7466 Tj
-5.2213 -427.2012 Td
(10642     ret = parseredirs\(ret, ps, es\);) 214.0746 Tj
-5.2213 -436.6946 Td
(10643   }) 46.992 Tj
-5.2213 -446.1879 Td
(10644   cmd->argv[argc] = 0;) 146.1973 Tj
-5.2213 -455.6813 Td
(10645   cmd->eargv[argc] = 0;) 151.4186 Tj
-5.2213 -465.1747 Td
(10646   return ret;) 99.2053 Tj
-5.2213 -474.668 Td
(10647 }) 36.5493 Tj
-5.2213 -484.1614 Td
(10648 ) 31.328 Tj
-5.2213 -493.6547 Td
(10649 ) 31.328 Tj
Q
Q
q
180 500 5760 3460 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 -0.8092 1 0 564.72 389.154] Tm
0 0 Td
/F8_0 8.7022 Tf
(4  9 17:56 2009  xv6/sh.c  Page 11) 177.5253 Tj
-5.2213 -28.4801 Td
(10650 // NUL-terminate all the counted strings.) 245.4026 Tj
-5.2213 -37.9735 Td
(10651 struct cmd*) 88.7626 Tj
-5.2213 -47.4668 Td
(10652 nulterminate\(struct cmd *cmd\)) 182.7466 Tj
-5.2213 -56.9602 Td
(10653 {) 36.5493 Tj
-5.2213 -66.4535 Td
(10654   int i;) 73.0986 Tj
-5.2213 -75.9469 Td
(10655   struct backcmd *bcmd;) 151.4186 Tj
-5.2213 -85.4403 Td
(10656   struct execcmd *ecmd;) 151.4186 Tj
-5.2213 -94.9336 Td
(10657   struct listcmd *lcmd;) 151.4186 Tj
-5.2213 -104.427 Td
(10658   struct pipecmd *pcmd;) 151.4186 Tj
-5.2213 -113.9203 Td
(10659   struct redircmd *rcmd;) 156.64 Tj
-5.2213 -123.4137 Td
(10660 ) 31.328 Tj
-5.2213 -132.9071 Td
(10661   if\(cmd == 0\)) 104.4266 Tj
-5.2213 -142.4004 Td
(10662     return 0;) 99.2053 Tj
-5.2213 -151.8938 Td
(10663 ) 31.328 Tj
-5.2213 -161.3871 Td
(10664   switch\(cmd->type\){) 135.7546 Tj
-5.2213 -170.8805 Td
(10665   case EXEC:) 93.984 Tj
-5.2213 -180.3739 Td
(10666     ecmd = \(struct execcmd*\)cmd;) 198.4106 Tj
-5.2213 -189.8672 Td
(10667     for\(i=0; ecmd->argv[i]; i++\)) 198.4106 Tj
-5.2213 -199.3606 Td
(10668       *ecmd->eargv[i] = 0;) 167.0826 Tj
-5.2213 -208.8539 Td
(10669     break;) 83.5413 Tj
-5.2213 -218.3473 Td
(10670 ) 31.328 Tj
-5.2213 -227.8407 Td
(10671   case REDIR:) 99.2053 Tj
-5.2213 -237.334 Td
(10672     rcmd = \(struct redircmd*\)cmd;) 203.6319 Tj
-5.2213 -246.8274 Td
(10673     nulterminate\(rcmd->cmd\);) 177.5253 Tj
-5.2213 -256.3207 Td
(10674     *rcmd->efile = 0;) 140.976 Tj
-5.2213 -265.8141 Td
(10675     break;) 83.5413 Tj
-5.2213 -275.3075 Td
(10676 ) 31.328 Tj
-5.2213 -284.8008 Td
(10677   case PIPE:) 93.984 Tj
-5.2213 -294.2942 Td
(10678     pcmd = \(struct pipecmd*\)cmd;) 198.4106 Tj
-5.2213 -303.7875 Td
(10679     nulterminate\(pcmd->left\);) 182.7466 Tj
-5.2213 -313.2809 Td
(10680     nulterminate\(pcmd->right\);) 187.968 Tj
-5.2213 -322.7743 Td
(10681     break;) 83.5413 Tj
-5.2213 -332.2676 Td
(10682 ) 31.328 Tj
-5.2213 -341.761 Td
(10683   case LIST:) 93.984 Tj
-5.2213 -351.2543 Td
(10684     lcmd = \(struct listcmd*\)cmd;) 198.4106 Tj
-5.2213 -360.7477 Td
(10685     nulterminate\(lcmd->left\);) 182.7466 Tj
-5.2213 -370.2411 Td
(10686     nulterminate\(lcmd->right\);) 187.968 Tj
-5.2213 -379.7344 Td
(10687     break;) 83.5413 Tj
-5.2213 -389.2278 Td
(10688 ) 31.328 Tj
-5.2213 -398.7211 Td
(10689   case BACK:) 93.984 Tj
-5.2213 -408.2145 Td
(10690     bcmd = \(struct backcmd*\)cmd;) 198.4106 Tj
-5.2213 -417.7079 Td
(10691     nulterminate\(bcmd->cmd\);) 177.5253 Tj
-5.2213 -427.2012 Td
(10692     break;) 83.5413 Tj
-5.2213 -436.6946 Td
(10693   }) 46.992 Tj
-5.2213 -446.1879 Td
(10694   return cmd;) 99.2053 Tj
-5.2213 -455.6813 Td
(10695 }) 36.5493 Tj
-5.2213 -465.1747 Td
(10696 ) 31.328 Tj
-5.2213 -474.668 Td
(10697 ) 31.328 Tj
-5.2213 -484.1614 Td
(10698 ) 31.328 Tj
-5.2213 -493.6547 Td
(10699 ) 31.328 Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
